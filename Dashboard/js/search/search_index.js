var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Agency.html",[0,0.01,1,1.822]],["body/classes/Agency.html",[0,0.019,1,3.726,2,2.155,3,0.273,4,0.242,5,0.242,6,3.887,7,0.599,8,1.799,9,0.242,10,0.861,11,5.786,12,7.017,13,7.017,14,7.017,15,7.017,16,7.017,17,0.514,18,5.724,19,0.926,20,0.862,21,5.724,22,0.559,23,0.022,24,0.715,25,0.422,26,0.559,27,4.55,28,1.164,29,4.55,30,5.724,31,2.892,32,1.036,33,7.097,34,4.55,35,4.341,36,5.724,37,5.724,38,1.455,39,4.89,40,4.55,41,5.724,42,5.724,43,4.55,44,2.263,45,0.273,46,3.887,47,4.55,48,4.55,49,4.55,50,4.55,51,4.55,52,0.05,53,0.05]],["title/injectables/AgencyService.html",[54,0.692,55,2.269]],["body/injectables/AgencyService.html",[0,0.018,1,2.277,3,0.271,4,0.239,5,0.239,7,0.75,9,0.239,17,0.511,20,0.766,22,0.699,23,0.022,24,0.65,25,0.342,26,0.699,32,1.03,45,0.271,52,0.049,53,0.049,54,1.092,55,3.581,56,1.888,57,3.849,58,1.03,59,6.548,60,1.063,61,2.694,62,2.005,63,2.614,64,4.505,65,2.521,66,2.249,67,2.694,68,2.694,69,0.938,70,4.505,71,1.03,72,2.07,73,2.532,74,2.521,75,4.505,76,2.532,77,1.842,78,2.532,79,2.532,80,2.532,81,2.249,82,2.775,83,0.588,84,1.349,85,0.515,86,2.005,87,2.532,88,1.21,89,3.094,90,1.59,91,1.505,92,0.722,93,1.084,94,1.146,95,1.084,96,3.417,97,0.97,98,0.635,99,1.268,100,2.836,101,4.505,102,2.005,103,2.532,104,1.026,105,1.888,106,1.888,107,2.005,108,2.532,109,1.888,110,2.005,111,2.532,112,2.532,113,2.532,114,2.005,115,2.532,116,2.249,117,2.532,118,2.005,119,2.005,120,2.005,121,2.005,122,2.005,123,0.553,124,1.888,125,1.349,126,0.635,127,2.134,128,2.134,129,2.134,130,2.134,131,2.134,132,2.134,133,2.134]],["title/components/AppComponent.html",[134,0.352,135,1.022]],["body/components/AppComponent.html",[0,0.014,3,0.283,4,0.251,5,0.251,9,0.251,10,0.881,17,0.387,19,0.579,20,0.782,22,0.579,23,0.022,24,0.727,25,0.352,26,0.579,45,0.283,52,0.051,53,0.051,58,1.06,71,0.854,83,0.525,85,0.538,91,1.955,98,0.665,99,0.959,123,0.579,134,0.622,135,1.887,136,2.066,137,1.761,138,1.761,139,1.761,140,4.028,141,1.761,142,2.216,143,2.108,144,1.752,145,5.853,146,4.371,147,6.656,148,4.715,149,2.923,150,5.853,151,4.715,152,1.664,153,1.761,154,1.761,155,1.575,156,4.715,157,1.761,158,1.955,159,2.185,160,1.761,161,2.104,162,1.761,163,1.761,164,1.266,165,1.761,166,1.412,167,1.761,168,1.761,169,1.412,170,1.002,171,2.377,172,1.412,173,2.185,174,1.412,175,2.185,176,1.412,177,1.761,178,1.412,179,1.761,180,1.412,181,1.074,182,1.337,183,1.333,184,1.337,185,1.412,186,1.412,187,1.412,188,1.491,189,1.761,190,1.761]],["title/modules/AppModule.html",[191,2.734,192,2.269]],["body/modules/AppModule.html",[0,0.01,3,0.202,4,0.178,5,0.178,23,0.022,35,2.544,45,0.202,52,0.041,53,0.041,83,0.671,84,1.004,85,0.383,134,0.68,135,1.974,155,1.121,164,1.747,166,1.898,169,1.948,170,0.876,172,1.948,174,1.948,176,1.948,178,1.948,180,1.948,181,0.764,182,1.845,183,1.065,184,1.845,185,1.948,186,1.948,187,1.004,188,1.479,192,4.682,193,1.815,194,2.944,195,2.866,196,2.866,197,2.866,198,2.866,199,2.866,200,3.69,201,2.822,202,2.215,203,2.544,204,2.304,205,3.355,206,4.676,207,2.944,208,3.995,209,3.546,210,3.355,211,3.546,212,2.544,213,2.944,214,4.676,215,5.383,216,1.253,217,3.995,218,3.355,219,1.952,220,3.995,221,2.544,222,5.383,223,3.355,224,4.676,225,3.355,226,1.253,227,4.676,228,3.355,229,3.355,230,4.676,231,3.355,232,4.676,233,2.544,234,5.383,235,3.355,236,4.676,237,3.355,238,2.544,239,4.676,240,3.355,241,4.676,242,3.355,243,4.676,244,3.355,245,4.676,246,3.355,247,4.676,248,3.355,249,4.676,250,3.355,251,4.676,252,3.355,253,4.676,254,3.355,255,1.406,256,4.676,257,1.695,258,1.695,259,4.676,260,2.544,261,4.676,262,3.355,263,4.676,264,3.355,265,2.866,266,3.355,267,2.544,268,3.355,269,3.355,270,2.544,271,4.676,272,5.823,273,2.544,274,4.676,275,3.355,276,3.355,277,3.355,278,2.866,279,4.78,280,3.355,281,3.355,282,2.544,283,2.544,284,2.544,285,5.383,286,4.676,287,2.304,288,2.304,289,4.676,290,2.544,291,3.355,292,2.544,293,3.355,294,3.355,295,1.815,296,2.866,297,3.355,298,3.355,299,4.014,300,3.355,301,1.493,302,5.833,303,3.355,304,3.355,305,2.721,306,4.676,307,3.355]],["title/modules/AppServerModule.html",[191,2.734,308,2.475]],["body/modules/AppServerModule.html",[0,0.015,3,0.32,4,0.283,5,0.283,23,0.022,45,0.32,52,0.055,53,0.055,69,0.8,83,0.635,85,0.607,135,2.055,192,4.517,193,2.877,194,3.963,202,2.982,203,4.033,204,3.652,208,5.379,209,4.775,211,4.033,213,3.963,265,4.544,308,4.977,309,4.544,310,5.319,311,5.319,312,5.319,313,6.296,314,6.296,315,5.319,316,2.519,317,5.319,318,5.319,319,5.319]],["title/guards/AuthGuard.html",[279,2.475,320,2.269]],["body/guards/AuthGuard.html",[0,0.016,3,0.271,4,0.24,5,0.24,7,0.75,9,0.24,17,0.512,20,0.699,22,0.699,23,0.022,24,0.65,25,0.342,26,0.699,45,0.271,52,0.049,53,0.049,54,1.093,58,1.031,60,0.769,69,0.857,71,0.817,72,1.972,83,0.588,85,0.515,88,1.211,90,1.592,91,1.506,92,0.913,97,1.117,98,0.636,99,1.158,134,0.556,149,2.97,152,2.009,155,1.506,170,0.986,201,3.117,219,2.624,279,3.909,302,5.771,320,2.839,321,4.51,322,3.853,323,3.853,324,4.51,325,4.863,326,2.533,327,4.409,328,4.498,329,2.59,330,3.08,331,4.51,332,6.551,333,6.898,334,6.551,335,4.51,336,2.386,337,3.583,338,4.124,339,2.876,340,4.317,341,6.551,342,1.972,343,3.583,344,2.329,345,1.8,346,4.283,347,2.746,348,2.25,349,5.692,350,5.692,351,6.237,352,2.136,353,3.853,354,1.211,355,4.51,356,4.51,357,3.853,358,4.51]],["title/interfaces/AuthResponse.html",[359,1.14,360,2.097]],["body/interfaces/AuthResponse.html",[0,0.015,3,0.233,4,0.206,5,0.206,9,0.206,10,0.777,17,0.318,19,0.889,23,0.022,25,0.349,28,1.051,31,2.933,32,0.703,44,1.535,45,0.349,52,0.045,53,0.045,60,1.129,66,1.535,69,0.584,74,1.929,77,0.987,83,0.607,84,1.162,85,0.443,92,0.93,97,1.129,98,0.547,123,0.635,126,0.872,134,0.604,142,1.162,143,1.101,144,1.162,149,2.593,152,2.184,155,1.297,164,1.042,170,0.873,201,2.754,216,1.45,219,2.259,301,1.728,326,1.728,327,4.17,328,2.666,329,2.295,330,2.1,336,1.627,337,2.444,338,3.895,342,1.227,343,2.444,344,1.45,345,1.956,346,2.666,347,1.627,348,1.535,354,1.042,359,1.633,360,3.377,361,2.259,362,2.666,363,4.692,364,4.692,365,1.725,366,2.444,367,3.051,368,1.627,369,2.299,370,2.446,371,1.297,372,2.165,373,1.627,374,2.944,375,1.227,376,2.944,377,2.666,378,2.666,379,2.944,380,1.45,381,2.446,382,4.402,383,3.917,384,2.1,385,2.944,386,2.944,387,2.944,388,2.944,389,2.259,390,2.666,391,2.259,392,2.259,393,1.728,394,2.794,395,2.666,396,3.547,397,2.944,398,1.535,399,1.45,400,2.666,401,2.944,402,3.547,403,2.944,404,1.297,405,1.227,406,2.944,407,3.377,408,3.917,409,2.165,410,2.944,411,4.402,412,2.944,413,2.944,414,2.944,415,1.45,416,2.944,417,2.944,418,1.37,419,2.944,420,2.944,421,2.944,422,2.944,423,2.944,424,1.823,425,2.944,426,2.944,427,2.794,428,3.917,429,2.944,430,2.944,431,2.666,432,2.944,433,2.944,434,2.944,435,2.944,436,2.944,437,3.917,438,2.944,439,2.944,440,2.944,441,2.944,442,1.627,443,1.535,444,1.297,445,1.728,446,1.962,447,1.728,448,1.627,449,1.227,450,1.45,451,1.535,452,2.666,453,3.251,454,1.839,455,2.666,456,2.944]],["title/injectables/AuthService.html",[54,0.692,201,1.604]],["body/injectables/AuthService.html",[0,0.01,3,0.209,4,0.185,5,0.185,7,0.779,9,0.185,10,0.721,17,0.45,19,0.674,20,0.822,22,0.762,23,0.022,24,0.708,25,0.33,26,0.674,32,1.268,45,0.209,52,0.042,53,0.042,54,0.92,56,1.457,58,0.868,60,1.093,61,2.27,62,1.547,63,2.394,65,2.316,66,1.895,67,2.27,68,2.27,69,0.933,71,0.868,72,1.515,73,2.133,74,2.316,76,2.133,77,1.766,78,2.133,79,2.133,80,2.133,81,1.895,82,2.441,83,0.531,84,1.041,85,0.397,86,1.547,87,2.133,88,0.933,90,1.227,91,1.161,92,0.768,93,0.837,95,0.837,97,1.093,98,0.49,99,1.262,102,1.547,103,2.133,104,0.792,105,1.457,106,1.457,107,1.547,108,2.133,109,1.457,110,1.547,111,2.133,112,2.133,113,2.133,114,1.547,115,2.133,116,1.895,117,2.924,118,1.547,119,1.547,120,1.547,121,1.547,122,1.547,123,0.762,124,1.457,125,1.041,126,0.773,134,0.468,152,2.087,153,2.316,154,2.593,170,0.721,201,2.133,278,2.97,320,3.017,325,4.094,327,3.017,336,2.806,337,3.017,338,4.277,339,2.422,340,3.634,342,1.515,343,3.017,344,2.208,345,1.515,348,1.895,360,2.022,384,3.622,396,2.387,424,1.936,427,2.593,457,2.97,458,2.769,459,5.485,460,5.485,461,5.485,462,5.613,463,5.485,464,4.792,465,4.792,466,3.476,467,4.792,468,3.476,469,4.792,470,4.792,471,4.792,472,4.792,473,4.094,474,6.202,475,3.476,476,2.133,477,3.476,478,4.792,479,3.476,480,3.017,481,5.485,482,5.912,483,4.792,484,3.476,485,4.792,486,5.485,487,3.476,488,3.476,489,5.485,490,3.476,491,3.476,492,3.476,493,3.476,494,3.476,495,1.547,496,3.476,497,3.476,498,3.476,499,3.476,500,3.476,501,3.476,502,3.476,503,3.476,504,3.476,505,3.476]],["title/components/LoginComponent.html",[134,0.352,164,0.968]],["body/components/LoginComponent.html",[0,0.011,3,0.147,4,0.13,5,0.13,7,0.591,9,0.13,10,0.558,17,0.368,19,0.835,20,0.764,22,0.551,23,0.022,24,0.615,25,0.374,26,0.551,28,0.913,31,2.867,32,0.442,44,1.467,45,0.27,52,0.032,53,0.032,58,0.672,60,1.115,66,1.467,69,0.558,71,0.812,74,1.385,77,1.499,83,0.529,84,0.731,85,0.279,92,0.909,97,0.967,98,0.344,123,0.615,126,0.706,134,0.554,135,0.692,136,1.31,137,0.912,138,0.912,139,0.912,141,0.912,142,2.019,143,1.912,144,1.111,146,1.677,149,2.546,152,1.584,155,0.816,157,0.912,158,1.239,159,1.675,160,0.912,161,1.584,162,0.912,163,0.912,164,1.345,165,0.912,166,0.731,167,0.912,168,0.912,169,0.731,170,0.955,171,1.675,172,0.731,173,1.385,174,0.731,175,1.385,176,0.731,177,0.912,178,0.731,179,0.912,180,0.731,181,0.556,182,0.692,183,0.845,184,0.692,185,0.731,186,0.731,187,0.731,188,0.772,189,0.912,190,0.912,201,2.624,216,0.912,219,1.421,238,2.813,255,1.88,295,2.427,301,1.651,323,2.086,326,1.651,327,4.279,328,2.547,329,2.243,330,2.007,336,1.555,337,2.335,338,1.537,342,0.772,343,2.335,344,0.912,345,1.864,346,1.677,347,1.555,348,1.467,354,0.996,359,1.173,360,2.158,362,1.677,363,1.852,364,1.852,365,1.498,366,1.537,367,2.947,368,1.023,369,2.23,370,2.402,371,0.816,372,1.555,373,1.023,374,2.813,375,1.173,376,3.402,377,1.677,378,2.547,379,3.402,380,1.871,381,2.125,382,4.086,383,4.086,384,1.321,385,1.852,386,1.852,387,3.402,388,3.402,389,2.158,390,2.547,391,2.158,392,2.61,393,2.624,394,2.711,395,3.08,396,3.44,397,2.813,398,1.467,399,1.385,400,1.677,401,1.852,402,2.547,403,1.852,404,1.673,405,1.584,406,1.852,407,3.691,408,2.813,409,1.555,410,1.852,411,4.607,412,1.852,413,1.852,414,2.813,415,1.675,416,2.813,417,2.813,418,1.31,419,2.813,420,2.813,421,2.813,422,2.813,423,2.813,424,1.31,425,1.852,426,1.852,427,2.007,428,2.813,429,1.852,430,1.852,431,1.677,432,1.852,433,1.852,434,1.852,435,1.852,436,1.852,437,2.813,438,1.852,439,1.852,440,1.852,441,1.852,442,1.023,443,2.402,444,2.27,445,1.087,446,1.234,447,1.087,448,1.555,449,1.921,450,2.323,451,1.981,452,2.547,453,3.391,454,2.552,455,2.547,456,1.852,506,0.965,507,3.169,508,3.71,509,3.71,510,2.442,511,2.442,512,2.442,513,1.852,514,2.442,515,2.442,516,2.442,517,2.442,518,2.442,519,1.156,520,4.471,521,2.813,522,5.388,523,5.01,524,3.71,525,2.659,526,2.887,527,2.624,528,2.552,529,2.704,530,2.824,531,2.769,532,2.46,533,3.096,534,2.402,535,2.659,536,2.086,537,2.813,538,2.398,539,2.547,540,3.169,541,1.88,542,2.258,543,2.442,544,3.08,545,2.74,546,2.267,547,2.267,548,3.169,549,3.832,550,2.711,551,1.156,552,2.442,553,2.335,554,2.547,555,3.08,556,2.547,557,3.08,558,1.677,559,2.442,560,2.442,561,1.852,562,1.156,563,1.234,564,1.321,565,1.321,566,1.234,567,1.234,568,2.427,569,2.442,570,1.023,571,1.677,572,3.08,573,1.537,574,2.813,575,2.442,576,2.442,577,2.442,578,1.321,579,1.087,580,1.421,581,2.335,582,1.852,583,1.852,584,2.813,585,1.156,586,1.677,587,2.547,588,3.169,589,2.086,590,1.537,591,2.086,592,1.677,593,1.677,594,2.442,595,1.156,596,5.388]],["title/interfaces/MostUsedTransportResponse.html",[359,1.14,597,2.475]],["body/interfaces/MostUsedTransportResponse.html",[0,0.016,3,0.252,4,0.223,5,0.223,9,0.223,10,0.818,17,0.345,19,0.741,23,0.022,25,0.362,32,1.248,38,1.622,45,0.252,52,0.047,53,0.047,54,1.044,60,0.716,63,2.031,65,2.031,69,0.632,72,1.72,73,1.869,74,2.252,76,1.869,77,1.752,78,1.869,79,1.869,80,1.869,81,1.66,82,2.421,83,0.593,84,1.257,85,0.48,86,1.869,87,2.421,88,1.128,90,1.483,91,1.403,92,0.673,93,1.011,94,1.068,95,1.011,97,0.927,98,0.592,99,1.481,100,4.016,102,3.013,103,2.421,104,0.956,105,1.76,106,1.76,107,1.869,108,2.421,109,1.76,110,1.869,111,2.421,112,2.421,113,2.421,114,1.869,115,2.421,116,2.15,117,2.421,118,1.869,119,1.869,120,1.869,121,1.869,122,1.869,123,0.668,124,1.76,125,1.257,126,0.767,127,1.989,128,1.989,129,1.989,130,1.989,131,1.989,132,1.989,133,1.989,187,1.806,301,2.421,359,1.328,361,2.444,394,2.943,513,4.125,597,3.735,598,3.185,599,4.838,600,2.748,601,2.122,602,3.588,603,1.869,604,3.588,605,2.444,606,4.647,607,3.939,608,3.164,609,3.224,610,3.588,611,3.588,612,4.647,613,3.588,614,3.588,615,4.647,616,3.588,617,3.588,618,4.647,619,3.185,620,3.588,621,3.588,622,3.185,623,2.272,624,3.588,625,3.588,626,2.943,627,3.588,628,3.185,629,1.66,630,3.185,631,2.884,632,3.588,633,3.588,634,3.588]],["title/components/NavMenuComponent.html",[134,0.352,166,1.079]],["body/components/NavMenuComponent.html",[0,0.013,3,0.194,4,0.172,5,0.172,7,0.6,9,0.172,10,0.685,17,0.433,19,0.849,20,0.791,22,0.648,23,0.022,24,0.69,25,0.387,26,0.559,28,1.073,31,3.253,32,0.824,45,0.194,52,0.04,53,0.04,58,0.824,60,1.098,71,0.824,83,0.514,85,0.369,92,0.918,97,0.776,98,0.455,123,0.648,134,0.612,135,0.916,136,1.607,137,1.206,138,1.206,139,1.206,141,1.206,142,2.125,143,2.002,144,1.363,157,1.206,158,1.913,159,1.7,160,1.206,161,1.811,162,1.206,163,1.206,164,0.867,165,1.206,166,1.714,167,2.582,168,1.206,169,0.967,170,0.862,171,1.969,172,0.967,173,1.7,174,0.967,175,1.7,176,0.967,177,1.206,178,0.967,179,1.206,180,0.967,181,0.736,182,0.916,183,1.037,184,0.916,185,0.967,186,0.967,187,0.967,188,1.909,189,1.206,190,1.206,201,2.865,219,1.879,267,4.985,329,1.8,330,1.747,336,1.908,353,3.89,370,2.545,371,1.079,375,1.44,389,2.649,390,3.932,391,2.649,392,3.068,393,1.438,394,3.098,395,3.621,399,2.496,400,2.218,402,3.127,405,1.44,407,2.649,415,1.206,427,2.853,444,1.761,449,1.811,450,1.969,452,3.127,453,3.801,454,2.712,455,3.127,458,2.477,462,5.5,495,2.027,506,1.277,507,3.89,513,2.449,525,2.21,526,2.4,527,1.438,528,1.53,529,2.347,530,2.027,531,2.027,532,1.8,533,2.86,534,1.8,535,1.354,538,2.027,541,2.21,542,2.531,545,1.908,546,1.632,551,1.53,570,1.354,578,1.747,579,2.347,580,1.879,581,3.32,582,2.449,583,2.449,585,1.53,586,2.218,587,3.127,588,3.89,589,2.759,590,2.033,591,2.759,593,2.218,635,5.616,636,2.759,637,4.553,638,5.274,639,4.553,640,6.038,641,5.274,642,3.23,643,4.553,644,3.23,645,3.23,646,3.23,647,3.23,648,3.23,649,4.553,650,4.553,651,3.127,652,3.127,653,3.23,654,3.23,655,3.23,656,3.23,657,3.23,658,3.23,659,3.23,660,3.23,661,3.23,662,3.23,663,3.23,664,3.23,665,3.23,666,3.23,667,3.23,668,2.449,669,2.759,670,3.23,671,4.553,672,2.759,673,2.759,674,4.553,675,4.553,676,5.274,677,3.23,678,4.505,679,4.553,680,3.23,681,3.23,682,3.23,683,3.23,684,2.759,685,1.879,686,1.879,687,3.23,688,3.23,689,3.23,690,3.23,691,3.23]],["title/classes/Route.html",[0,0.01,170,0.542]],["body/classes/Route.html",[0,0.019,1,3.718,2,1.903,3,0.241,4,0.213,5,0.213,7,0.529,8,2.089,9,0.213,10,0.795,11,5.825,17,0.484,19,0.906,20,0.868,22,0.494,23,0.022,24,0.744,25,0.428,26,0.494,28,1.276,38,1.78,45,0.241,46,3.432,52,0.046,53,0.046,58,0.957,71,0.727,83,0.474,99,1.075,104,1.203,126,0.745,161,1.67,170,1.11,181,0.915,607,3.074,623,2.858,629,2.334,692,3.432,693,5.903,694,3.525,695,6.818,696,6.818,697,6.818,698,2.833,699,6.271,700,5.283,701,2.803,702,5.283,703,4.007,704,4.017,705,4.017,706,4.017,707,5.283,708,3.074,709,3.649,710,3.649,711,4.017,712,4.017,713,5.283,714,5.283,715,4.017,716,4.514,717,4.514,718,4.017,719,3.628,720,4.017,721,5.283,722,4.514,723,5.283,724,2.759,725,4.017,726,4.017,727,4.017,728,4.017,729,5.283,730,4.017,731,4.017,732,4.017,733,4.017,734,4.017,735,4.017,736,5.283,737,4.017,738,4.017,739,4.017]],["title/components/RouteCreateComponent.html",[134,0.352,169,1.079]],["body/components/RouteCreateComponent.html",[0,0.012,1,2.925,3,0.298,4,0.154,5,0.154,7,0.382,9,0.154,10,0.634,17,0.407,20,0.785,22,0.356,23,0.022,24,0.744,25,0.363,26,0.356,28,0.857,38,1.624,44,1.665,45,0.174,52,0.037,53,0.037,55,4.099,58,0.763,60,0.846,69,0.82,71,0.899,83,0.594,85,0.331,88,0.778,89,1.989,92,0.873,93,1.311,94,1.385,95,1.311,96,4.843,97,0.929,98,0.408,104,1.318,123,0.356,126,0.7,134,0.59,135,0.821,136,1.487,137,1.082,138,1.082,139,1.082,141,1.082,142,2.079,143,1.969,144,1.261,149,2.809,153,1.853,154,1.853,155,0.967,157,1.082,158,1.82,159,1.573,160,1.082,161,1.723,162,1.082,163,1.082,164,0.778,165,1.082,166,0.867,167,1.082,168,1.082,169,1.631,170,1.076,171,1.853,172,0.867,173,1.573,174,0.867,175,1.573,176,0.867,177,1.082,178,0.867,179,1.082,180,0.867,181,1.13,182,0.821,183,0.959,184,0.821,185,0.867,186,0.867,187,0.867,188,1.332,189,1.082,190,1.082,216,1.082,226,1.573,284,4.938,305,3.17,316,1.372,345,1.83,352,1.995,354,1.131,365,1.658,367,1.372,368,1.214,375,1.332,380,2.47,381,1.995,404,1.82,405,1.91,409,2.677,415,1.853,418,2.044,443,1.145,444,1.658,449,0.916,458,1.962,476,1.874,495,1.874,506,1.145,519,1.372,525,2.426,526,2.532,528,1.372,529,1.289,530,1.289,531,2.209,532,1.665,534,1.145,535,1.214,538,2.209,541,1.214,542,1.214,545,2.08,547,1.464,551,1.372,562,1.372,563,1.464,564,2.279,565,1.567,566,1.464,567,1.464,568,2.685,570,1.214,578,1.567,579,1.289,585,1.372,595,1.372,600,2.128,601,1.464,603,3.015,631,3.408,685,1.685,686,1.685,698,1.665,740,4.099,741,1.823,742,3.408,743,2.892,744,3.764,745,2.948,746,3.17,747,2.475,748,2.772,749,3.523,750,2.475,751,1.923,752,2.128,753,2.128,754,2.279,755,2.45,756,2.581,757,2.279,758,2.475,759,2.279,760,1.874,761,2.279,762,2.279,763,2.279,764,2.475,765,2.897,766,2.128,767,1.665,768,1.995,769,2.279,770,2.475,771,2.279,772,2.948,773,2.475,774,2.128,775,3.598,776,2.45,777,2.45,778,2.897,779,2.128,780,2.897,781,2.279,782,2.128,783,1.464,784,1.567,785,1.685,786,1.372,787,2.197,788,2.475,789,1.989,790,2.475,791,2.475,792,2.897,793,2.897,794,2.897,795,2.897,796,2.897,797,2.897,798,1.685,799,1.567,800,3.43,801,3.194,802,3.598,803,3.598,804,1.823,805,1.823,806,2.197,807,1.823,808,1.823,809,1.567,810,1.989,811,1.823,812,1.685,813,1.685,814,1.685,815,1.464,816,3.43,817,3.194,818,1.823,819,1.823]],["title/components/RouteDetailsComponent.html",[134,0.352,172,1.079]],["body/components/RouteDetailsComponent.html",[0,0.009,3,0.273,4,0.108,5,0.108,7,0.267,8,1.27,9,0.108,10,0.483,17,0.327,19,0.249,20,0.826,22,0.49,23,0.022,24,0.601,25,0.386,26,0.49,28,0.413,32,0.952,38,0.817,45,0.122,52,0.028,53,0.028,58,0.582,60,1.096,69,0.791,71,0.997,72,1.261,77,0.516,83,0.552,85,0.232,88,0.545,92,0.916,93,1.266,94,1.337,95,1.266,97,0.897,98,0.286,99,0.413,104,1.34,123,0.49,126,0.805,134,0.514,135,0.575,136,1.134,137,0.758,138,0.758,139,0.758,141,0.758,142,1.965,143,1.843,144,0.962,146,1.393,152,0.716,153,1.964,154,1.964,155,0.678,157,0.758,158,1.073,159,1.2,160,0.758,161,1.663,162,0.758,163,0.758,164,0.545,165,0.758,166,0.607,167,0.758,168,0.758,169,0.607,170,1.075,171,1.489,172,1.358,173,1.2,174,0.607,175,1.2,176,0.607,177,0.758,178,0.607,179,0.758,180,0.607,181,1.34,182,0.575,183,1.52,184,0.575,185,0.607,186,0.607,187,0.607,188,0.642,189,0.758,190,0.758,202,2.341,220,5.026,221,1.539,226,2.133,255,2.204,257,1.025,258,1.025,283,5.131,299,1.869,316,3.161,329,1.794,342,1.944,344,1.964,345,1.261,347,1.347,348,1.27,352,1.522,354,0.863,365,1.332,369,2.2,375,1.016,393,1.43,404,1.515,405,1.663,415,0.758,424,1.408,444,2.013,449,0.642,458,2.473,476,1.43,506,0.802,525,2.466,526,2.395,529,2.2,530,2.2,531,2.019,532,2.079,533,1.522,534,1.577,536,1.734,538,2.019,539,1.393,541,0.85,542,0.85,545,0.85,546,1.025,550,1.098,551,1.889,561,1.539,562,0.961,563,1.025,564,1.738,565,1.098,566,2.016,567,1.025,568,2.158,570,1.347,571,1.393,578,1.738,579,1.43,580,1.869,609,2.657,629,0.802,686,1.869,698,2.178,701,2.204,708,1.869,709,1.181,710,1.181,719,2.206,740,4.259,748,2.466,752,1.624,754,1.738,768,2.149,769,2.454,774,1.624,783,1.025,786,0.961,804,1.277,809,1.738,811,1.277,812,1.181,813,1.181,814,1.181,815,1.025,818,1.277,820,1.539,821,2.706,822,3.408,823,2.745,824,2.511,825,2.511,826,2.511,827,2.321,828,3.703,829,3.025,830,3.025,831,3.025,832,2.856,833,3.44,834,3.213,835,2.856,836,2.856,837,3.213,838,1.393,839,2.618,840,2.618,841,3.423,842,3.213,843,2.321,844,3.205,845,2.016,846,3.213,847,3.213,848,3.213,849,3.205,850,3.596,851,2.029,852,2.023,853,1.624,854,2.023,855,3.06,856,2.023,857,2.64,858,2.029,859,3.025,860,3.213,861,2.029,862,2.029,863,2.023,864,1.738,865,2.029,866,2.029,867,1.869,868,2.023,869,2.023,870,2.023,871,3.213,872,2.029,873,1.393,874,1.869,875,2.029,876,1.869,877,2.023,878,2.023,879,2.023,880,2.029,881,2.845,882,2.023,883,2.029,884,1.738,885,1.869,886,2.023,887,2.023,888,1.869,889,1.869,890,1.869,891,1.869,892,1.869,893,1.869,894,1.869,895,2.64,896,2.029,897,1.869,898,1.734,899,2.029,900,1.869,901,2.029,902,2.029,903,2.437,904,2.856,905,2.437,906,2.745,907,2.029,908,3.213,909,2.029,910,1.869,911,1.738,912,1.522,913,0.961,914,1.098,915,1.098,916,1.181,917,1.098,918,2.029,919,2.029,920,2.029,921,2.029,922,3.213,923,2.029,924,2.029,925,2.029,926,2.029,927,2.029,928,1.181,929,1.734,930,1.393,931,1.393,932,2.023,933,2.023,934,2.023,935,2.856,936,3.31,937,2.023,938,2.023,939,2.029,940,1.539,941,1.539,942,2.029,943,1.539,944,2.029,945,2.029,946,2.029,947,1.277,948,2.029,949,3.876,950,2.029,951,2.029,952,1.277,953,1.277,954,1.277,955,1.539,956,1.277,957,2.029,958,2.029,959,1.181,960,1.181,961,2.023,962,1.277,963,1.181,964,1.277,965,1.277,966,1.277,967,1.277,968,2.437,969,1.539,970,1.277,971,1.43,972,1.277,973,1.277,974,1.277,975,1.277,976,1.277,977,1.539,978,1.539,979,1.539,980,1.539,981,1.539,982,1.539,983,2.029,984,3.213,985,2.029,986,3.213,987,3.213,988,3.408,989,2.745,990,3.213,991,3.213,992,3.213,993,2.437,994,1.347,995,2.029,996,3.213,997,2.029,998,1.734,999,3.989,1000,2.029,1001,2.029,1002,2.029,1003,2.029,1004,3.025,1005,1.393,1006,1.393,1007,2.029,1008,1.539,1009,2.029,1010,1.734,1011,2.029,1012,3.213,1013,2.029,1014,3.408,1015,2.029]],["title/components/RouteEditComponent.html",[134,0.352,174,1.079]],["body/components/RouteEditComponent.html",[0,0.012,1,2.857,3,0.288,4,0.145,5,0.145,7,0.36,9,0.145,10,0.608,17,0.394,20,0.788,22,0.336,23,0.022,24,0.733,25,0.368,26,0.336,28,0.977,38,1.598,44,1.596,45,0.164,52,0.035,53,0.035,55,4.039,58,0.731,60,0.904,69,0.851,71,0.869,83,0.607,85,0.312,89,1.878,92,0.906,93,1.361,94,1.438,95,1.361,96,4.766,97,1.009,98,0.385,104,1.288,123,0.336,126,0.747,134,0.578,135,0.775,136,1.425,137,1.021,138,1.021,139,1.021,141,1.021,142,2.06,143,1.951,144,1.209,149,2.774,153,1.792,154,1.792,155,1.349,157,1.021,158,1.77,159,1.508,160,1.021,161,1.676,162,1.021,163,1.021,164,0.734,165,1.021,166,0.819,167,1.021,168,1.021,169,0.819,170,1.09,171,1.792,172,0.819,173,1.508,174,1.587,175,1.508,176,0.819,177,1.021,178,0.819,179,1.021,180,0.819,181,1.093,182,0.775,183,0.919,184,0.775,185,0.819,186,0.819,187,0.819,188,0.865,189,1.021,190,1.021,216,1.021,226,1.508,257,1.382,258,1.382,290,4.949,329,1.081,345,1.788,347,1.146,348,1.081,352,1.912,354,1.084,365,1.603,367,1.295,368,1.146,369,2.517,375,1.277,380,2.437,381,1.912,404,1.77,405,1.871,409,2.634,415,1.792,418,1.996,424,0.965,443,1.081,444,1.603,449,0.865,458,2.34,476,1.217,495,1.217,506,1.081,519,1.295,525,2.37,526,2.48,528,1.295,529,1.217,530,1.217,531,2.136,532,1.596,534,1.081,535,1.146,538,2.136,541,1.146,542,1.146,545,2.012,547,1.382,551,1.295,562,1.295,563,1.382,564,2.184,565,1.479,566,1.382,567,1.382,568,2.597,570,1.146,578,1.479,579,1.217,585,1.295,595,1.295,603,2.981,631,3.296,685,1.591,686,1.591,698,1.596,740,4.108,745,2.868,746,3.084,748,2.735,749,3.471,751,1.871,752,2.679,753,2.04,754,2.184,755,2.349,756,2.511,757,2.184,759,2.184,760,1.797,761,2.184,762,2.184,763,2.184,766,1.382,767,1.081,768,1.295,769,2.184,771,2.184,772,2.868,774,2.679,775,3.449,776,2.349,777,2.349,779,2.04,781,2.184,782,2.04,783,1.382,784,1.479,785,1.591,786,1.295,787,2.074,788,2.336,789,1.878,790,2.336,791,2.336,798,1.591,799,1.479,800,3.337,801,3.062,802,3.449,803,3.449,805,1.721,806,2.074,807,1.721,808,1.721,809,1.479,810,1.878,811,1.721,812,1.591,813,1.591,814,1.591,815,1.382,816,3.337,817,3.062,819,1.721,821,2.273,838,1.878,839,1.217,840,2.136,841,1.591,843,2.349,845,1.382,900,3.084,914,1.479,915,1.479,917,1.479,928,1.591,929,2.336,930,1.878,932,1.721,933,1.721,934,1.721,935,1.721,936,1.721,937,1.721,938,1.721,1016,1.878,1017,3.64,1018,3.062,1019,3.64,1020,4.038,1021,2.734,1022,2.734,1023,2.734,1024,2.734,1025,2.734,1026,2.336,1027,2.734,1028,2.734,1029,2.734,1030,1.295,1031,1.591,1032,1.721,1033,2.734,1034,2.734,1035,2.734,1036,2.734,1037,2.734,1038,2.734,1039,2.734,1040,2.734,1041,2.734,1042,2.734,1043,2.734,1044,2.336,1045,2.336]],["title/components/RouteManagementComponent.html",[134,0.352,176,1.079]],["body/components/RouteManagementComponent.html",[0,0.011,1,2.334,3,0.154,4,0.245,5,0.136,7,0.507,9,0.204,10,0.579,17,0.379,19,0.473,20,0.812,22,0.473,23,0.022,24,0.704,25,0.379,26,0.473,32,0.93,38,1.568,45,0.154,52,0.033,53,0.045,58,0.697,60,0.437,69,0.772,71,0.996,77,0.652,83,0.585,85,0.293,89,1.76,92,0.823,93,1.236,94,1.305,95,1.236,97,0.787,98,0.361,99,0.783,123,0.315,126,0.724,134,0.564,135,0.727,136,1.358,137,0.957,138,0.957,139,0.957,141,0.957,142,2.037,143,1.929,144,1.152,152,0.905,153,1.917,154,1.917,157,0.957,158,1.715,159,1.436,160,0.957,161,1.74,162,0.957,163,0.957,164,0.688,165,0.957,166,0.767,167,0.957,168,0.957,169,0.767,170,1.059,171,1.725,172,0.767,173,1.436,174,0.767,175,1.436,176,1.537,177,0.957,178,0.767,179,0.957,180,0.767,181,0.583,182,0.727,183,0.876,184,0.727,185,0.767,186,0.767,187,0.767,188,2.062,189,0.957,190,0.957,226,1.917,233,1.943,255,1.936,260,1.943,273,5.067,295,2.499,330,1.386,345,0.81,352,3.267,354,1.033,365,1.543,375,1.216,380,1.725,393,1.712,399,0.957,404,1.715,405,1.74,415,1.725,418,1.812,424,1.812,449,1.216,450,2.238,451,1.826,454,2.188,458,1.826,506,1.013,519,1.214,532,2.03,533,1.822,534,1.521,535,1.936,541,1.074,542,1.074,545,1.612,546,1.295,553,2.422,554,2.642,555,3.172,556,2.642,557,3.525,558,1.76,570,1.612,578,1.386,581,2.422,585,1.214,587,1.76,592,1.76,593,1.76,595,1.214,603,2.572,608,2.238,623,2.081,629,1.013,684,2.189,686,1.491,698,1.013,701,1.074,722,4.386,740,4.206,747,2.189,748,2.584,751,1.358,753,1.944,756,1.822,779,1.944,781,2.081,782,1.944,783,1.295,786,1.214,787,1.943,804,1.613,815,1.295,818,1.613,821,2.431,839,1.14,840,2.806,845,1.944,873,3.968,884,2.081,904,3.637,913,1.214,914,1.386,915,1.386,917,1.386,931,1.76,933,2.422,934,2.422,935,3.232,936,3.232,937,2.422,938,2.422,971,1.14,988,4.936,1004,1.943,1005,1.76,1006,1.76,1014,4.936,1046,1.943,1047,3.946,1048,3.287,1049,3.946,1050,3.946,1051,4.7,1052,4.7,1053,3.287,1054,5.134,1055,4.386,1056,4.386,1057,3.847,1058,2.917,1059,1.822,1060,3.287,1061,3.287,1062,2.562,1063,3.287,1064,5.12,1065,3.287,1066,3.287,1067,2.562,1068,3.287,1069,3.287,1070,2.562,1071,3.287,1072,2.917,1073,4.386,1074,2.562,1075,2.562,1076,3.287,1077,3.287,1078,3.287,1079,3.946,1080,2.562,1081,4.545,1082,2.238,1083,2.562,1084,3.287,1085,2.917,1086,3.946,1087,2.189,1088,3.287,1089,2.562,1090,3.287,1091,2.562,1092,2.917,1093,3.287,1094,2.562,1095,2.189,1096,2.189,1097,2.189,1098,2.562,1099,2.562,1100,3.847,1101,3.287,1102,3.847,1103,3.287,1104,3.287,1105,2.562,1106,3.847,1107,3.847,1108,2.562,1109,2.562,1110,2.562,1111,2.562,1112,2.562,1113,3.287,1114,2.189,1115,3.287,1116,2.189,1117,2.189,1118,2.189,1119,2.189,1120,2.189,1121,2.189,1122,2.189,1123,2.189,1124,2.189,1125,2.562,1126,2.189,1127,3.847,1128,3.847,1129,3.847,1130,3.847,1131,3.287,1132,2.562,1133,4.619,1134,2.562,1135,2.189,1136,2.189,1137,2.562,1138,2.189]],["title/injectables/RouteService.html",[54,0.692,748,1.511]],["body/injectables/RouteService.html",[0,0.016,3,0.214,4,0.189,5,0.189,7,0.851,9,0.189,17,0.456,19,0.827,20,0.812,22,0.793,23,0.022,24,0.738,25,0.388,26,0.793,28,1.314,32,0.882,45,0.214,52,0.042,53,0.042,54,0.935,56,1.492,58,0.882,60,0.947,61,2.307,62,1.584,63,2.469,65,2.335,66,1.926,67,2.307,68,2.307,69,0.836,71,1.263,72,2.223,73,2.168,74,2.335,76,2.168,77,1.773,78,2.168,79,2.168,80,2.168,81,1.926,82,2.472,83,0.536,84,1.066,85,0.407,86,1.584,87,2.168,88,0.956,90,1.256,91,1.189,92,0.571,93,0.857,94,0.905,95,0.857,97,1.101,98,0.502,99,1.43,100,2.24,102,2.784,103,2.168,104,0.811,105,1.492,106,1.492,107,1.584,108,2.168,109,1.492,110,1.584,111,2.168,112,2.168,113,2.168,114,1.584,115,2.168,116,1.926,117,2.168,118,1.584,119,1.584,120,1.584,121,1.584,122,1.584,123,0.437,124,1.492,125,1.066,126,0.502,127,1.686,128,1.686,129,1.686,130,1.686,131,1.686,132,1.686,133,1.686,170,1.129,226,1.819,339,2.462,352,2.962,626,1.926,694,3.231,748,2.042,751,2.108,766,2.462,767,2.815,786,1.686,1059,2.307,1068,4.162,1139,3.041,1140,4.871,1141,4.871,1142,4.871,1143,4.871,1144,5.972,1145,3.559,1146,4.871,1147,3.559,1148,2.307,1149,4.871,1150,3.559,1151,4.065,1152,3.066,1153,4.871,1154,4.871,1155,3.559,1156,4.529,1157,4.162,1158,4.871,1159,3.559,1160,3.345,1161,4.101,1162,3.559,1163,3.559,1164,3.559,1165,4.871,1166,3.559,1167,4.871,1168,3.041,1169,2.24,1170,3.559,1171,3.041,1172,3.041,1173,2.699,1174,3.559]],["title/classes/Statistics.html",[0,0.01,301,1.604]],["body/classes/Statistics.html",[0,0.015,2,2.399,3,0.304,4,0.269,5,0.269,9,0.269,10,0.92,17,0.416,19,0.901,20,0.872,22,0.622,23,0.021,24,0.579,25,0.426,26,0.622,38,1.895,45,0.304,52,0.053,53,0.053,301,2.722,599,5.444,1175,4.328,1176,6.984,1177,6.133,1178,7.178,1179,6.133,1180,6.116,1181,6.116,1182,5.066,1183,5.066,1184,5.066,1185,5.066,1186,5.066,1187,4.328,1188,4.328,1189,5.066,1190,5.066]],["title/components/StatisticsComponent.html",[134,0.352,178,1.079]],["body/components/StatisticsComponent.html",[0,0.01,3,0.29,4,0.121,5,0.121,7,0.299,9,0.121,10,0.528,17,0.352,19,0.593,20,0.79,22,0.279,23,0.022,24,0.49,25,0.386,26,0.706,31,1.148,32,1.147,38,1.79,45,0.137,54,0.824,58,0.636,60,0.598,63,2.275,65,2.059,66,1.388,67,1.663,68,1.663,69,0.528,71,0.411,83,0.547,84,1.051,85,0.401,88,0.61,90,0.802,91,0.759,92,0.563,97,0.598,98,0.32,104,0.799,109,1.471,123,0.279,125,1.051,126,0.735,134,0.595,135,0.644,136,1.239,137,0.848,138,0.848,139,0.848,141,0.848,142,1.992,143,1.886,144,1.051,146,4.274,153,1.948,154,1.948,157,1.311,158,1.172,159,1.311,160,0.848,161,1.526,162,0.848,163,0.848,164,0.61,165,0.848,166,0.68,167,0.848,168,0.848,169,0.68,170,0.726,171,1.602,172,0.68,173,1.311,174,0.68,175,1.311,176,0.68,177,0.848,178,1.562,179,0.848,180,0.68,181,0.517,182,0.644,183,0.799,184,0.644,185,0.68,186,0.68,187,1.992,188,0.718,189,0.848,190,0.848,193,1.899,213,1.43,217,1.941,295,1.229,301,1.562,339,1.774,354,1.152,359,0.718,365,1.612,370,2.347,371,0.759,375,1.11,384,2.983,393,2.961,394,3.212,398,1.696,404,1.841,405,1.11,418,1.946,424,1.239,431,2.411,442,1.471,444,0.759,448,0.952,449,1.356,450,1.948,451,1.388,454,2.611,473,5.732,476,1.562,495,1.909,506,0.898,519,1.076,520,3.659,521,4.502,525,2.311,526,2.488,527,1.011,528,1.076,529,2.148,530,1.909,531,1.562,532,2.542,533,2.722,534,1.908,535,2.311,538,1.562,540,2.999,541,2.788,542,2.788,544,3.313,546,1.774,551,1.076,553,1.43,562,2.285,563,1.774,566,1.148,567,1.148,570,0.952,571,1.56,572,1.56,574,1.723,578,2.321,579,1.011,580,1.322,581,2.21,584,1.723,592,1.56,595,1.076,605,3.344,607,2.042,608,2.807,609,1.774,619,4.181,651,1.56,652,1.56,668,1.723,672,4.91,673,1.941,678,3.665,768,2.285,867,2.042,881,1.229,912,2.032,971,2.148,1005,1.56,1006,1.56,1008,4.181,1072,2.662,1156,2.662,1177,4.456,1179,4.456,1187,1.941,1188,1.941,1191,1.941,1192,4.29,1193,3.51,1194,5.216,1195,6.889,1196,5.216,1197,4.29,1198,4.29,1199,4.29,1200,2.272,1201,5.216,1202,3.51,1203,3.51,1204,2.272,1205,3.51,1206,3.51,1207,3.51,1208,4.456,1209,3.51,1210,4.825,1211,2.272,1212,4.996,1213,3.51,1214,3.51,1215,2.272,1216,3.51,1217,2.272,1218,4.29,1219,2.272,1220,2.272,1221,2.272,1222,2.272,1223,3.51,1224,3.51,1225,2.272,1226,2.272,1227,2.272,1228,2.272,1229,1.941,1230,2.272,1231,2.272,1232,2.272,1233,2.272,1234,2.272,1235,2.272,1236,2.272,1237,2.272,1238,2.272,1239,2.272,1240,2.272,1241,2.272,1242,3.51,1243,1.723,1244,2.272,1245,2.272,1246,2.272,1247,2.272,1248,2.272,1249,2.272,1250,2.272,1251,2.272,1252,2.272,1253,2.272,1254,5.216,1255,2.272,1256,3.51,1257,3.51,1258,4.29,1259,2.272,1260,2.272,1261,2.272,1262,2.272,1263,3.51,1264,4.825,1265,4.825,1266,3.51,1267,2.272,1268,2.272,1269,2.272,1270,2.272,1271,2.272,1272,2.272,1273,2.272,1274,3.51,1275,2.272,1276,2.272,1277,2.272,1278,2.272,1279,3.51,1280,2.272,1281,2.272,1282,2.272,1283,2.272,1284,2.272,1285,2.272,1286,2.272,1287,2.272,1288,2.272,1289,3.51,1290,2.999,1291,2.272,1292,2.272,1293,3.51,1294,3.51,1295,2.272,1296,3.51,1297,2.999,1298,2.272,1299,2.272,1300,2.272,1301,2.272,1302,2.272,1303,3.51,1304,2.272,1305,2.272,1306,2.272,1307,2.272,1308,2.272,1309,2.272,1310,2.272,1311,2.272,1312,2.272,1313,2.272,1314,4.29,1315,5.216,1316,5.216,1317,2.272,1318,2.272,1319,2.272,1320,2.272,1321,2.272,1322,2.272,1323,2.272,1324,2.272,1325,2.272,1326,2.272,1327,2.272]],["title/injectables/StatisticsService.html",[54,0.692,605,2.097]],["body/injectables/StatisticsService.html",[0,0.016,3,0.223,4,0.197,5,0.197,7,0.489,9,0.197,17,0.466,19,0.821,20,0.835,22,0.746,23,0.022,24,0.694,25,0.365,26,0.746,32,1.297,38,1.7,45,0.223,52,0.044,53,0.044,54,0.962,56,1.556,58,0.907,60,0.968,61,2.374,62,1.652,63,2.269,65,2.119,69,0.559,71,1.21,72,1.585,73,2.231,74,2.37,76,2.231,77,1.786,78,2.231,79,2.231,80,2.231,81,1.982,82,2.526,83,0.57,84,1.111,85,0.424,86,1.652,87,2.231,88,0.997,90,1.31,91,1.24,92,0.595,93,0.893,94,0.944,95,0.893,97,0.855,98,0.523,99,1.457,100,3.825,102,2.91,103,2.231,104,0.845,105,1.556,106,1.556,107,1.652,108,2.231,109,1.556,110,1.652,111,2.231,112,2.231,113,2.231,114,1.652,115,2.231,116,1.982,117,2.231,118,1.652,119,1.652,120,1.652,121,1.652,122,1.652,123,0.697,124,1.556,125,1.111,126,0.8,127,1.758,128,1.758,129,1.758,130,1.758,131,1.758,132,1.758,133,1.758,187,1.958,301,2.231,359,1.174,394,3.287,597,2.549,598,2.815,599,2.815,600,2.533,601,1.876,602,3.171,603,1.652,604,3.171,605,2.916,606,5.587,607,4.118,608,3.535,609,3.435,610,3.171,611,3.171,612,5.587,613,3.171,614,3.171,615,5.587,616,3.171,617,3.171,618,5.587,619,3.801,620,3.171,621,3.171,622,4.608,623,2.712,624,4.282,625,3.171,626,2.712,627,3.171,628,4.608,629,1.982,630,3.801,631,3.442,632,4.282,633,3.171,634,3.171,1328,3.712,1329,3.712,1330,3.712,1331,3.712,1332,3.712,1333,3.712,1334,3.155,1335,3.712,1336,3.712]],["title/classes/Stop.html",[0,0.01,181,0.821]],["body/classes/Stop.html",[0,0.019,2,2.223,3,0.282,4,0.249,5,0.249,7,0.618,8,1.856,9,0.249,10,0.878,17,0.521,19,0.909,20,0.856,22,0.577,23,0.022,24,0.725,25,0.419,26,0.577,28,1.187,38,1.862,45,0.282,52,0.051,53,0.051,124,2.446,181,1.674,399,2.179,458,2.307,716,4.986,1337,4.01,1338,6.036,1339,3.977,1340,6.036,1341,6.036,1342,6.036,1343,5.836,1344,5.836,1345,4.694,1346,5.836,1347,5.836,1348,5.836,1349,5.836,1350,5.836,1351,4.694,1352,4.694,1353,4.986,1354,4.986,1355,4.694,1356,4.01,1357,4.694,1358,4.694,1359,4.694,1360,4.694]],["title/components/StopCreateComponent.html",[134,0.352,180,1.079]],["body/components/StopCreateComponent.html",[0,0.011,3,0.157,4,0.139,5,0.139,7,0.514,9,0.139,10,0.587,17,0.383,20,0.805,22,0.479,23,0.022,24,0.737,25,0.362,26,0.479,32,0.938,35,1.98,38,0.664,45,0.157,52,0.034,53,0.034,58,0.706,60,0.665,69,0.587,71,0.938,83,0.541,85,0.298,92,0.831,93,0.939,94,0.992,95,0.939,97,0.883,98,0.368,116,2.3,123,0.574,125,1.168,126,0.782,134,0.568,135,0.74,136,1.377,137,0.975,138,0.975,139,0.975,141,0.975,142,2.043,143,1.935,144,1.168,153,1.935,154,1.935,157,0.975,158,1.303,159,1.457,160,0.975,161,1.638,162,0.975,163,0.975,164,0.701,165,0.975,166,0.782,167,0.975,168,0.975,169,0.782,170,0.78,171,1.744,172,0.782,173,1.457,174,0.782,175,1.457,176,0.782,177,0.975,178,0.782,179,0.975,180,1.551,181,1.576,182,0.74,183,0.888,184,0.74,185,0.782,186,0.782,187,0.782,188,0.825,189,0.975,190,0.975,202,2.627,216,0.975,255,2.324,292,5.031,305,2.27,316,3.176,326,1.736,342,1.84,344,1.935,345,1.753,354,1.048,365,1.56,366,1.643,368,1.094,370,2.506,371,0.872,372,1.635,373,1.094,375,1.233,380,2.446,398,1.542,399,1.457,404,1.731,405,1.907,409,2.598,415,0.975,418,1.829,442,1.635,443,1.847,444,2.014,445,1.736,446,1.971,447,1.736,448,1.635,449,1.477,450,1.457,451,1.542,476,2.306,495,2.59,506,1.032,519,1.236,525,2.172,526,2.324,528,1.236,529,1.162,530,1.162,531,1.736,532,1.847,534,1.032,535,1.094,538,1.736,541,1.094,542,1.094,545,1.958,546,1.319,562,1.236,563,1.319,564,2.111,565,1.412,566,1.319,567,1.319,568,2.527,570,1.094,579,1.162,583,1.98,585,1.236,595,1.236,600,1.971,601,1.319,685,1.519,698,1.847,741,1.643,742,3.207,743,2.679,745,2.803,746,3.015,749,3.429,757,2.111,759,2.111,760,2.306,761,2.111,762,2.111,763,2.111,766,2.619,767,2.049,768,2.756,770,2.23,771,2.111,772,2.803,773,2.23,774,1.971,799,2.111,800,3.262,801,3.93,805,1.643,806,1.98,807,1.643,808,1.643,812,1.519,813,1.519,814,1.519,815,1.319,816,3.262,817,3.93,819,1.643,827,2.718,849,2.718,855,3.385,857,3.607,873,3.558,874,3.015,876,2.27,881,3.263,888,2.27,889,2.27,890,2.27,891,2.27,892,2.27,893,2.27,894,2.27,895,2.27,897,2.27,906,3.333,910,2.27,911,2.111,912,1.848,913,1.236,959,1.519,960,1.519,963,1.519,1030,3.056,1031,1.519,1148,1.848,1338,3.99,1340,3.99,1341,3.99,1342,3.99,1353,4.971,1354,4.971,1361,5.667,1362,4.671,1363,4.671,1364,3.901,1365,2.611,1366,2.611,1367,3.901,1368,5.182,1369,2.23,1370,3.901,1371,3.901,1372,3.901,1373,2.611,1374,2.23,1375,2.611,1376,3.901,1377,3.901,1378,3.901,1379,2.611,1380,2.611,1381,2.611,1382,2.611,1383,3.333,1384,2.611,1385,2.611,1386,2.611,1387,2.611,1388,2.611,1389,2.611,1390,2.611,1391,2.611,1392,2.611,1393,2.611,1394,2.611,1395,2.611,1396,2.611,1397,2.611,1398,2.611,1399,2.611,1400,2.456,1401,3.901,1402,2.611,1403,2.611,1404,2.611,1405,1.98,1406,2.611,1407,2.611]],["title/injectables/StopService.html",[54,0.692,1030,1.707]],["body/injectables/StopService.html",[0,0.017,3,0.251,4,0.222,5,0.222,7,0.793,9,0.222,17,0.494,20,0.782,22,0.739,23,0.022,24,0.687,25,0.362,26,0.739,32,0.982,45,0.251,52,0.047,53,0.047,54,1.041,56,1.751,58,0.982,60,1.026,61,2.567,62,1.86,63,2.57,65,2.464,66,2.143,67,2.567,68,2.567,69,0.905,71,1.195,72,2.138,73,2.413,74,2.464,76,2.413,77,1.821,78,2.413,79,2.413,80,2.413,81,2.143,82,2.678,83,0.571,84,1.251,85,0.477,86,1.86,87,2.413,88,1.122,90,1.475,91,1.396,92,0.67,93,1.006,94,1.063,95,1.006,97,1.026,98,0.589,99,1.375,100,2.63,102,2.413,103,2.413,104,0.952,105,1.751,106,1.751,107,1.86,108,2.413,109,1.751,110,1.86,111,2.413,112,2.413,113,2.413,114,1.86,115,2.413,116,2.143,117,2.413,118,1.86,119,1.86,120,1.86,121,1.86,122,1.86,123,0.513,124,1.751,125,1.251,126,0.589,127,1.979,128,1.979,129,1.979,130,1.979,131,1.979,132,1.979,133,1.979,170,0.816,181,1.649,226,2.024,339,2.739,698,2.608,751,1.914,756,2.567,767,2.143,913,1.979,1030,2.567,1058,4.111,1059,2.567,1148,2.567,1169,2.63,1408,3.57,1409,3.412,1410,4.829,1411,4.179,1412,5.421,1413,4.179,1414,4.179,1415,4.179,1416,4.179,1417,5.421,1418,4.179]],["title/classes/StopTime.html",[0,0.01,701,1.511]],["body/classes/StopTime.html",[0,0.019,2,1.895,3,0.24,4,0.213,5,0.213,7,0.527,8,2.083,9,0.213,10,0.793,17,0.483,19,0.885,20,0.867,22,0.492,23,0.022,24,0.457,25,0.42,26,0.492,28,1.274,32,0.954,38,1.795,39,4.502,45,0.24,52,0.046,53,0.046,58,0.954,71,0.725,83,0.473,99,0.814,104,1.2,126,0.743,181,1.702,183,1.675,336,2.209,384,2.851,458,2.329,629,2.641,651,3.619,701,2.8,703,3.996,864,2.851,989,4.502,994,2.959,1339,3.963,1356,3.419,1419,6.078,1420,3.419,1421,6.681,1422,5.067,1423,6.812,1424,6.812,1425,3.786,1426,6.262,1427,4.502,1428,5.27,1429,4.002,1430,5.27,1431,4.002,1432,5.27,1433,5.27,1434,5.27,1435,5.27,1436,5.27,1437,4.502,1438,5.27,1439,4.002,1440,4.002,1441,4.002,1442,4.002,1443,4.002,1444,4.002,1445,5.27,1446,5.27,1447,5.27,1448,3.419,1449,4.002,1450,4.002,1451,4.002,1452,4.002,1453,4.002,1454,4.002,1455,4.002,1456,4.002,1457,4.002,1458,4.002]],["title/injectables/StopTimeService.html",[54,0.692,840,1.604]],["body/injectables/StopTimeService.html",[0,0.016,3,0.21,4,0.186,5,0.186,7,0.781,9,0.186,17,0.452,19,0.861,20,0.809,22,0.809,23,0.022,24,0.752,25,0.396,26,0.809,32,1.073,38,1.634,45,0.21,52,0.042,53,0.042,54,0.925,56,1.467,58,0.872,60,0.938,61,2.28,62,1.557,63,2.596,65,2.541,66,2.344,67,2.808,68,2.808,69,0.935,71,1.232,72,2.217,73,2.143,74,2.321,76,2.143,77,1.768,78,2.143,79,2.143,80,2.143,81,1.903,82,2.45,83,0.532,84,1.048,85,0.4,86,1.557,87,2.143,88,0.94,90,1.235,91,1.169,92,0.561,93,0.842,94,0.89,95,0.842,97,1.122,98,0.493,99,1.426,102,2.767,103,2.143,104,0.797,105,1.467,106,1.467,107,1.557,108,2.143,109,1.467,110,1.557,111,2.143,112,2.143,113,2.143,114,1.557,115,2.143,116,1.903,117,2.143,118,1.557,119,1.557,120,1.557,121,1.557,122,1.557,123,0.43,124,1.467,125,1.048,126,0.493,127,1.657,128,1.657,129,1.657,130,1.657,131,1.657,132,1.657,133,1.657,170,0.892,183,1.096,339,3.247,389,2.801,607,3.45,626,2.605,629,1.383,694,1.893,698,2.344,701,3.095,767,2.54,840,2.143,845,1.768,913,1.657,1059,2.944,1148,2.28,1151,3.031,1169,2.203,1171,2.99,1173,2.654,1425,3.203,1459,5.728,1460,2.99,1461,4.815,1462,4.815,1463,4.815,1464,4.815,1465,4.815,1466,3.499,1467,4.815,1468,3.499,1469,6.953,1470,4.815,1471,6.425,1472,3.499,1473,5.929,1474,4.815,1475,3.499,1476,4.815,1477,3.499,1478,4.815,1479,3.499,1480,3.499,1481,4.113,1482,3.499,1483,3.499,1484,3.499,1485,3.499,1486,3.499,1487,4.815,1488,3.499]],["title/classes/Suspension.html",[0,0.01,1489,2.269]],["body/classes/Suspension.html",[0,0.019,2,2.188,3,0.278,4,0.246,5,0.246,7,0.609,8,1.827,9,0.246,10,0.87,17,0.517,19,0.907,20,0.865,22,0.568,23,0.022,24,0.528,25,0.423,26,0.568,28,1.461,45,0.278,52,0.05,53,0.05,123,0.71,152,2.402,573,3.638,912,2.737,994,3.086,1334,4.432,1489,4.648,1490,3.947,1491,6.015,1492,5.445,1493,5.445,1494,6.015,1495,4.937,1496,5.779,1497,4.62,1498,4.62,1499,3.969,1500,4.62,1501,4.62,1502,4.62,1503,3.947,1504,4.62,1505,4.62,1506,4.62,1507,4.62,1508,4.62]],["title/injectables/SuspensionService.html",[54,0.692,1509,2.269]],["body/injectables/SuspensionService.html",[0,0.016,3,0.218,4,0.193,5,0.193,7,0.83,9,0.193,17,0.46,19,0.882,20,0.773,22,0.773,23,0.022,24,0.719,25,0.378,26,0.773,28,1.321,32,1.09,45,0.218,52,0.043,53,0.043,54,0.948,56,1.52,58,0.893,60,0.956,61,2.337,62,1.615,63,2.481,65,2.351,66,1.951,67,2.337,68,2.337,69,0.844,71,1.14,72,1.903,73,2.196,74,2.351,76,2.196,77,1.779,78,2.196,79,2.196,80,2.196,81,1.951,82,2.496,83,0.565,84,1.086,85,0.414,86,1.615,87,2.196,88,0.974,90,1.281,91,1.212,92,0.582,93,0.873,94,0.922,95,0.873,97,1.169,98,0.511,99,1.376,102,2.496,103,2.196,104,0.826,105,1.52,106,1.52,107,1.615,108,2.196,109,1.52,110,1.615,111,2.196,112,2.196,113,2.196,114,1.615,115,2.196,116,1.951,117,2.196,118,1.615,119,1.615,120,1.615,121,1.615,122,1.615,123,0.872,124,1.52,125,1.086,126,0.791,127,1.718,128,1.718,129,1.718,130,1.718,131,1.718,132,1.718,133,1.718,152,2.125,226,1.843,336,2.068,573,3.106,600,2.494,601,1.833,626,2.67,751,1.742,767,1.951,912,2.337,994,2.956,1151,3.106,1160,3.389,1161,3.389,1169,2.284,1334,4.257,1489,4.316,1491,5.549,1492,5.128,1493,5.307,1494,5.549,1499,3.389,1509,3.106,1510,3.099,1511,4.935,1512,4.216,1513,3.742,1514,3.628,1515,4.935,1516,3.628,1517,4.775,1518,3.628,1519,4.935,1520,3.628,1521,4.216,1522,4.216,1523,4.216,1524,3.628,1525,4.565,1526,3.099,1527,3.628,1528,3.628,1529,3.628,1530,3.628,1531,4.935,1532,3.628,1533,3.628,1534,3.628]],["title/injectables/TranslocoHttpLoader.html",[54,0.692,1535,2.475]],["body/injectables/TranslocoHttpLoader.html",[0,0.017,3,0.3,4,0.265,5,0.265,9,0.265,17,0.41,19,0.802,20,0.745,22,0.745,23,0.022,24,0.692,25,0.364,26,0.745,31,2.523,45,0.364,52,0.053,53,0.053,54,1.164,56,2.093,58,1.098,62,2.222,63,2.535,65,2.264,71,0.904,83,0.586,84,1.495,85,0.57,90,1.762,91,1.668,98,0.704,99,1.016,200,2.905,207,3.143,213,3.816,342,1.578,354,1.341,371,1.668,391,2.905,392,2.905,398,1.974,453,3.143,480,3.143,586,4.163,590,3.143,652,3.428,1535,4.483,1536,4.951,1537,3.786,1538,6.062,1539,4.993,1540,5.179,1541,4.993,1542,5.179,1543,5.179,1544,5.179,1545,5.179,1546,5.179,1547,5.179,1548,4.265,1549,4.265,1550,4.597,1551,4.265,1552,4.265,1553,4.265,1554,4.265,1555,3.786,1556,4.265,1557,4.265,1558,4.265,1559,4.265]],["title/modules/TranslocoRootModule.html",[191,2.734,200,2.097]],["body/modules/TranslocoRootModule.html",[0,0.018,3,0.312,4,0.276,5,0.276,19,0.638,23,0.022,31,2.624,45,0.373,52,0.054,53,0.054,54,1.192,63,2.318,65,1.939,83,0.596,84,1.555,85,0.593,90,1.833,91,1.734,98,0.732,99,1.056,193,2.809,200,3.611,207,3.268,213,3.907,342,1.642,354,1.394,371,1.734,391,3.021,392,3.021,398,2.053,480,3.268,586,4.262,590,3.268,652,3.566,1535,4.262,1536,3.938,1537,3.938,1540,4.436,1542,5.303,1543,5.303,1544,5.303,1545,5.303,1546,5.303,1547,5.303,1548,4.436,1549,4.436,1550,4.707,1551,4.436,1552,4.436,1553,4.436,1554,4.436,1555,3.938,1556,4.436,1557,4.436,1558,4.436,1559,4.436]],["title/classes/Trip.html",[0,0.01,183,0.821]],["body/classes/Trip.html",[0,0.02,2,2.049,3,0.26,4,0.23,5,0.23,7,0.57,8,2.192,9,0.23,10,0.834,17,0.529,19,0.924,20,0.863,22,0.532,23,0.022,24,0.699,25,0.422,26,0.532,28,1.429,45,0.26,52,0.048,53,0.048,83,0.498,92,0.889,170,1.119,183,1.6,399,2.07,527,3.205,623,2.999,694,3.802,703,3.281,717,4.736,724,2.971,932,2.724,1085,4.204,1425,3.881,1427,5.227,1437,4.736,1448,3.697,1560,3.697,1561,7.027,1562,7.027,1563,7.027,1564,4.037,1565,4.327,1566,4.327,1567,4.327,1568,4.327,1569,4.327,1570,4.327,1571,4.327,1572,5.544,1573,4.327,1574,2.724,1575,4.327,1576,4.327,1577,4.327,1578,4.327]],["title/components/TripCreateComponent.html",[134,0.352,182,1.022]],["body/components/TripCreateComponent.html",[0,0.008,3,0.213,4,0.09,5,0.09,7,0.367,8,1.102,9,0.188,10,0.419,17,0.29,19,0.503,20,0.83,22,0.342,23,0.022,24,0.585,25,0.37,26,0.342,28,0.833,32,0.879,38,1.303,44,1.102,45,0.102,52,0.024,53,0.024,58,0.504,60,1.05,69,0.805,71,0.968,72,1.119,77,0.432,83,0.573,85,0.194,88,0.457,92,0.955,93,1.287,94,1.36,95,1.287,97,0.972,98,0.24,99,0.346,104,0.806,123,0.435,125,0.834,126,0.84,134,0.474,135,0.482,136,0.984,137,0.635,138,0.635,139,0.635,141,0.635,142,1.869,143,1.77,144,0.834,149,2.447,153,2.225,154,2.225,155,0.568,157,0.635,158,1.367,159,1.04,160,0.635,161,1.62,162,0.635,163,0.635,164,0.457,165,0.635,166,0.509,167,0.635,168,0.635,169,0.509,170,1.048,171,1.322,172,0.509,173,1.04,174,0.509,175,1.04,176,0.509,177,0.635,178,0.509,179,0.635,180,0.509,181,1.531,182,1.161,183,1.439,184,0.482,185,0.509,186,0.509,187,0.509,188,0.881,189,0.635,190,0.635,202,2.14,216,0.635,226,1.812,255,2.034,257,0.859,258,0.859,287,4.663,299,1.621,305,2.629,316,2.822,326,1.24,329,0.672,342,1.802,344,1.812,345,1.846,347,0.713,348,0.672,352,1.32,354,0.748,359,0.881,365,1.182,367,1.939,368,0.713,369,2.011,370,2.189,371,0.568,372,1.168,373,0.713,375,0.881,380,2.448,381,1.32,393,0.757,398,1.102,399,1.04,404,1.367,405,1.846,409,1.716,415,1.812,418,1.595,424,1.445,442,1.168,443,1.919,444,1.903,445,1.24,446,1.408,447,1.24,448,1.168,449,1.119,450,1.04,451,1.102,476,1.822,480,1.07,495,1.24,506,0.672,519,0.805,525,2.242,526,2.447,527,1.576,528,0.805,529,1.576,530,1.24,531,2.16,532,1.786,533,0.805,534,0.672,535,0.713,537,1.289,538,2.16,541,0.713,542,0.713,545,2.034,547,1.408,550,1.507,551,0.805,562,0.805,563,0.859,564,1.507,565,0.92,566,0.859,567,0.859,568,1.915,570,0.713,572,1.168,579,1.576,580,1.621,585,0.805,595,0.805,600,1.408,601,0.859,603,1.822,609,2.452,629,0.672,685,0.989,694,1.915,698,2.549,701,1.894,708,1.621,709,0.989,710,0.989,724,1.913,741,1.07,742,2.431,743,1.913,744,2.685,745,2.215,746,2.382,748,2.321,749,2.996,750,1.452,751,1.713,752,1.408,753,1.408,754,2.626,755,1.621,756,2.298,757,1.507,758,1.452,759,1.507,760,1.24,761,1.507,762,1.507,763,1.507,764,1.452,766,1.408,767,1.102,768,2.298,769,2.215,771,1.915,772,1.507,774,1.408,776,1.621,777,1.621,779,1.408,781,1.507,782,1.408,783,0.859,784,2.215,785,1.621,786,0.805,789,1.168,798,0.989,799,0.92,800,1.754,804,1.754,805,1.07,807,1.07,808,1.07,809,1.915,810,1.168,811,1.07,812,1.621,813,0.989,814,0.989,815,0.859,816,1.754,818,1.754,819,1.07,821,1.32,824,2.228,825,2.228,826,2.228,827,2.06,828,3.486,832,2.577,835,2.577,836,2.577,838,1.168,839,2.598,840,2.465,841,3.222,843,1.621,844,2.382,845,1.408,849,2.982,850,3.674,852,1.754,853,1.408,854,2.844,855,2.824,856,1.754,857,2.382,863,1.754,864,1.507,867,1.621,868,1.754,869,1.754,870,1.754,874,1.621,876,1.621,877,1.754,878,1.754,879,1.754,881,2.626,882,1.754,884,1.507,885,2.06,886,1.754,887,1.754,888,1.621,889,1.621,890,1.621,891,1.621,892,1.621,893,1.621,894,1.621,895,2.382,897,1.621,900,2.824,910,1.621,911,1.507,912,1.677,913,1.32,914,0.92,915,0.92,916,0.989,917,0.92,928,0.989,930,1.168,931,1.168,932,1.07,933,1.07,934,1.07,935,1.07,936,1.07,937,1.07,938,1.07,940,1.289,947,1.07,952,1.07,953,1.07,954,1.07,956,1.07,959,0.989,960,0.989,961,1.754,962,1.07,963,0.989,964,1.07,965,1.07,966,1.07,967,1.07,970,1.07,971,2.011,972,1.07,973,1.07,974,1.07,975,1.07,976,1.07,994,1.716,1030,2.623,1031,0.989,1032,1.07,1059,1.677,1082,1.621,1148,1.32,1152,1.754,1339,1.621,1369,1.452,1374,1.452,1400,1.754,1405,1.289,1409,2.577,1410,1.289,1425,0.989,1564,2.824,1574,1.07,1579,4.274,1580,2.431,1581,3.024,1582,2.431,1583,2.38,1584,2.38,1585,1.7,1586,1.7,1587,1.7,1588,1.913,1589,1.7,1590,1.7,1591,1.7,1592,1.7,1593,1.913,1594,1.7,1595,1.913,1596,1.913,1597,1.7,1598,1.7,1599,1.7,1600,1.913,1601,1.913,1602,1.913,1603,1.7,1604,1.913,1605,1.7,1606,1.7,1607,1.7,1608,1.7,1609,1.7,1610,1.7,1611,1.913,1612,1.754,1613,1.7,1614,1.7,1615,1.452,1616,1.452,1617,1.452,1618,1.168,1619,1.168,1620,1.168,1621,1.168,1622,1.168,1623,1.168,1624,1.168,1625,1.168,1626,1.289,1627,1.168,1628,1.168,1629,1.168,1630,1.452,1631,1.452,1632,1.913,1633,2.215,1634,1.168,1635,1.168,1636,1.913,1637,1.168,1638,1.168,1639,2.38,1640,1.168,1641,1.452,1642,1.168,1643,1.168,1644,1.452,1645,1.452,1646,1.452,1647,1.452,1648,1.452,1649,1.452,1650,1.452,1651,2.431,1652,1.452,1653,1.452,1654,1.452,1655,1.452,1656,1.168,1657,1.168,1658,1.913,1659,1.913,1660,1.168,1661,2.38,1662,1.452,1663,1.452,1664,2.38,1665,1.452,1666,2.38,1667,1.289,1668,1.7,1669,1.452,1670,1.452,1671,1.452,1672,1.452,1673,1.452,1674,1.452,1675,1.452]],["title/components/TripEditComponent.html",[134,0.352,184,1.022]],["body/components/TripEditComponent.html",[0,0.005,3,0.211,4,0.089,5,0.089,7,0.364,8,1.091,9,0.187,10,0.415,17,0.288,19,0.339,20,0.833,22,0.339,23,0.022,24,0.582,25,0.369,26,0.339,28,0.714,32,0.874,38,1.354,44,1.091,45,0.101,52,0.024,53,0.024,58,0.5,60,1.074,69,0.726,71,0.998,72,1.11,77,0.427,81,1.091,83,0.577,85,0.192,88,0.451,92,0.91,93,1.162,94,1.227,95,1.162,97,0.94,98,0.237,99,0.342,104,0.8,123,0.552,125,0.826,126,0.865,134,0.439,135,0.476,136,0.974,137,0.627,138,0.627,139,0.627,141,0.627,142,1.863,143,1.765,144,0.826,149,2.437,152,0.593,153,2.217,154,2.217,155,0.922,157,0.627,158,1.358,159,1.03,160,0.627,161,1.743,162,0.627,163,0.627,164,0.451,165,0.627,166,0.503,167,0.627,168,0.627,169,0.503,170,1.015,171,1.311,172,0.503,173,1.03,174,0.503,175,1.03,176,0.503,177,0.627,178,0.503,179,0.627,180,0.503,181,1.528,182,0.476,183,1.477,184,1.153,185,0.503,186,0.503,187,0.503,188,0.872,189,0.627,190,0.627,202,2.126,216,0.627,226,1.988,255,2.023,257,0.849,258,0.849,288,4.676,299,1.606,305,0.978,316,3.046,326,1.228,329,1.388,342,1.839,344,1.802,345,1.683,347,0.704,348,0.664,354,0.741,359,0.872,365,1.173,367,1.925,368,0.704,369,1.998,370,2.18,371,0.561,372,1.157,373,0.704,375,0.872,380,2.442,381,1.307,398,1.091,399,1.03,404,1.358,405,1.795,409,2.023,415,1.802,418,1.585,424,1.704,442,1.157,443,1.908,444,1.896,445,1.228,446,1.394,447,1.228,448,1.157,449,1.11,450,1.03,451,1.091,458,2.18,476,1.563,480,1.058,495,0.748,506,0.664,519,0.796,525,2.232,526,2.437,527,1.563,528,0.796,529,1.563,530,1.228,531,2.148,532,1.775,533,0.796,534,0.664,535,0.704,537,1.274,538,2.148,539,1.154,541,0.704,542,0.704,545,2.023,547,1.394,550,1.493,551,0.796,562,0.796,563,0.849,564,1.493,565,0.909,566,0.849,567,0.849,568,1.9,570,0.704,572,1.154,579,1.563,580,1.606,585,0.796,595,0.796,603,1.809,609,2.439,629,0.664,685,0.978,698,2.565,701,1.882,708,1.606,709,0.978,710,0.978,719,1.895,745,2.199,746,2.043,748,0.704,749,2.983,751,1.435,752,1.394,753,1.394,754,2.611,755,1.606,756,1.925,757,1.493,759,1.493,760,1.228,761,1.493,762,1.493,763,1.493,766,0.849,767,0.664,768,2.126,769,2.199,771,2.199,772,1.493,774,1.394,776,1.606,777,1.606,779,1.394,781,1.493,782,1.394,783,0.849,784,2.199,785,1.606,786,0.796,798,0.978,799,0.909,800,1.737,804,1.058,805,1.058,807,1.058,808,1.058,809,1.9,810,1.154,811,1.058,812,1.606,813,0.978,814,0.978,815,0.849,816,1.737,818,1.058,819,1.058,821,1.307,824,2.21,825,2.21,826,2.21,827,2.043,828,3.471,829,2.663,830,2.663,831,2.663,832,2.559,833,3.083,835,2.559,836,2.559,838,1.154,839,2.526,840,2.454,841,3.208,843,1.606,844,2.365,845,1.394,849,2.967,850,3.661,852,1.737,853,1.394,854,2.21,855,2.808,856,1.737,857,2.365,859,2.663,863,1.737,864,1.493,867,1.606,868,1.737,869,1.737,870,1.737,874,1.606,876,1.606,877,1.737,878,1.737,879,1.737,881,2.611,882,1.737,884,1.493,885,2.043,886,1.737,887,1.737,888,1.606,889,1.606,890,1.606,891,1.606,892,1.606,893,1.606,894,1.606,895,2.365,897,1.606,900,3.098,903,2.093,904,2.559,905,2.093,910,1.606,911,1.493,912,1.663,913,1.307,914,0.909,915,0.909,916,0.978,917,0.909,928,0.978,941,1.274,943,1.274,947,1.737,952,1.058,953,1.058,954,1.058,955,1.274,956,1.058,959,0.978,960,0.978,961,1.737,962,1.058,963,0.978,964,1.058,965,1.058,966,1.058,967,1.058,968,2.093,969,1.274,970,1.058,971,1.809,972,1.058,973,1.058,974,1.058,975,1.058,976,1.058,977,1.274,978,1.274,979,1.274,980,1.274,981,1.274,982,1.274,993,1.274,994,1.704,1016,1.154,1017,2.663,1018,2.093,1019,2.663,1026,1.435,1030,2.612,1031,0.978,1032,1.058,1044,1.435,1045,1.435,1059,1.663,1082,1.606,1148,1.307,1152,1.737,1339,2.043,1400,1.737,1405,1.274,1409,2.559,1410,1.274,1422,2.663,1564,2.808,1574,1.058,1579,4.286,1580,2.411,1582,2.411,1583,2.357,1584,2.357,1588,1.895,1593,1.895,1595,1.895,1596,1.895,1600,1.895,1601,1.895,1602,1.895,1604,1.895,1611,1.895,1612,1.737,1618,1.154,1619,1.154,1620,1.154,1621,1.154,1622,1.154,1623,1.154,1624,1.154,1625,1.154,1627,1.895,1628,1.895,1629,1.154,1632,1.895,1633,2.199,1634,1.154,1635,1.154,1636,2.411,1637,1.154,1638,1.154,1642,1.154,1643,1.154,1651,2.791,1656,1.154,1657,1.154,1658,1.895,1659,1.895,1660,1.154,1661,2.357,1662,1.435,1663,1.435,1664,2.357,1665,1.435,1666,2.357,1667,1.274,1669,2.357,1670,1.435,1671,1.435,1672,1.435,1673,1.435,1674,1.435,1675,1.435,1676,2.759,1677,1.68,1678,1.68,1679,1.68,1680,1.68,1681,1.68,1682,1.68,1683,1.68,1684,1.68,1685,1.68,1686,1.68,1687,1.68,1688,1.68,1689,1.68,1690,1.68,1691,1.68,1692,1.68,1693,1.68,1694,1.68,1695,1.68,1696,1.68,1697,1.68,1698,1.68,1699,1.68,1700,1.435,1701,1.435,1702,1.435,1703,1.435,1704,1.435,1705,1.435,1706,1.435,1707,1.435,1708,1.435,1709,1.435,1710,1.435,1711,1.435,1712,1.435,1713,1.435,1714,1.435,1715,1.435,1716,1.435,1717,1.435,1718,1.435,1719,1.435,1720,1.435,1721,1.435,1722,1.435,1723,1.435,1724,1.435,1725,1.435,1726,1.435,1727,1.435,1728,1.435,1729,1.435,1730,1.435,1731,1.435,1732,1.435,1733,1.435]],["title/injectables/TripService.html",[54,0.692,839,1.604]],["body/injectables/TripService.html",[0,0.016,3,0.222,4,0.196,5,0.196,7,0.835,9,0.196,17,0.465,19,0.82,20,0.802,22,0.802,23,0.022,24,0.746,25,0.392,26,0.802,28,1.234,32,1.025,45,0.222,52,0.043,53,0.043,54,0.96,56,1.549,58,0.905,60,0.965,61,2.367,62,1.645,63,2.57,65,2.493,66,2.238,67,2.682,68,2.682,69,0.913,71,1.23,72,2.2,73,2.224,74,2.366,76,2.224,77,1.785,78,2.224,79,2.224,80,2.224,81,1.976,82,2.52,83,0.544,84,1.106,85,0.422,86,1.645,87,2.224,88,0.992,90,1.305,91,1.234,92,0.592,93,0.889,94,0.94,95,0.889,97,1.113,98,0.521,99,1.415,102,2.699,103,2.224,104,0.842,105,1.549,106,1.549,107,1.645,108,2.224,109,1.549,110,1.645,111,2.224,112,2.224,113,2.224,114,1.645,115,2.224,116,1.976,117,2.224,118,1.645,119,1.645,120,1.645,121,1.645,122,1.645,123,0.454,124,1.549,125,1.106,126,0.521,127,1.75,128,1.75,129,1.75,130,1.75,131,1.75,132,1.75,133,1.75,170,0.913,183,1.701,339,2.525,607,2.907,626,2.704,694,1.999,751,1.764,766,2.525,767,2.685,839,2.224,844,3.294,916,2.15,1059,2.367,1148,2.367,1151,3.818,1156,4.6,1157,4.269,1160,3.432,1161,3.432,1168,3.157,1169,2.326,1172,3.157,1173,2.803,1425,2.907,1481,4.269,1734,3.157,1735,4.997,1736,4.997,1737,4.997,1738,4.997,1739,3.695,1740,4.997,1741,3.695,1742,4.997,1743,3.695,1744,4.997,1745,3.695,1746,4.997,1747,3.695,1748,4.997,1749,3.695,1750,3.695,1751,3.695,1752,3.695,1753,3.695]],["title/classes/User.html",[0,0.01,123,0.443]],["body/classes/User.html",[0,0.019,2,2.047,3,0.26,4,0.23,5,0.23,7,0.57,8,2.19,9,0.23,10,0.834,17,0.502,19,0.921,20,0.872,22,0.531,23,0.022,24,0.698,25,0.426,26,0.531,28,1.411,38,1.695,44,2.19,45,0.26,52,0.048,53,0.048,83,0.388,123,0.908,126,0.609,407,4.128,587,3.805,590,2.721,760,2.87,994,2.974,1495,4.733,1503,3.693,1754,3.693,1755,6.002,1756,6.115,1757,5.926,1758,6.062,1759,5.926,1760,5.261,1761,5.54,1762,4.322,1763,4.322,1764,4.322,1765,5.54,1766,4.322,1767,5.54,1768,4.733,1769,4.322,1770,4.322,1771,4.322,1772,5.54,1773,4.322,1774,3.278,1775,4.322,1776,4.322,1777,4.322,1778,4.322,1779,4.322,1780,4.322,1781,4.322,1782,4.322,1783,4.322,1784,4.322]],["title/components/UserDetailsComponent.html",[134,0.352,185,1.079]],["body/components/UserDetailsComponent.html",[0,0.009,3,0.402,4,0.105,5,0.105,7,0.414,9,0.105,10,0.473,17,0.321,19,0.749,20,0.822,22,0.386,23,0.022,24,0.51,25,0.373,26,0.599,28,0.908,32,0.709,44,1.765,45,0.119,52,0.027,53,0.027,58,0.569,60,0.761,69,0.672,71,1.124,77,1.135,83,0.536,85,0.225,92,0.716,93,1.075,94,1.135,95,1.075,97,0.761,98,0.278,99,0.992,104,1.327,106,0.827,123,0.882,125,0.59,126,0.86,134,0.507,135,0.559,136,1.109,137,0.736,138,0.736,139,0.736,141,0.736,142,1.934,143,1.832,144,0.94,152,1.834,153,1.173,154,1.82,155,0.659,157,0.736,158,1.049,159,1.462,160,0.736,161,1.412,162,0.736,163,0.736,164,0.53,165,0.736,166,0.59,167,0.736,168,0.736,169,0.59,170,0.877,171,1.462,172,0.59,173,1.173,174,0.59,175,1.173,176,0.59,177,0.736,178,0.59,179,0.736,180,0.59,181,0.449,182,0.559,183,0.715,184,0.559,185,1.337,186,0.59,187,1.172,188,0.624,189,0.736,190,0.736,216,0.736,238,1.496,255,2.043,270,5.107,295,2.118,329,2.053,336,1.317,339,1.587,340,2.382,342,0.993,345,0.624,347,1.317,348,1.242,354,0.844,365,1.308,366,2.464,368,0.827,369,2.17,370,2.154,371,0.659,372,1.317,373,0.827,375,0.993,377,1.354,380,2.176,393,1.742,404,1.491,405,1.843,409,1.317,415,2.278,418,1.109,424,1.109,442,1.871,443,1.927,444,1.491,445,1.742,447,1.742,448,1.871,449,1.788,450,2.318,451,2.053,454,1.854,458,2.72,506,0.78,520,3.386,525,1.641,526,1.871,527,0.878,528,0.934,529,0.878,530,0.878,531,0.878,532,2.053,534,1.242,535,2.443,538,1.398,544,1.354,545,2.504,546,0.997,548,1.685,549,5.104,550,1.7,551,0.934,553,1.241,554,2.157,555,2.688,556,2.157,557,2.688,558,1.354,561,1.496,562,0.934,571,1.354,573,1.977,574,4.289,579,1.742,581,1.977,584,2.382,585,2.309,605,3.17,608,1.828,622,2.969,623,2.638,628,3.386,629,2.154,630,3.386,651,2.157,668,2.382,669,2.684,751,1.923,752,1.587,760,1.398,784,1.7,820,1.496,821,1.854,822,3.345,823,2.684,853,2.256,885,1.828,898,1.685,949,3.814,971,0.878,994,2.896,1008,1.496,1010,2.684,1071,2.684,1161,2.157,1229,1.685,1243,2.382,1290,1.685,1297,1.685,1489,4.067,1492,4.132,1493,4.132,1499,3.066,1509,3.669,1512,2.684,1513,3.386,1517,4.899,1521,2.684,1522,3.814,1525,2.969,1526,1.685,1626,2.382,1640,2.157,1667,1.496,1757,1.685,1785,5.753,1786,4.832,1787,4.875,1788,3.915,1789,4.875,1790,3.915,1791,3.915,1792,4.875,1793,4.465,1794,4.465,1795,4.465,1796,3.814,1797,4.465,1798,1.972,1799,3.669,1800,3.141,1801,1.972,1802,3.141,1803,3.141,1804,4.465,1805,5.194,1806,4.875,1807,4.465,1808,3.915,1809,1.972,1810,3.141,1811,3.141,1812,3.141,1813,3.141,1814,3.141,1815,3.141,1816,1.972,1817,3.141,1818,3.141,1819,1.972,1820,1.972,1821,1.972,1822,3.141,1823,1.972,1824,1.972,1825,3.141,1826,3.141,1827,1.972,1828,3.141,1829,1.972,1830,1.972,1831,1.972,1832,3.345,1833,1.972,1834,1.972,1835,3.141,1836,1.972,1837,3.141,1838,3.141,1839,1.972,1840,1.972,1841,3.141,1842,1.685,1843,1.496,1844,1.685,1845,1.972,1846,1.972,1847,1.972,1848,1.972,1849,1.972,1850,1.972,1851,1.972,1852,1.972,1853,1.972,1854,1.685,1855,1.972,1856,1.972,1857,3.915,1858,3.141,1859,3.141,1860,3.915,1861,3.141,1862,3.345,1863,3.345,1864,1.972,1865,3.345,1866,3.345,1867,3.915,1868,3.915,1869,1.685,1870,2.684,1871,1.972,1872,1.685,1873,1.972,1874,1.972,1875,1.972,1876,1.972,1877,1.972,1878,1.972,1879,1.972,1880,1.972,1881,1.972,1882,1.972,1883,1.972,1884,1.972,1885,1.972,1886,1.972,1887,4.465,1888,1.972,1889,1.972,1890,3.141,1891,1.972,1892,3.141,1893,1.972,1894,3.141,1895,5.194,1896,1.972,1897,1.972,1898,2.684,1899,3.141,1900,1.972,1901,1.972,1902,3.141,1903,1.972,1904,3.141,1905,1.685,1906,1.972,1907,1.972,1908,4.465,1909,3.141,1910,3.141,1911,1.972,1912,1.685,1913,2.684,1914,1.972,1915,1.972,1916,1.972,1917,3.141,1918,3.141,1919,1.972,1920,1.972,1921,1.685,1922,1.972,1923,1.685,1924,1.685,1925,1.972,1926,1.972,1927,1.972,1928,1.972,1929,1.972,1930,1.972,1931,1.972,1932,1.972,1933,1.972,1934,2.684,1935,1.972,1936,1.972,1937,1.972,1938,1.685,1939,1.972,1940,1.972,1941,3.141,1942,1.972,1943,1.685]],["title/interfaces/UserForAuthentication.html",[359,1.14,427,1.95]],["body/interfaces/UserForAuthentication.html",[0,0.015,3,0.235,4,0.208,5,0.208,9,0.208,10,0.781,17,0.321,19,0.89,23,0.022,25,0.312,28,1.055,31,2.943,32,0.707,44,1.545,45,0.35,52,0.045,53,0.045,60,1.132,66,1.545,69,0.588,74,1.937,77,0.994,83,0.608,84,1.17,85,0.446,92,0.934,97,1.132,98,0.551,123,0.637,126,0.874,134,0.606,142,1.17,143,1.108,144,1.17,149,2.6,152,1.831,155,1.305,164,1.049,170,0.876,201,2.761,216,1.459,219,2.274,301,1.739,326,1.739,327,4.178,328,2.683,329,2.302,330,2.114,336,1.638,337,2.46,338,2.46,342,1.235,343,2.46,344,1.459,345,1.961,346,2.683,347,1.638,348,1.545,354,1.049,359,1.64,360,3.018,361,2.274,362,2.683,363,2.963,364,2.963,365,1.733,366,2.46,367,3.058,368,1.638,369,2.309,370,2.453,371,1.305,372,2.174,373,1.638,374,2.963,375,1.235,376,2.963,377,2.683,378,2.683,379,2.963,380,1.459,381,2.457,382,4.416,383,3.934,384,2.114,385,2.963,386,2.963,387,2.963,388,2.963,389,2.274,390,2.683,391,2.274,392,2.274,393,1.739,394,2.807,395,2.683,396,3.562,397,2.963,398,1.545,399,1.459,400,2.683,401,2.963,402,3.562,403,2.963,404,1.305,405,1.235,406,2.963,407,3.861,408,3.934,409,2.174,410,2.963,411,5.033,412,2.963,413,2.963,414,2.963,415,1.459,416,2.963,417,2.963,418,1.379,419,2.963,420,2.963,421,2.963,422,2.963,423,2.963,424,1.831,425,2.963,426,2.963,427,3.151,428,3.934,429,2.963,430,2.963,431,2.683,432,2.963,433,2.963,434,2.963,435,2.963,436,2.963,437,3.934,438,2.963,439,2.963,440,2.963,441,2.963,442,1.638,443,1.545,444,1.305,445,1.739,446,1.975,447,1.739,448,1.638,449,1.235,450,1.459,451,1.545,452,2.683,453,3.265,454,1.851,455,2.683,456,2.963]],["title/injectables/UserService.html",[54,0.692,1799,2.269]],["body/injectables/UserService.html",[0,0.017,3,0.244,4,0.215,5,0.215,7,0.781,9,0.215,17,0.486,19,0.839,20,0.803,22,0.773,23,0.022,24,0.719,25,0.378,26,0.773,28,1.28,32,0.962,45,0.244,52,0.046,53,0.046,54,1.02,56,1.698,58,0.962,60,1.011,61,2.517,62,1.804,63,2.551,65,2.44,66,2.101,67,2.517,68,2.517,69,0.892,71,1.214,72,2.192,73,2.365,74,2.44,76,2.365,77,1.813,78,2.365,79,2.365,80,2.365,81,2.101,82,2.639,83,0.565,84,1.213,85,0.463,86,1.804,87,2.365,88,1.088,90,1.431,91,1.354,92,0.65,93,0.975,94,1.03,95,0.975,97,1.011,98,0.571,99,1.41,102,2.639,103,2.365,104,0.923,105,1.698,106,1.698,107,1.804,108,2.365,109,1.698,110,1.804,111,2.365,112,2.365,113,2.365,114,1.804,115,2.365,116,2.101,117,2.365,118,1.804,119,1.804,120,1.804,121,1.804,122,1.804,123,0.824,124,1.698,125,1.213,126,0.571,127,1.919,128,1.919,129,1.919,130,1.919,131,1.919,132,1.919,133,1.919,187,1.956,407,2.358,626,3.208,751,2.221,767,2.74,853,2.685,1151,3.961,1160,3.649,1334,3.345,1796,4.54,1799,3.345,1843,3.073,1944,3.462,1945,5.314,1946,6.293,1947,4.052,1948,5.314,1949,4.052,1950,5.314,1951,4.052,1952,4.052,1953,4.052,1954,4.052,1955,4.052,1956,4.052,1957,4.052,1958,4.052,1959,4.052]],["title/components/UsersManagementComponent.html",[134,0.352,186,1.079]],["body/components/UsersManagementComponent.html",[0,0.01,3,0.139,4,0.231,5,0.123,7,0.572,9,0.123,10,0.536,17,0.356,19,0.646,20,0.82,22,0.533,23,0.022,24,0.661,25,0.359,26,0.533,28,0.725,32,1.081,38,1.239,45,0.139,52,0.031,53,0.042,58,0.645,60,0.607,69,0.733,71,1.081,83,0.55,85,0.264,92,0.891,93,1.173,94,0.906,95,0.857,97,0.897,98,0.326,99,0.725,123,0.839,126,0.864,134,0.583,135,0.656,136,1.257,137,0.865,138,0.865,139,0.865,141,0.865,142,1.999,143,1.893,144,1.066,152,0.817,153,1.82,154,1.82,157,0.865,158,1.19,159,1.33,160,0.865,161,1.663,162,0.865,163,0.865,164,0.622,165,0.865,166,0.693,167,0.865,168,0.865,169,0.693,170,0.733,171,1.621,172,0.693,173,1.33,174,0.693,175,1.33,176,0.693,177,0.865,178,0.693,179,0.865,180,0.693,181,0.527,182,0.656,183,0.811,184,0.656,185,0.693,186,1.459,187,2.161,188,2.012,189,0.865,190,0.865,226,1.82,233,1.756,255,1.819,260,1.756,282,5.106,295,2.348,316,2.308,326,1.585,330,1.253,336,2.328,342,1.126,344,0.865,345,0.732,352,2.308,354,0.956,365,1.45,370,2.361,371,0.773,372,2.043,373,0.97,375,1.126,380,1.621,393,1.585,398,1.408,399,1.621,404,1.628,405,1.889,415,2.074,418,1.72,424,1.532,442,1.493,443,1.408,444,1.19,445,1.585,447,1.585,448,1.493,449,1.756,450,2.377,451,2.08,454,2.056,458,2.196,506,0.915,519,1.097,525,0.97,526,0.97,532,1.716,533,1.687,534,0.915,535,1.819,541,0.97,542,0.97,545,0.97,546,1.17,553,2.242,554,2.446,555,2.981,556,2.446,557,3.346,558,1.59,570,0.97,582,1.756,592,1.59,593,1.59,595,1.097,608,2.072,686,1.347,751,1.257,753,1.8,756,1.687,760,1.585,782,1.8,815,1.17,821,2.631,853,1.8,873,3.815,884,1.927,904,3.497,994,1.819,1004,1.756,1005,1.59,1006,1.59,1046,1.756,1047,3.708,1048,3.043,1049,3.708,1050,3.708,1051,4.494,1052,4.494,1053,3.043,1055,4.163,1056,4.163,1058,4.213,1059,2.308,1060,3.043,1061,3.043,1063,3.043,1064,4.944,1065,3.043,1066,3.043,1069,3.043,1072,2.701,1073,4.163,1076,3.043,1077,3.043,1078,3.043,1079,3.708,1081,4.388,1082,2.072,1084,3.043,1085,2.701,1086,3.708,1087,1.978,1088,3.043,1090,3.043,1092,2.701,1093,3.043,1095,1.978,1096,1.978,1097,1.978,1101,1.978,1103,1.978,1104,1.978,1113,3.043,1114,1.978,1115,3.043,1116,1.978,1117,1.978,1118,1.978,1119,1.978,1120,1.978,1121,1.978,1122,1.978,1123,1.978,1124,1.978,1126,1.978,1131,3.043,1135,1.978,1136,1.978,1138,1.978,1334,2.242,1499,2.446,1509,3.76,1513,2.701,1517,2.701,1523,3.043,1525,3.292,1640,1.59,1755,3.043,1758,4.163,1759,3.043,1760,2.701,1774,2.701,1786,5.344,1799,3.643,1832,3.708,1842,1.978,1843,1.756,1844,1.978,1854,1.978,1862,3.043,1863,3.043,1865,3.043,1866,3.043,1869,1.978,1870,3.043,1872,1.978,1898,4.746,1905,1.978,1912,1.978,1913,1.978,1923,1.978,1924,1.978,1934,4.746,1938,1.978,1943,1.978,1960,5.752,1961,4.873,1962,5.555,1963,4.873,1964,2.315,1965,3.562,1966,3.562,1967,2.315,1968,2.315,1969,2.315,1970,2.315,1971,3.562,1972,3.562,1973,2.315,1974,2.315,1975,3.562,1976,2.315,1977,2.315,1978,4.873,1979,2.315,1980,2.315,1981,2.315,1982,2.315,1983,2.315,1984,2.315,1985,2.315,1986,2.315,1987,4.34,1988,2.315,1989,2.315,1990,1.978,1991,2.315,1992,2.315,1993,2.315,1994,2.315,1995,2.315,1996,4.34,1997,4.34,1998,4.34,1999,2.315,2000,2.315,2001,4.34,2002,2.315,2003,2.315,2004,2.315,2005,2.315,2006,2.315,2007,2.315,2008,2.315,2009,2.315,2010,3.562]],["title/coverage.html",[2011,4.198]],["body/coverage.html",[0,0.02,1,2.112,5,0.222,6,3.57,23,0.022,25,0.251,52,0.047,53,0.047,54,1.376,55,2.63,57,3.57,104,1.62,123,0.513,126,0.589,134,0.707,135,1.185,140,3.57,164,1.122,166,1.251,169,1.251,170,0.629,172,1.251,174,1.251,176,1.251,178,1.623,180,1.251,181,0.952,182,1.185,183,0.952,184,1.185,185,1.251,186,1.251,201,1.86,207,2.63,267,3.169,270,3.169,273,3.169,279,2.87,282,3.169,283,3.169,284,3.169,287,3.723,288,3.723,290,3.169,292,3.169,301,1.86,320,2.63,322,3.57,336,1.751,359,2.086,360,2.431,362,4.132,384,3.256,427,2.261,457,3.57,533,3.26,544,2.87,597,2.87,598,4.111,605,2.431,635,3.57,636,3.57,692,3.57,701,1.751,740,4.008,741,4.008,748,1.751,820,4.111,839,1.86,840,1.86,998,3.57,1016,4.132,1030,1.979,1046,4.111,1081,3.169,1139,3.57,1175,3.57,1191,4.631,1337,3.57,1361,3.57,1408,3.57,1419,3.57,1420,3.57,1459,3.57,1460,3.57,1489,2.63,1490,3.57,1509,2.63,1510,3.57,1535,2.87,1536,3.169,1537,3.169,1560,3.57,1579,4.008,1633,2.933,1734,3.57,1754,3.57,1785,3.57,1799,2.63,1921,4.631,1944,3.57,1960,3.57,2011,3.57,2012,4.179,2013,4.179,2014,4.179,2015,5.421,2016,4.179,2017,4.179,2018,5.421,2019,4.179,2020,4.179,2021,4.179,2022,4.179,2023,4.179,2024,4.179,2025,4.179,2026,4.179,2027,6.017,2028,5.421,2029,5.421,2030,4.179,2031,4.179,2032,5.421,2033,5.421,2034,6.017,2035,4.179,2036,4.179,2037,4.179,2038,4.179,2039,4.179,2040,5.421,2041,4.179,2042,5.421,2043,5.421,2044,4.179,2045,4.179,2046,4.179,2047,4.179,2048,4.179,2049,5.421,2050,5.421,2051,5.421,2052,4.179,2053,4.179,2054,4.179,2055,4.179,2056,4.179,2057,4.179,2058,3.57,2059,4.631,2060,6.368,2061,3.57,2062,4.111,2063,3.169,2064,4.179]],["title/dependencies.html",[194,2.728,2065,2.285]],["body/dependencies.html",[23,0.022,52,0.054,53,0.054,69,0.795,85,0.604,88,1.419,105,2.215,155,1.765,194,3.327,209,4.008,211,5.073,212,4.757,216,1.973,221,4.008,257,2.671,258,2.671,371,1.765,372,2.215,373,2.215,600,2.671,601,2.671,1208,4.515,2066,5.285,2067,7.34,2068,5.285,2069,5.285,2070,5.285,2071,5.285,2072,5.285,2073,5.285,2074,5.285,2075,5.285,2076,5.285,2077,5.285,2078,5.285,2079,5.285,2080,5.285,2081,5.285,2082,5.285,2083,5.285,2084,4.515,2085,5.285,2086,5.285,2087,5.285,2088,5.285,2089,5.285,2090,5.285,2091,5.285,2092,5.285]],["title/miscellaneous/enumerations.html",[2093,1.753,2094,3.703]],["body/miscellaneous/enumerations.html",[9,0.295,23,0.019,25,0.388,52,0.056,53,0.056,123,0.682,170,0.972,527,2.472,603,2.874,623,3.004,779,3.451,1564,3.757,1760,4.897,1774,4.211,1990,4.744,2093,3.231,2094,4.744,2095,5.553,2096,6.458,2097,5.553,2098,6.458,2099,5.553,2100,6.458,2101,5.553,2102,5.553,2103,5.553,2104,5.553,2105,5.553,2106,5.553,2107,5.553,2108,5.553,2109,5.553,2110,5.553,2111,5.553,2112,5.553]],["title/interfaces/formStop.html",[359,1.14,1633,1.95]],["body/interfaces/formStop.html",[0,0.011,3,0.236,4,0.14,5,0.14,7,0.348,8,1.043,9,0.209,10,0.592,17,0.216,19,0.743,23,0.022,25,0.236,28,0.8,32,0.851,38,1.195,44,1.043,45,0.159,52,0.034,53,0.034,60,1.103,69,0.784,72,1.243,77,0.671,83,0.622,85,0.301,88,0.709,92,0.936,93,1.254,94,1.325,95,1.254,97,1.103,98,0.372,99,0.537,104,0.896,123,0.324,125,1.177,126,0.896,134,0.509,142,0.79,143,0.748,144,0.79,149,2.448,155,0.881,158,0.881,161,1.486,170,1.029,181,1.495,182,0.748,183,1.416,188,0.834,202,1.862,216,0.985,226,1.755,255,1.97,257,1.334,258,1.334,287,1.812,299,1.535,305,1.535,316,2.767,326,1.174,329,1.043,342,1.761,344,1.755,345,1.847,347,1.106,348,1.043,352,1.25,354,0.709,359,1.486,361,1.535,365,1.313,367,2.226,368,1.106,369,2.092,370,2.203,371,0.881,372,1.648,373,1.106,375,0.834,380,2.452,381,1.25,398,1.043,399,0.985,404,0.881,405,1.486,409,1.648,418,1.388,424,1.839,442,1.648,443,1.555,444,1.57,445,1.75,446,1.987,447,1.75,448,1.648,449,1.243,450,1.468,451,1.555,476,1.75,495,1.174,527,1.174,547,1.334,550,2.128,600,1.987,601,1.334,603,1.75,609,2.375,629,1.043,694,1.428,698,2.558,701,2.607,708,1.535,709,1.535,710,1.535,724,2.7,741,1.661,742,1.812,743,1.812,744,2.001,745,1.428,746,1.535,748,2.335,749,3.014,751,1.659,752,1.334,753,1.334,754,2.543,755,1.535,756,2.226,757,1.428,759,1.428,760,1.174,761,1.428,762,1.428,763,1.428,766,1.334,767,1.043,768,2.226,769,2.128,771,2.128,772,1.428,774,1.334,776,1.535,777,1.535,779,1.334,781,1.428,782,1.334,783,1.334,784,2.543,785,2.288,786,1.25,789,1.812,798,1.535,799,1.428,809,1.428,821,1.25,824,1.661,825,1.661,826,1.661,827,1.535,828,3.279,832,1.661,835,1.661,836,1.661,839,2.6,840,2.48,841,3.242,843,1.535,844,2.288,845,1.334,849,2.735,850,3.507,852,1.661,853,1.334,854,2.475,855,2.735,856,1.661,857,2.288,863,1.661,864,1.428,867,1.535,868,1.661,869,1.661,870,1.661,874,1.535,876,1.535,877,1.661,878,1.661,879,1.661,881,2.543,882,1.661,884,1.428,885,2.288,886,1.661,887,1.661,888,1.535,889,1.535,890,1.535,891,1.535,892,1.535,893,1.535,894,1.535,895,2.288,897,1.535,900,3.031,910,1.535,911,1.428,912,1.25,913,1.862,914,1.428,915,1.428,916,1.535,917,1.428,928,1.535,930,1.812,931,1.812,932,1.661,933,1.661,934,1.661,935,1.661,936,1.661,937,1.661,938,1.661,940,2.001,947,1.661,952,1.661,953,1.661,954,1.661,956,1.661,959,1.535,960,1.535,961,2.475,962,1.661,963,1.535,964,1.661,965,1.661,966,1.661,967,1.661,970,1.661,971,2.092,972,1.661,973,1.661,974,1.661,975,1.661,976,1.661,994,2.183,1030,2.639,1031,1.535,1032,1.661,1082,1.535,1148,1.25,1152,1.661,1339,3.242,1400,2.475,1409,1.661,1425,1.535,1564,2.735,1574,1.661,1579,1.661,1580,1.812,1581,2.254,1582,1.812,1588,1.812,1593,1.812,1595,1.812,1596,1.812,1600,1.812,1601,1.812,1602,1.812,1604,1.812,1611,1.812,1612,1.661,1615,2.254,1616,2.254,1617,2.254,1618,1.812,1619,1.812,1620,1.812,1621,1.812,1622,1.812,1623,1.812,1624,1.812,1625,1.812,1626,2.001,1627,1.812,1628,1.812,1629,1.812,1630,2.254,1631,2.254,1632,2.7,1633,3.014,1634,1.812,1635,1.812,1636,2.7,1637,1.812,1638,1.812,1639,3.36,1640,1.812,1641,2.254,1642,1.812,1643,1.812,1644,2.254,1645,2.254,1646,2.254,1647,2.254,1648,2.254,1649,2.254,1650,2.254,1651,3.228,1652,2.254,1653,2.254,1654,2.254,1655,2.254,1656,1.812,1657,1.812,1658,2.7,1659,2.7,1660,1.812]],["title/interfaces/formStop-1.html",[359,0.953,971,1.341,1633,1.63]],["body/interfaces/formStop-1.html",[0,0.007,3,0.235,4,0.139,5,0.139,7,0.344,8,1.033,9,0.207,10,0.587,17,0.214,19,0.715,23,0.022,25,0.235,28,0.794,32,0.846,38,1.318,44,1.033,45,0.157,52,0.034,53,0.034,60,1.1,69,0.703,72,1.234,77,0.664,81,1.543,83,0.625,85,0.298,88,0.701,92,0.889,93,1.125,94,1.188,95,1.125,97,1.081,98,0.368,99,0.531,104,0.889,123,0.479,125,1.169,126,0.91,134,0.456,142,0.782,143,0.741,144,0.782,149,2.439,152,0.922,155,1.304,158,0.873,161,1.754,170,0.986,181,1.492,183,1.443,184,0.741,188,0.826,202,1.848,216,0.975,226,1.935,255,1.958,257,1.32,258,1.32,288,1.794,299,1.52,316,3.002,326,1.163,329,1.543,342,1.84,344,1.745,345,1.639,347,1.095,348,1.033,354,0.701,359,1.477,361,1.52,365,1.304,367,2.213,368,1.095,369,2.08,370,2.193,371,0.873,372,1.636,373,1.095,375,0.826,380,2.446,381,1.237,398,1.033,399,0.975,404,0.873,405,1.234,409,2.173,418,1.378,424,2.055,442,1.636,443,1.543,444,1.561,445,1.737,446,1.972,447,1.737,448,1.636,449,1.234,450,1.457,451,1.543,458,1.847,476,1.163,527,1.163,539,1.794,547,1.32,550,2.112,603,1.737,609,2.361,629,1.033,698,2.552,701,2.173,708,1.52,709,1.52,710,1.52,719,1.794,745,1.413,748,1.095,749,3.001,751,1.378,752,1.32,753,1.32,754,2.528,755,1.52,756,1.848,757,1.413,759,1.413,760,1.163,761,1.413,762,1.413,763,1.413,768,1.848,769,2.112,771,2.528,772,1.413,774,1.32,776,1.52,777,1.52,779,1.32,781,1.413,782,1.32,783,1.32,784,2.528,785,2.271,786,1.237,798,1.52,799,1.413,809,1.413,821,1.237,824,1.644,825,1.644,826,1.644,827,1.52,828,3.263,829,1.981,830,1.981,831,1.981,832,1.644,833,1.981,835,1.644,836,1.644,839,2.469,840,2.469,841,3.228,843,1.52,844,2.271,845,1.32,849,2.719,850,3.492,852,1.644,853,1.32,854,1.644,855,2.719,856,1.644,857,2.271,859,2.96,863,1.644,864,1.413,867,1.52,868,1.644,869,1.644,870,1.644,874,1.52,876,1.52,877,1.644,878,1.644,879,1.644,881,2.528,882,1.644,884,1.413,885,2.271,886,1.644,887,1.644,888,1.52,889,1.52,890,1.52,891,1.52,892,1.52,893,1.52,894,1.52,895,2.271,897,1.52,900,3.016,903,1.981,904,2.457,905,1.981,910,1.52,911,1.413,912,1.237,913,1.848,914,1.413,915,1.413,916,1.52,917,1.413,928,1.52,941,1.981,943,1.981,947,2.457,952,1.644,953,1.644,954,1.644,955,1.981,956,1.644,959,1.52,960,1.52,961,2.457,962,1.644,963,1.52,964,1.644,965,1.644,966,1.644,967,1.644,968,2.96,969,1.981,970,1.644,971,1.737,972,1.644,973,1.644,974,1.644,975,1.644,976,1.644,977,1.981,978,1.981,979,1.981,980,1.981,981,1.981,982,1.981,993,1.981,994,2.173,1016,1.794,1017,1.981,1018,1.981,1019,1.981,1030,2.627,1031,1.52,1032,1.644,1082,1.52,1148,1.237,1152,1.644,1339,3.386,1400,2.457,1409,1.644,1422,4.414,1564,2.719,1574,1.644,1579,1.644,1580,1.794,1582,1.794,1588,1.794,1593,1.794,1595,1.794,1596,1.794,1600,1.794,1601,1.794,1602,1.794,1604,1.794,1611,1.794,1612,1.644,1618,1.794,1619,1.794,1620,1.794,1621,1.794,1622,1.794,1623,1.794,1624,1.794,1625,1.794,1627,2.68,1628,2.68,1629,1.794,1632,2.68,1633,3.001,1634,1.794,1635,1.794,1636,3.209,1637,1.794,1638,1.794,1642,1.794,1643,1.794,1651,3.559,1656,1.794,1657,1.794,1658,2.68,1659,2.68,1660,1.794,1700,2.232,1701,2.232,1702,2.232,1703,2.232,1704,2.232,1705,2.232,1706,2.232,1707,2.232,1708,2.232,1709,2.232,1710,2.232,1711,2.232,1712,2.232,1713,2.232,1714,2.232,1715,2.232,1716,2.232,1717,2.232,1718,2.232,1719,2.232,1720,2.232,1721,2.232,1722,2.232,1723,2.232,1724,2.232,1725,2.232,1726,2.232,1727,2.232,1728,2.232,1729,2.232,1730,2.232,1731,2.232,1732,2.232,1733,2.232]],["title/miscellaneous/functions.html",[2093,1.753,2113,3.703]],["body/miscellaneous/functions.html",[9,0.309,23,0.019,52,0.058,53,0.058,2062,4.412,2063,5.277,2093,3.385,2113,4.97,2114,4.97]],["title/index.html",[9,0.16,2115,3.013,2116,3.013]],["body/index.html",[4,0.274,23,0.018,24,0.589,52,0.054,53,0.054,69,0.93,116,2.04,126,0.727,134,0.647,143,1.463,204,3.543,295,3.898,296,5.657,354,1.386,357,4.408,378,3.543,454,2.444,521,5.022,573,4.486,864,2.792,911,3.583,1059,2.444,1092,4.69,1768,4.408,2065,3.913,2084,5.997,2117,5.16,2118,6.184,2119,5.16,2120,6.622,2121,4.408,2122,5.16,2123,5.16,2124,5.16,2125,5.16,2126,5.16,2127,5.16,2128,5.16,2129,5.16,2130,5.16,2131,6.622,2132,5.16,2133,6.865,2134,5.16,2135,5.16,2136,5.16,2137,6.184,2138,6.184,2139,6.865,2140,5.16,2141,6.184,2142,5.16,2143,5.16,2144,5.16,2145,5.16,2146,5.16,2147,5.16,2148,5.16,2149,5.16,2150,5.16,2151,5.16,2152,5.16,2153,5.16]],["title/modules.html",[193,2.658]],["body/modules.html",[23,0.019,52,0.057,53,0.057,192,3.627,193,3.117,200,3.352,212,5.002,308,3.956,389,3.352,1555,5.002,2154,6.596,2155,6.931,2156,5.761]],["title/overview.html",[2157,4.198]],["body/overview.html",[2,2.345,23,0.022,52,0.052,53,0.052,56,2.075,135,2.06,136,1.748,164,1.747,166,1.947,169,1.947,172,1.947,174,1.947,176,1.947,178,1.947,180,1.947,182,1.844,184,1.844,185,1.947,186,1.947,192,4.778,193,2.679,194,3.796,195,4.23,196,4.23,197,4.23,198,4.23,199,4.23,200,3.784,201,2.895,202,2.856,203,3.755,204,3.4,308,4.765,309,4.23,320,3.116,361,2.881,547,2.502,971,2.203,1243,3.755,1383,4.23,1612,3.116,2157,4.23,2158,4.951]],["title/properties.html",[10,0.652,2065,2.285]],["body/properties.html",[10,0.88,23,0.02,52,0.058,53,0.058,2121,4.998,2159,5.851]],["title/miscellaneous/variables.html",[1212,3.287,2093,1.753]],["body/miscellaneous/variables.html",[9,0.292,23,0.022,25,0.408,52,0.056,53,0.056,153,2.537,154,2.537,207,4.037,342,1.735,344,2.049,495,2.854,1212,4.161,1550,4.161,2058,4.688,2059,5.983,2061,4.688,2062,4.161,2063,4.161,2093,3.193,2114,4.688,2160,5.487,2161,5.487,2162,6.413,2163,5.487,2164,5.487,2165,5.487]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":104,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["0.0",{"_index":1656,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["0.0.0",{"_index":2159,"title":{},"body":{"properties.html":{}}}],["0.11.6",{"_index":2092,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1305,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["0.2em",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["0.9em",{"_index":1308,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["0/1",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2052,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2018,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["003f91",{"_index":451,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["01",{"_index":1870,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["0px",{"_index":1667,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["1",{"_index":971,"title":{"interfaces/formStop-1.html":{}},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["1).foreach((stoptime",{"_index":981,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["1.0.9",{"_index":2077,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":2087,"title":{},"body":{"dependencies.html":{}}}],["1.11.5",{"_index":2081,"title":{},"body":{"dependencies.html":{}}}],["1.16.0",{"_index":2083,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":1314,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["1/3",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{},"components/UserDetailsComponent.html":{}}}],["10/10",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["1000",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["100px",{"_index":1913,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["10px",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{}}}],["11",{"_index":1612,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["11/11",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["1160px",{"_index":1313,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["11px",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{}}}],["12.0.2",{"_index":2122,"title":{},"body":{"index.html":{}}}],["12/13",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":1406,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["13",{"_index":1383,"title":{},"body":{"components/StopCreateComponent.html":{},"overview.html":{}}}],["13.3.9",{"_index":2069,"title":{},"body":{"dependencies.html":{}}}],["14.0.3",{"_index":2067,"title":{},"body":{"dependencies.html":{}}}],["140px",{"_index":811,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["14px",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["15",{"_index":908,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["15/16",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["15/20",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":686,"title":{},"body":{"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["16px",{"_index":674,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["171",{"_index":1284,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["18",{"_index":1925,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["18/20",{"_index":2037,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":814,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["1].arrivaltime",{"_index":951,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["1].arrivaltime).gettime",{"_index":735,"title":{},"body":{"classes/Route.html":{}}}],["1em",{"_index":1324,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["1px",{"_index":1289,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["2",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["2)].lat",{"_index":962,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["2)].lng",{"_index":964,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["2.0.7",{"_index":2074,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":1318,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["2/3",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":2048,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1926,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["200px",{"_index":1672,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["20px",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["21.5px",{"_index":1671,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["226",{"_index":1283,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["23/25",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["23/26",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":539,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["25px",{"_index":1133,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["2em",{"_index":1294,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["2px",{"_index":1303,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["3",{"_index":1243,"title":{},"body":{"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{},"overview.html":{}}}],["3.6.0",{"_index":2079,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1298,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["30px",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/StopCreateComponent.html":{}}}],["33",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":561,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["35px",{"_index":543,"title":{},"body":{"components/LoginComponent.html":{}}}],["3be2ab",{"_index":565,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["3px",{"_index":1920,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["4",{"_index":1917,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["4.2.0",{"_index":2076,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":2073,"title":{},"body":{"dependencies.html":{}}}],["4.5em",{"_index":1315,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["4/5",{"_index":2053,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2057,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":808,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["40px",{"_index":812,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["4560_0_1_a",{"_index":1649,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["45px",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/UsersManagementComponent.html":{}}}],["480px",{"_index":1323,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["481px",{"_index":1321,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["5",{"_index":547,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["5.1.3",{"_index":2075,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":2054,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":544,"title":{},"body":{"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["500px",{"_index":1009,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["50px",{"_index":564,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["514px",{"_index":1322,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["515px",{"_index":1319,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["5em",{"_index":1296,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["5px",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["6/10",{"_index":2017,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2056,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2019,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["60000",{"_index":739,"title":{},"body":{"classes/Route.html":{}}}],["63",{"_index":1007,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["66",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["7.5.5",{"_index":2088,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["730px",{"_index":1405,"title":{},"body":{"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["75",{"_index":1921,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["767px",{"_index":1320,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["768px",{"_index":673,"title":{},"body":{"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{}}}],["77",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2158,"title":{},"body":{"overview.html":{}}}],["8.2.3",{"_index":2071,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2049,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":998,"title":{},"body":{"components/RouteDetailsComponent.html":{},"coverage.html":{}}}],["83",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2055,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{}}}],["9/9",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["960px",{"_index":1317,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["a.nav",{"_index":682,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["a.navbar",{"_index":666,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["a.startdate",{"_index":1851,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["absolute",{"_index":1297,"title":{},"body":{"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["abstractcontrol",{"_index":784,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["accessors",{"_index":1584,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["accordingly",{"_index":109,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["account",{"_index":1978,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["actions",{"_index":1916,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["actiontext",{"_index":445,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["activatedroute",{"_index":369,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["activatedroutesnapshot",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":394,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"interfaces/UserForAuthentication.html":{}}}],["activelang",{"_index":395,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["activeusers",{"_index":1194,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["activeuserscount",{"_index":1176,"title":{},"body":{"classes/Statistics.html":{}}}],["actroute",{"_index":1032,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["actual",{"_index":1432,"title":{},"body":{"classes/StopTime.html":{}}}],["actual_component",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["add",{"_index":1059,"title":{},"body":{"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UsersManagementComponent.html":{},"index.html":{}}}],["adding/removing",{"_index":868,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["addmarkers",{"_index":832,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["addroute",{"_index":1140,"title":{},"body":{"injectables/RouteService.html":{}}}],["addroute(route",{"_index":1146,"title":{},"body":{"injectables/RouteService.html":{}}}],["adds",{"_index":1148,"title":{},"body":{"injectables/RouteService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["addstop",{"_index":1409,"title":{},"body":{"injectables/StopService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["addstop(stop",{"_index":1412,"title":{},"body":{"injectables/StopService.html":{}}}],["addstopmarkerinmap",{"_index":1364,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["addstopmarkerinmap(event",{"_index":1367,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["addstoptime",{"_index":1461,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["addstoptime(stoptime",{"_index":1467,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["addtrip",{"_index":1735,"title":{},"body":{"injectables/TripService.html":{}}}],["addtrip(trip",{"_index":1740,"title":{},"body":{"injectables/TripService.html":{}}}],["addwaypoint",{"_index":978,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["admin",{"_index":1990,"title":{},"body":{"components/UsersManagementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":1227,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["again",{"_index":132,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["agencies",{"_index":96,"title":{},"body":{"injectables/AgencyService.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["agency",{"_index":1,"title":{"classes/Agency.html":{}},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"coverage.html":{}}}],["agency.agencyname",{"_index":803,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["agencyid",{"_index":11,"title":{},"body":{"classes/Agency.html":{},"classes/Route.html":{}}}],["agencylang",{"_index":12,"title":{},"body":{"classes/Agency.html":{}}}],["agencyname",{"_index":13,"title":{},"body":{"classes/Agency.html":{}}}],["agencyphone",{"_index":14,"title":{},"body":{"classes/Agency.html":{}}}],["agencyservice",{"_index":55,"title":{"injectables/AgencyService.html":{}},"body":{"injectables/AgencyService.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"coverage.html":{}}}],["agencytimezone",{"_index":15,"title":{},"body":{"classes/Agency.html":{}}}],["agencyurl",{"_index":16,"title":{},"body":{"classes/Agency.html":{}}}],["align",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["allow",{"_index":1233,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["allstops",{"_index":1580,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["alltrips",{"_index":1581,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["along",{"_index":1435,"title":{},"body":{"classes/StopTime.html":{}}}],["amount",{"_index":707,"title":{},"body":{"classes/Route.html":{}}}],["angular",{"_index":2120,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2066,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1097,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["angular/cdk/layout",{"_index":1231,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["angular/common",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":84,"title":{},"body":{"injectables/AgencyService.html":{},"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2068,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":85,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["angular/forms",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["angular/google",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["angular/material",{"_index":2070,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["angular/material/progress",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["angular/material/tabs",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["api",{"_index":609,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["aplies",{"_index":1063,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["app",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["app.component",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.html",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":319,"title":{},"body":{"modules/AppServerModule.html":{}}}],["appcomponent",{"_index":135,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":391,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"interfaces/UserForAuthentication.html":{}}}],["applyfilter",{"_index":1053,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["applyfilter(event",{"_index":1061,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["appmodule",{"_index":192,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":308,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":1922,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["array",{"_index":769,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["arrival",{"_index":1430,"title":{},"body":{"classes/StopTime.html":{}}}],["arrivaltime",{"_index":1421,"title":{},"body":{"classes/StopTime.html":{}}}],["artifacts",{"_index":2134,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1436,"title":{},"body":{"classes/StopTime.html":{}}}],["atob(token.split('.')[1",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["attribute",{"_index":1060,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["autenticated",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["authchagesub",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["authchanged",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["authchangesub",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["authchengesub",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":358,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":396,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["authguard",{"_index":279,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authresponse",{"_index":360,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{}}}],["authservice",{"_index":201,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1010,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["automatically",{"_index":2127,"title":{},"body":{"index.html":{}}}],["available",{"_index":389,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/StopTimeService.html":{},"interfaces/UserForAuthentication.html":{},"modules.html":{}}}],["availablelangs",{"_index":392,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"interfaces/UserForAuthentication.html":{}}}],["awesome",{"_index":373,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["b",{"_index":1850,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["b.startdate",{"_index":1852,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["back",{"_index":762,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["backend",{"_index":112,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["background",{"_index":449,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["backgroundcolor",{"_index":1281,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["bad",{"_index":128,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["ban",{"_index":1832,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["banned",{"_index":1786,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["banreason",{"_index":1787,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["banusers",{"_index":1961,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["bar",{"_index":1278,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["base_url",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":723,"title":{},"body":{"classes/Route.html":{}}}],["baseline",{"_index":1295,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["before",{"_index":1806,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["beforetoday",{"_index":1886,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["belonging",{"_index":719,"title":{},"body":{"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["between",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["black",{"_index":540,"title":{},"body":{"components/LoginComponent.html":{},"components/StatisticsComponent.html":{}}}],["block",{"_index":1307,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["body",{"_index":117,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["boolean",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop-1.html":{}}}],["bootstrap",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["border",{"_index":562,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["bottom",{"_index":443,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["box",{"_index":566,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["brand",{"_index":667,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["break",{"_index":671,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["breakpointobserver",{"_index":1201,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["breakpointobserver,private",{"_index":1235,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["breakpoints",{"_index":1230,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["breakpoints.small",{"_index":1238,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["breakpoints.xsmall",{"_index":1239,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["browse",{"_index":2155,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":2133,"title":{},"body":{"index.html":{}}}],["builds",{"_index":757,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["bus",{"_index":2105,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["button",{"_index":415,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{}}}],["buttons",{"_index":815,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["calculate",{"_index":721,"title":{},"body":{"classes/Route.html":{}}}],["calculaterouteduration",{"_index":699,"title":{},"body":{"classes/Route.html":{}}}],["call",{"_index":886,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["called",{"_index":1205,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["canactivate",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":745,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["cancels",{"_index":759,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["canvas",{"_index":1272,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["canvas.getcontext('2d",{"_index":1275,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["capabilities",{"_index":2149,"title":{},"body":{"index.html":{}}}],["card",{"_index":520,"title":{},"body":{"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["caret",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["casts",{"_index":1611,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["catcherror",{"_index":86,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["center",{"_index":444,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["centered",{"_index":876,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["cfcccc",{"_index":813,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["change",{"_index":454,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"index.html":{}}}],["changelang",{"_index":507,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{}}}],["changelang(lang",{"_index":455,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["changes",{"_index":452,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["changing",{"_index":1556,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["chart",{"_index":1195,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["chart(ctx",{"_index":1277,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["chart.js",{"_index":1208,"title":{},"body":{"components/StatisticsComponent.html":{},"dependencies.html":{}}}],["chart.register(...registerables",{"_index":1236,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["check",{"_index":2152,"title":{},"body":{"index.html":{}}}],["checkbox",{"_index":1093,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["checked",{"_index":1069,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["checking",{"_index":1804,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["checks",{"_index":1071,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{}}}],["choice",{"_index":2145,"title":{},"body":{"index.html":{}}}],["clamp",{"_index":1001,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Agency.html":{},"classes/Route.html":{},"classes/Statistics.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"classes/Trip.html":{},"classes/User.html":{}},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Agency.html":{},"classes/Route.html":{},"classes/Statistics.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"classes/Trip.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":1078,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["cli",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["clickableicons",{"_index":893,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["clicked",{"_index":1372,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["client",{"_index":105,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["close",{"_index":1908,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["clues",{"_index":119,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":309,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":311,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":310,"title":{},"body":{"modules/AppServerModule.html":{}}}],["code",{"_index":116,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["color",{"_index":450,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["column",{"_index":528,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["columns",{"_index":1084,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["command",{"_index":2146,"title":{},"body":{"index.html":{}}}],["communicate",{"_index":68,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["communicates",{"_index":93,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["company",{"_index":1128,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["component",{"_index":134,"title":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["component_template",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["components",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"overview.html":{}}}],["components/login/login.component",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["components/nav",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["components/route",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["components/statistics/statistics.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["components/stop",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["components/trip",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["components/user",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["components/users",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["compstop.stopid",{"_index":1635,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["compstop.stoplon",{"_index":1638,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["comunicate",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["comunicates",{"_index":397,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["console",{"_index":81,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"interfaces/formStop-1.html":{}}}],["console.error",{"_index":122,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["console.error('an",{"_index":110,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["console.error(error",{"_index":1626,"title":{},"body":{"components/TripCreateComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{}}}],["console.log(error",{"_index":1716,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["console.log(this.tripstops",{"_index":1715,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["console.log(userid",{"_index":2008,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["const",{"_index":424,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["constructor(activeuserscount",{"_index":1180,"title":{},"body":{"classes/Statistics.html":{}}}],["constructor(agencyid",{"_index":18,"title":{},"body":{"classes/Agency.html":{}}}],["constructor(authservice",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["constructor(breakpointobserver",{"_index":1200,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["constructor(http",{"_index":62,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["constructor(id",{"_index":1495,"title":{},"body":{"classes/Suspension.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":98,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["constructor(route",{"_index":1798,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["constructor(routeid",{"_index":700,"title":{},"body":{"classes/Route.html":{}}}],["constructor(router",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(routeservice",{"_index":747,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteManagementComponent.html":{}}}],["constructor(service",{"_index":642,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["constructor(stopid",{"_index":1343,"title":{},"body":{"classes/Stop.html":{}}}],["constructor(stopservice",{"_index":1365,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["constructor(tripid",{"_index":1427,"title":{},"body":{"classes/StopTime.html":{},"classes/Trip.html":{}}}],["constructor(urlroute",{"_index":838,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["constructor(userservice",{"_index":1964,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["contain",{"_index":118,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["container",{"_index":448,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["container:hover",{"_index":1306,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["contains",{"_index":1371,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["content",{"_index":538,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["control",{"_index":1884,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["convert",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["converttoparammap",{"_index":1029,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["coordinates",{"_index":857,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["correct",{"_index":419,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["correctly",{"_index":421,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["corresponding",{"_index":856,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["coverage",{"_index":2011,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{}}}],["create'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["create.component",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["create.component.css",{"_index":742,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["create.component.html",{"_index":743,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["create.component.ts",{"_index":741,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{}}}],["create.component.ts:100",{"_index":1585,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:120",{"_index":1591,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:127",{"_index":1373,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:146",{"_index":1587,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:159",{"_index":1594,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:167",{"_index":1614,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:174",{"_index":1610,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:179",{"_index":1597,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:187",{"_index":1586,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:205",{"_index":1590,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:217",{"_index":1592,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:22",{"_index":1382,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:24",{"_index":780,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["create.component.ts:270",{"_index":1589,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:28",{"_index":778,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["create.component.ts:31",{"_index":1606,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:32",{"_index":770,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{}}}],["create.component.ts:37",{"_index":773,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{}}}],["create.component.ts:41",{"_index":1379,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:42",{"_index":750,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/TripCreateComponent.html":{}}}],["create.component.ts:45",{"_index":1381,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:49",{"_index":1607,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:50",{"_index":1380,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:53",{"_index":1613,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:55",{"_index":1366,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:57",{"_index":764,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/TripCreateComponent.html":{}}}],["create.component.ts:61",{"_index":1608,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:64",{"_index":765,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["create.component.ts:65",{"_index":1374,"title":{},"body":{"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{}}}],["create.component.ts:70",{"_index":1609,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:74",{"_index":758,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/TripCreateComponent.html":{}}}],["create.component.ts:78",{"_index":1369,"title":{},"body":{"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{}}}],["create.component.ts:82",{"_index":1598,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:87",{"_index":1599,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:90",{"_index":1375,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:91",{"_index":1605,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:96",{"_index":1603,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create/:id",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["create/route",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"components/RouteCreateComponent.html":{},"coverage.html":{}}}],["create/stop",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"components/StopCreateComponent.html":{},"coverage.html":{}}}],["create/trip",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"components/TripCreateComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{}}}],["created",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{}}}],["createrouteform",{"_index":744,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["creates",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["createstopform",{"_index":1362,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["createwaypoints",{"_index":833,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["creating",{"_index":1384,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["creation",{"_index":760,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["creationdate",{"_index":1755,"title":{},"body":{"classes/User.html":{},"components/UsersManagementComponent.html":{}}}],["ctx",{"_index":1274,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["current",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["currently",{"_index":903,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["currentuser",{"_index":1788,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["currentuser.creationdate",{"_index":1894,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["currentuser.email",{"_index":1890,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["currentuser.rating",{"_index":1892,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["currentuser.username",{"_index":1887,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["cursor",{"_index":1005,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["custom",{"_index":1802,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["dashboard",{"_index":353,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavMenuComponent.html":{}}}],["data",{"_index":418,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["data.activeuserscount",{"_index":1246,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["data.mostusedtransport",{"_index":1875,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["data.newusers",{"_index":1250,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["data.timespent",{"_index":1878,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["data.totalusers",{"_index":1248,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["database",{"_index":767,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"injectables/RouteService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"interfaces/formStop.html":{}}}],["datasets",{"_index":1280,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["datasource",{"_index":1049,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["date",{"_index":994,"title":{},"body":{"components/RouteDetailsComponent.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["date(\"2099",{"_index":1869,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["date(arrivaltime",{"_index":1450,"title":{},"body":{"classes/StopTime.html":{}}}],["date(control.value",{"_index":1885,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["date(creationdate",{"_index":1780,"title":{},"body":{"classes/User.html":{}}}],["date(departuretime",{"_index":1452,"title":{},"body":{"classes/StopTime.html":{}}}],["date(this.stops[0].arrivaltime).gettime",{"_index":737,"title":{},"body":{"classes/Route.html":{}}}],["date(this.stops[this.stops.length",{"_index":734,"title":{},"body":{"classes/Route.html":{}}}],["date(this.suspenddate.value",{"_index":1859,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["date.now",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["date.setutchours(number(stop.departuretime.substring(0",{"_index":1729,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["date.setutchours(number(stop.stoptime.substring(0",{"_index":1653,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["date.setutcminutes(number(stop.departuretime.substring(3",{"_index":1730,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["date.setutcminutes(number(stop.stoptime.substring(3",{"_index":1654,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["dateaftertodayvalidator",{"_index":1793,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["datepipe",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{}}}],["dates",{"_index":848,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["dd/mm/yyyy",{"_index":1895,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["de",{"_index":922,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["declarations",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["decode",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoration",{"_index":1136,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["decorators",{"_index":1087,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["deep",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["deep.mat",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["default",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":1552,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["delete",{"_index":1152,"title":{},"body":{"injectables/RouteService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["delete_forever",{"_index":1666,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["deleted",{"_index":1153,"title":{},"body":{"injectables/RouteService.html":{}}}],["deleteroute",{"_index":1141,"title":{},"body":{"injectables/RouteService.html":{}}}],["deleteroute(routeid",{"_index":1149,"title":{},"body":{"injectables/RouteService.html":{}}}],["deleteroutes",{"_index":1054,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["deletes",{"_index":1068,"title":{},"body":{"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{}}}],["deletestoptime",{"_index":1462,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["deletestoptime(tripid",{"_index":1470,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["departure",{"_index":989,"title":{},"body":{"components/RouteDetailsComponent.html":{},"classes/StopTime.html":{}}}],["departuretime",{"_index":1422,"title":{},"body":{"classes/StopTime.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["dependencies",{"_index":194,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["descending",{"_index":1818,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["design",{"_index":1312,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["destination",{"_index":710,"title":{},"body":{"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["details",{"_index":821,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["details'},{'name",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["details.component",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.css",{"_index":822,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details.component.html",{"_index":823,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details.component.ts",{"_index":820,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:101",{"_index":865,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:123",{"_index":872,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:129",{"_index":861,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:132",{"_index":1829,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:136",{"_index":866,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:144",{"_index":851,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:152",{"_index":1809,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:159",{"_index":862,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:164",{"_index":1820,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:169",{"_index":858,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:174",{"_index":1821,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:183",{"_index":1824,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:188",{"_index":1823,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:199",{"_index":1801,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":1833,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":896,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":1839,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:33",{"_index":1830,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:37",{"_index":1831,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:38",{"_index":880,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:41",{"_index":1836,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:45",{"_index":898,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details.component.ts:49",{"_index":1834,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:50",{"_index":909,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:53",{"_index":1800,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:54",{"_index":875,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:58",{"_index":899,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:62",{"_index":883,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:66",{"_index":1819,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:74",{"_index":901,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:76",{"_index":1816,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:78",{"_index":902,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:82",{"_index":907,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:86",{"_index":842,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:97",{"_index":1827,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.hide",{"_index":1866,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["details.user",{"_index":1863,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["details/:id",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["details/route",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{},"coverage.html":{}}}],["details/user",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["detalhada",{"_index":921,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["dev",{"_index":2125,"title":{},"body":{"index.html":{}}}],["development",{"_index":2123,"title":{},"body":{"index.html":{}}}],["direction",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["direction.ts",{"_index":2098,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["directions",{"_index":850,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["directionsoptions",{"_index":824,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["directionsresults",{"_index":825,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["directive",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["directives",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2132,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2136,"title":{},"body":{"index.html":{}}}],["disabledefaultui",{"_index":891,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["disabledoubleclickzoom",{"_index":894,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["display",{"_index":525,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["display:flex",{"_index":684,"title":{},"body":{"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{}}}],["displayed",{"_index":1085,"title":{},"body":{"components/RouteManagementComponent.html":{},"classes/Trip.html":{},"components/UsersManagementComponent.html":{}}}],["displayedcolumns",{"_index":1050,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["dist",{"_index":2135,"title":{},"body":{"index.html":{}}}],["distance",{"_index":1433,"title":{},"body":{"classes/StopTime.html":{}}}],["divider",{"_index":810,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["document.getelementbyid('mychart",{"_index":1273,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["documentation",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["dodgerblue",{"_index":1135,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["doesn't",{"_index":1554,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["dom",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["done",{"_index":420,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["draggable",{"_index":895,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["duration",{"_index":722,"title":{},"body":{"classes/Route.html":{},"components/RouteManagementComponent.html":{}}}],["dynamic",{"_index":2072,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":2143,"title":{},"body":{"index.html":{}}}],["edit",{"_index":900,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["edit'},{'name",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["edit.component",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["edit.component.css",{"_index":1017,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["edit.component.html",{"_index":1018,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["edit.component.ts",{"_index":1016,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop-1.html":{}}}],["edit.component.ts:100",{"_index":1676,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:119",{"_index":1682,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:155",{"_index":1699,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:162",{"_index":1678,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:175",{"_index":1684,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:183",{"_index":1695,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:188",{"_index":1685,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:196",{"_index":1677,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:214",{"_index":1681,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:224",{"_index":1680,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:244",{"_index":1683,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:27",{"_index":1027,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:300",{"_index":1679,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:31",{"_index":1026,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{}}}],["edit.component.ts:35",{"_index":1024,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:40",{"_index":1025,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:42",{"_index":1689,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:49",{"_index":1692,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:50",{"_index":1020,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:53",{"_index":1698,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:57",{"_index":1687,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:61",{"_index":1693,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:65",{"_index":1690,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:66",{"_index":1022,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:70",{"_index":1696,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:74",{"_index":1686,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:78",{"_index":1688,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:83",{"_index":1691,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:84",{"_index":1023,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:92",{"_index":1694,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:94",{"_index":1021,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:96",{"_index":1697,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit/:id",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["edit/route",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"components/RouteEditComponent.html":{},"coverage.html":{}}}],["edit/trip",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop-1.html":{}}}],["edited",{"_index":1157,"title":{},"body":{"injectables/RouteService.html":{},"injectables/TripService.html":{}}}],["editing",{"_index":789,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["editroute",{"_index":1142,"title":{},"body":{"injectables/RouteService.html":{}}}],["editroute(route",{"_index":1154,"title":{},"body":{"injectables/RouteService.html":{}}}],["editrouteform",{"_index":1019,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["edits",{"_index":1473,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["editstoptime",{"_index":1463,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["editstoptime(tripid",{"_index":1474,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["edittrip",{"_index":1736,"title":{},"body":{"injectables/TripService.html":{}}}],["edittrip(trip",{"_index":1742,"title":{},"body":{"injectables/TripService.html":{}}}],["element",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["elements",{"_index":1072,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["email",{"_index":407,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/User.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{}}}],["empty",{"_index":1660,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["en",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["end",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["enddate",{"_index":1491,"title":{},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{}}}],["entry.key.tripheadsign",{"_index":986,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["enum",{"_index":779,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["enumerations",{"_index":2094,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/transport",{"_index":787,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{}}}],["enums/travel",{"_index":1574,"title":{},"body":{"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["enums/user",{"_index":1773,"title":{},"body":{"classes/User.html":{}}}],["environment",{"_index":2059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":439,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["err.message",{"_index":441,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["error",{"_index":77,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["error('something",{"_index":127,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["error(error.error",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.error",{"_index":111,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["error.status",{"_index":103,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["errormessage",{"_index":363,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["evenly",{"_index":685,"title":{},"body":{"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["event",{"_index":873,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/UsersManagementComponent.html":{}}}],["event.latlng?.lat",{"_index":1390,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["event.latlng?.lng",{"_index":1391,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["event.latlng?.tojson",{"_index":1389,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["event.target",{"_index":1121,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["event.value",{"_index":944,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["execute",{"_index":2141,"title":{},"body":{"index.html":{}}}],["executed",{"_index":414,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["existent",{"_index":756,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/StopService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["existing",{"_index":1065,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["export",{"_index":45,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["exports",{"_index":1549,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["facing",{"_index":124,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["fafaf9",{"_index":678,"title":{},"body":{"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{}}}],["fails",{"_index":79,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["false",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/variables.html":{}}}],["feedback",{"_index":386,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["ferry",{"_index":2106,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fff",{"_index":1302,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["field",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["fields",{"_index":806,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["files",{"_index":2129,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1064,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["filtervalue",{"_index":1120,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":1124,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["finishtime",{"_index":733,"title":{},"body":{"classes/Route.html":{}}}],["first",{"_index":864,"title":{},"body":{"components/RouteDetailsComponent.html":{},"classes/StopTime.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["flex",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["float",{"_index":1919,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["flow",{"_index":807,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["focused",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["font",{"_index":541,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["footer",{"_index":559,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":380,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["formarray",{"_index":785,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["format",{"_index":847,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["formated",{"_index":1765,"title":{},"body":{"classes/User.html":{}}}],["formateddate",{"_index":1756,"title":{},"body":{"classes/User.html":{}}}],["formbuilder",{"_index":749,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["formcontrol",{"_index":366,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["formcontrol(null",{"_index":408,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["formgroup",{"_index":367,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["forms",{"_index":854,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["formsmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["formstop",{"_index":1633,"title":{"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["full",{"_index":35,"title":{},"body":{"classes/Agency.html":{},"modules/AppModule.html":{},"components/StopCreateComponent.html":{}}}],["function",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/StopTime.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["functions",{"_index":2113,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2150,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1004,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["generate",{"_index":2131,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2119,"title":{},"body":{"index.html":{}}}],["getactiveusers",{"_index":606,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["getagencies",{"_index":59,"title":{},"body":{"injectables/AgencyService.html":{}}}],["getbaseurl",{"_index":2063,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["geterrormessage",{"_index":1794,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["gethoursandminutesstring",{"_index":1426,"title":{},"body":{"classes/StopTime.html":{}}}],["getmostactivezones",{"_index":618,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["getnumberofnewusers",{"_index":615,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["getroute",{"_index":1143,"title":{},"body":{"injectables/RouteService.html":{}}}],["getroute(routeid",{"_index":1158,"title":{},"body":{"injectables/RouteService.html":{}}}],["getroutes",{"_index":1144,"title":{},"body":{"injectables/RouteService.html":{}}}],["gets",{"_index":751,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StopService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["getstops",{"_index":1410,"title":{},"body":{"injectables/StopService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["getstopsofroute",{"_index":1464,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["getstopsofroute(routeid",{"_index":1476,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["getstopsoftrip",{"_index":1465,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["getstopsoftrip(tripid",{"_index":1478,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["getsuspensions",{"_index":1795,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["getsuspensionsofuser",{"_index":1511,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["getsuspensionsofuser(userid",{"_index":1515,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["gettimeofstoptimelist",{"_index":834,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["gettimeofstoptimelist(entry.value",{"_index":987,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["gettimeofstoptimelist(stoptimes",{"_index":860,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["getting",{"_index":2115,"title":{"index.html":{}},"body":{}}],["gettotalnumberofusers",{"_index":612,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["gettranslation",{"_index":1538,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{}}}],["gettranslation(lang",{"_index":1540,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["gettrip",{"_index":1737,"title":{},"body":{"injectables/TripService.html":{}}}],["gettrip(tripid",{"_index":1744,"title":{},"body":{"injectables/TripService.html":{}}}],["gettripsofroute",{"_index":1738,"title":{},"body":{"injectables/TripService.html":{}}}],["gettripsofroute(routeid",{"_index":1746,"title":{},"body":{"injectables/TripService.html":{}}}],["getuser",{"_index":1796,"title":{},"body":{"components/UserDetailsComponent.html":{},"injectables/UserService.html":{}}}],["getuser(userid",{"_index":1948,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserfromemail",{"_index":1945,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserfromemail(email",{"_index":1950,"title":{},"body":{"injectables/UserService.html":{}}}],["getusermostusedtransport",{"_index":622,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{},"components/UserDetailsComponent.html":{}}}],["getusermostusedtransport(userid",{"_index":624,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["getusers",{"_index":1946,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersinfo",{"_index":1962,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["getuserssuspensionpermanent",{"_index":1963,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["getusertimespent",{"_index":628,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{},"components/UserDetailsComponent.html":{}}}],["getusertimespent(userid",{"_index":632,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["give",{"_index":385,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["gives",{"_index":347,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["go",{"_index":357,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["google",{"_index":849,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.directionsrendereroptions",{"_index":877,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.directionsrequest",{"_index":966,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.directionswaypoint",{"_index":859,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.latlng(compstop.stoplat",{"_index":1637,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.latlng(stoptime.stop.stoplat",{"_index":957,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["google.maps.latlngliteral",{"_index":874,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.mapmouseevent",{"_index":1368,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["google.maps.mapoptions",{"_index":888,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.markeroptions",{"_index":897,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.travelmode.driving",{"_index":973,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["googlemapsmodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":2156,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["grid",{"_index":1291,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["grow",{"_index":1670,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["guard",{"_index":320,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["guid",{"_index":600,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{}}}],["guid.create().tostring",{"_index":1645,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["handle",{"_index":82,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["handleerror",{"_index":61,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["handleerror(error",{"_index":73,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["handles",{"_index":76,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["happened",{"_index":129,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["header",{"_index":536,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{}}}],["height",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["help",{"_index":521,"title":{},"body":{"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"index.html":{}}}],["helpmessage",{"_index":919,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["hh:mm",{"_index":949,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["hidden",{"_index":997,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["holds",{"_index":884,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["horário",{"_index":927,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["hours",{"_index":1445,"title":{},"body":{"classes/StopTime.html":{}}}],["html",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["htmlinputelement).value",{"_index":1122,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["http",{"_index":65,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":2126,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":63,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/StatisticsComponent.html":{}}}],["httperrorresponse",{"_index":74,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{}}}],["httprequest",{"_index":78,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["icon",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["id",{"_index":28,"title":{},"body":{"classes/Agency.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"injectables/RouteService.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["identifier",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":1346,"title":{},"body":{"classes/Stop.html":{}}}],["idx",{"_index":1651,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["ignore",{"_index":918,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["image",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"classes/User.html":{}}}],["image.round",{"_index":1132,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["image.tall",{"_index":1134,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["img",{"_index":676,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["implements",{"_index":354,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["import",{"_index":83,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["important",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["imports",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["inbound",{"_index":2110,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["information",{"_index":348,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["informations",{"_index":1966,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["informação",{"_index":920,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["inicializer",{"_index":1975,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["initialized",{"_index":1206,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["inject",{"_index":1840,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":56,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injects",{"_index":1203,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["input",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{},"components/UserDetailsComponent.html":{}}}],["input.value",{"_index":1131,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["inputs",{"_index":382,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["inserted",{"_index":1805,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["interface",{"_index":359,"title":{"interfaces/AuthResponse.html":{},"interfaces/MostUsedTransportResponse.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["interfaces",{"_index":361,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/MostUsedTransportResponse.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["interval",{"_index":1828,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["isallselected",{"_index":1055,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["isauthenticated",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["isauthsuccessful",{"_index":364,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["isdevmode",{"_index":1547,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["isloading",{"_index":388,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["isloggedin",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin(token",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloginpage",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["isn't",{"_index":1815,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["it's",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{}}}],["item",{"_index":681,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["items",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["iterates",{"_index":852,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["jquery",{"_index":2078,"title":{},"body":{"dependencies.html":{}}}],["json.parse(payload",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["karma",{"_index":2142,"title":{},"body":{"index.html":{}}}],["keys",{"_index":1224,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["label",{"_index":393,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{}}}],["labels",{"_index":1279,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["labelsub",{"_index":1196,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["lang",{"_index":453,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"interfaces/UserForAuthentication.html":{}}}],["language",{"_index":31,"title":{},"body":{"classes/Agency.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"interfaces/UserForAuthentication.html":{}}}],["languages",{"_index":390,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["languageselection",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{}}}],["last",{"_index":809,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["lat",{"_index":960,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["later",{"_index":133,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["latitude",{"_index":1353,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["left",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["legend",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["lets",{"_index":1588,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["level",{"_index":910,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["li",{"_index":683,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["li.nav",{"_index":680,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["library",{"_index":1216,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["lightcoral",{"_index":1923,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["lightgreen",{"_index":1924,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["lightsalmon",{"_index":1927,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["line",{"_index":1000,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["link",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{}}}],["linkedstop",{"_index":1469,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["linking",{"_index":869,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["linkmarkers",{"_index":835,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["list",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StopService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["lista",{"_index":925,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["literal",{"_index":513,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{}}}],["lng",{"_index":963,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["loader",{"_index":318,"title":{},"body":{"modules/AppServerModule.html":{}}}],["loading",{"_index":387,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["local",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('useremail",{"_index":658,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["localstorage.removeitem(\"token",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(\"token",{"_index":433,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["localstorage.setitem(\"useremail",{"_index":435,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["located",{"_index":42,"title":{},"body":{"classes/Agency.html":{}}}],["location",{"_index":1376,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["locationid",{"_index":1378,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["locationservice",{"_index":1377,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["logged",{"_index":649,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["login",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["login'},{'name",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["login.component.css",{"_index":376,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["login.component.html",{"_index":374,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["login.email",{"_index":428,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["login.password",{"_index":429,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["login/login.component",{"_index":653,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["loginbutton",{"_index":560,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":164,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincredentials",{"_index":508,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincredentials(loginform",{"_index":423,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["loginform",{"_index":383,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["loginform.value",{"_index":425,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["loginuser",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":675,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["logout",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"components/NavMenuComponent.html":{}}}],["long",{"_index":713,"title":{},"body":{"classes/Route.html":{}}}],["longitude",{"_index":1354,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["made",{"_index":887,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["main",{"_index":1234,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["makes",{"_index":1748,"title":{},"body":{"injectables/TripService.html":{}}}],["management",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["management'},{'name",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["management.add",{"_index":1401,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["management.component",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["management.component.css",{"_index":1047,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["management.component.html",{"_index":1048,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["management.component.ts",{"_index":1046,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:104",{"_index":1969,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:111",{"_index":1062,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:119",{"_index":1968,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:141",{"_index":1977,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:161",{"_index":1967,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:23",{"_index":1982,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:25",{"_index":1089,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:27",{"_index":1983,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:29",{"_index":1083,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:31",{"_index":1979,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:33",{"_index":1080,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:35",{"_index":1981,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:37",{"_index":1091,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:39",{"_index":1980,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:41",{"_index":1094,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:43",{"_index":1965,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:45",{"_index":1057,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:55",{"_index":1074,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:58",{"_index":1974,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:65",{"_index":1973,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:74",{"_index":1976,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:76",{"_index":1067,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:85",{"_index":1970,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:90",{"_index":1070,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:99",{"_index":1075,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.create",{"_index":1658,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["management/route",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"components/RouteManagementComponent.html":{},"coverage.html":{}}}],["management/users",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["map",{"_index":316,"title":{},"body":{"modules/AppServerModule.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["mapdirectionsservice",{"_index":841,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["mapoptions",{"_index":826,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["mapping",{"_index":782,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["maps",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["maptypeid",{"_index":889,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["margin",{"_index":545,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["marked",{"_index":1232,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["marker",{"_index":855,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["markeroptions",{"_index":827,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["markerpos",{"_index":1363,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["markers",{"_index":828,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["mat",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["matbuttonmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["matches",{"_index":753,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["matching",{"_index":53,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["math.floor((finishtime",{"_index":738,"title":{},"body":{"classes/Route.html":{}}}],["maticonmodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginator",{"_index":1086,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["matpaginatormodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasource",{"_index":1079,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["mattabledatasource(this.routes",{"_index":1102,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["mattabledatasource(this.users",{"_index":2002,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["mattablemodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1008,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["max_waypoints",{"_index":977,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["media",{"_index":672,"title":{},"body":{"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{}}}],["menu",{"_index":637,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu'},{'name",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["menu.component",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["menu.component.css",{"_index":638,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.html",{"_index":639,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts",{"_index":636,"title":{},"body":{"components/NavMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:19",{"_index":647,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:23",{"_index":646,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:27",{"_index":648,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":643,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:45",{"_index":645,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:53",{"_index":644,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu/enlang.png",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{}}}],["menu/nav",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"components/NavMenuComponent.html":{},"coverage.html":{}}}],["menu/ptlang.png",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{}}}],["message",{"_index":125,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["messages",{"_index":1811,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["metadata",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["method",{"_index":607,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopTimeService.html":{},"injectables/TripService.html":{}}}],["methods",{"_index":58,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["metro",{"_index":2103,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["min",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["minutes",{"_index":1446,"title":{},"body":{"classes/StopTime.html":{}}}],["miscellaneous",{"_index":2093,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/agency",{"_index":89,"title":{},"body":{"injectables/AgencyService.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{}}}],["models/route",{"_index":786,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["models/statistics",{"_index":602,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["models/stop",{"_index":913,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["models/suspension",{"_index":1526,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["models/trip",{"_index":916,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["models/user",{"_index":1843,"title":{},"body":{"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["modify",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":191,"title":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/TranslocoRootModule.html":{}},"body":{}}],["modulemaploadermodule",{"_index":314,"title":{},"body":{"modules/AppServerModule.html":{}}}],["modules",{"_index":193,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/StatisticsComponent.html":{},"modules/TranslocoRootModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2151,"title":{},"body":{"index.html":{}}}],["mostactivezones",{"_index":1197,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["mostactivezonesdata",{"_index":1198,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["mostactivezoneskeys",{"_index":1199,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["mostusedtransport",{"_index":599,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"classes/Statistics.html":{},"injectables/StatisticsService.html":{}}}],["mostusedtransportresponse",{"_index":597,"title":{"interfaces/MostUsedTransportResponse.html":{}},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["mostusedtransporttype",{"_index":1789,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["mychart",{"_index":1309,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["name",{"_index":24,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"index.html":{}}}],["nav",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["navbar",{"_index":679,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["navigate",{"_index":378,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{},"index.html":{}}}],["navigator.geolocation.getcurrentposition((position",{"_index":1385,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["navmenu",{"_index":654,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["navmenucomponent",{"_index":166,"title":{"components/NavMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["need",{"_index":2147,"title":{},"body":{"index.html":{}}}],["network",{"_index":107,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["new",{"_index":126,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["newusers",{"_index":1177,"title":{},"body":{"classes/Statistics.html":{},"components/StatisticsComponent.html":{}}}],["next",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["ng",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"index.html":{}}}],["ngfactory",{"_index":317,"title":{},"body":{"modules/AppServerModule.html":{}}}],["ngmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/StatisticsComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["ngneat/transloco",{"_index":371,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["ngoninit",{"_index":404,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["nguniversal/module",{"_index":315,"title":{},"body":{"modules/AppServerModule.html":{}}}],["none",{"_index":1299,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["normal",{"_index":669,"title":{},"body":{"components/NavMenuComponent.html":{},"components/UserDetailsComponent.html":{}}}],["normally",{"_index":1572,"title":{},"body":{"classes/Trip.html":{}}}],["null",{"_index":1640,"title":{},"body":{"components/TripCreateComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{}}}],["number",{"_index":38,"title":{},"body":{"classes/Agency.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["number(this.createrouteform.controls.transporttype.value",{"_index":796,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["number(this.createrouteform.controls.triptransportdirection.value",{"_index":1648,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["number(this.editrouteform.controls.triptransportdirection.value",{"_index":1725,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["number(v)).filter(v",{"_index":776,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["number.isfinite(v",{"_index":777,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["numrows",{"_index":1115,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["numselected",{"_index":1113,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["object",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"miscellaneous/variables.html":{}}}],["object.keys(data",{"_index":1253,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["object.keys(data).map(zone",{"_index":1255,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["object.keys(transporttype).map(v",{"_index":775,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["object.keys(traveldirection).map(v",{"_index":1604,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["object.values(data",{"_index":1259,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["observable",{"_index":72,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteDetailsComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["observe",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtain",{"_index":422,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["obtained",{"_index":1161,"title":{},"body":{"injectables/RouteService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{}}}],["occurred",{"_index":108,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["oidc",{"_index":2080,"title":{},"body":{"dependencies.html":{}}}],["ondestroy",{"_index":1028,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["one",{"_index":754,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["oninit",{"_index":365,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["onsubmit",{"_index":746,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{}}}],["operations",{"_index":95,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["option",{"_index":1553,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["optional",{"_index":26,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["options",{"_index":881,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["order",{"_index":651,"title":{},"body":{"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"classes/StopTime.html":{},"components/UserDetailsComponent.html":{}}}],["orginal",{"_index":1223,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["orient",{"_index":1002,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["origin",{"_index":709,"title":{},"body":{"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["os",{"_index":2086,"title":{},"body":{"dependencies.html":{}}}],["otherwise",{"_index":1077,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["out",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"index.html":{},"overview.html":{}}}],["outbound",{"_index":2109,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["over",{"_index":1838,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["overflow",{"_index":996,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["overview",{"_index":2157,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":677,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["package",{"_index":2065,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["page",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["paginator",{"_index":1051,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["paragens",{"_index":926,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["param",{"_index":97,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["parameter",{"_index":1066,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["parsedpayload",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["parsedpayload.exp",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["pass",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["passes",{"_index":755,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["password",{"_index":411,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["path",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["pathmatch",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["perform",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["perma",{"_index":1899,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["permanent",{"_index":1492,"title":{},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["permanent).subscribe(res",{"_index":1861,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["permant",{"_index":1972,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["pipe",{"_index":846,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":102,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["placeholder",{"_index":1915,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["platform",{"_index":2144,"title":{},"body":{"index.html":{}}}],["please",{"_index":130,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["plugins",{"_index":1285,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["pointer",{"_index":1006,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["popper.js",{"_index":2082,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":442,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["position.coords.latitude",{"_index":1386,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["position.coords.longitude",{"_index":1387,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["possible",{"_index":1810,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["post",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["pressed",{"_index":416,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["previous",{"_index":763,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["primary",{"_index":30,"title":{},"body":{"classes/Agency.html":{}}}],["prints",{"_index":80,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["private",{"_index":60,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["prodmode",{"_index":1558,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["production",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1767,"title":{},"body":{"classes/User.html":{}}}],["profileimage",{"_index":1757,"title":{},"body":{"classes/User.html":{},"components/UserDetailsComponent.html":{}}}],["project",{"_index":2118,"title":{},"body":{"index.html":{}}}],["promise",{"_index":350,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/Agency.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"properties.html":{}}}],["provide",{"_index":1550,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1529,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["providedin",{"_index":90,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pt",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/User.html":{}}}],["public",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop-1.html":{}}}],["put",{"_index":1447,"title":{},"body":{"classes/StopTime.html":{}}}],["puts",{"_index":1370,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["queries",{"_index":1310,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["radius",{"_index":563,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["rank",{"_index":1774,"title":{},"body":{"classes/User.html":{},"components/UsersManagementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["rank(privilege",{"_index":1772,"title":{},"body":{"classes/User.html":{}}}],["rank.ts",{"_index":2100,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rating",{"_index":1758,"title":{},"body":{"classes/User.html":{},"components/UsersManagementComponent.html":{}}}],["reactiveformsmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":2153,"title":{},"body":{"index.html":{}}}],["reason",{"_index":1493,"title":{},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["received",{"_index":349,"title":{},"body":{"guards/AuthGuard.html":{}}}],["record",{"_index":1438,"title":{},"body":{"classes/StopTime.html":{}}}],["redirect",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["redirects",{"_index":761,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["registerables",{"_index":1228,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["regular",{"_index":2112,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["related",{"_index":1812,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["reload",{"_index":2128,"title":{},"body":{"index.html":{}}}],["remove",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["removes",{"_index":1595,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["removestop",{"_index":1583,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["removestop(stopindex",{"_index":1593,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["renderer",{"_index":882,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["represents",{"_index":8,"title":{},"body":{"classes/Agency.html":{},"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["request",{"_index":965,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["requests",{"_index":67,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["required",{"_index":523,"title":{},"body":{"components/LoginComponent.html":{}}}],["rerenderonlangchange",{"_index":1557,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["res",{"_index":432,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["res.foreach((suspension",{"_index":1988,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["res.token",{"_index":434,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["reset",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["resetforms",{"_index":1797,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["resets",{"_index":1825,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["response",{"_index":115,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["response.result",{"_index":976,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["responsible",{"_index":1213,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["responsive",{"_index":1311,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["result",{"_index":885,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["result.matches",{"_index":1241,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":1207,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["return",{"_index":99,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["returned",{"_index":113,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":71,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["returnurl",{"_index":379,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["reverse",{"_index":781,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["rgba(0",{"_index":1304,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["rgba(59",{"_index":1282,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["riders",{"_index":1347,"title":{},"body":{"classes/Stop.html":{}}}],["right",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["ripple",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["roadmap",{"_index":890,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["root",{"_index":91,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["root.module",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["root.module.ts",{"_index":1537,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"coverage.html":{}}}],["root.module.ts:14",{"_index":1539,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{}}}],["root.module.ts:17",{"_index":1541,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{}}}],["rota",{"_index":924,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["route",{"_index":170,"title":{"classes/Route.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["route(guid.create().tostring",{"_index":792,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["route(route.routeid",{"_index":933,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["route(this.route.routeid",{"_index":1037,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["route.agency",{"_index":938,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["route.agency.agencyname",{"_index":1129,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["route.agencyid",{"_index":934,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["route.routeduration",{"_index":1130,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["route.routeid",{"_index":1107,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["route.routelongname",{"_index":936,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["route.routeshortname",{"_index":935,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["route.routetransporttype",{"_index":937,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["routecreatecomponent",{"_index":169,"title":{"components/RouteCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routedetailscomponent",{"_index":172,"title":{"components/RouteDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routeduration",{"_index":693,"title":{},"body":{"classes/Route.html":{}}}],["routeeditcomponent",{"_index":174,"title":{"components/RouteEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routeid",{"_index":694,"title":{},"body":{"classes/Route.html":{},"injectables/RouteService.html":{},"injectables/StopTimeService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{}}}],["routelongname",{"_index":695,"title":{},"body":{"classes/Route.html":{}}}],["routemanagementcomponent",{"_index":176,"title":{"components/RouteManagementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["router",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["routermodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":352,"title":{},"body":{"guards/AuthGuard.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/TripCreateComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{}}}],["routeservice",{"_index":748,"title":{"injectables/RouteService.html":{}},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["routeshortname",{"_index":696,"title":{},"body":{"classes/Route.html":{}}}],["routetodeleteid",{"_index":1106,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["routetransporttype",{"_index":697,"title":{},"body":{"classes/Route.html":{}}}],["row",{"_index":537,"title":{},"body":{"components/LoginComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["rows",{"_index":1073,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["rts.foreach((route",{"_index":1099,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["run",{"_index":2084,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["running",{"_index":2137,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":652,"title":{},"body":{"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["rxjs",{"_index":88,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["s",{"_index":1632,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["s.departuretime.length",{"_index":1720,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["s.stopid.length",{"_index":1643,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["s.stoptime.length",{"_index":1644,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["same",{"_index":1349,"title":{},"body":{"classes/Stop.html":{}}}],["saying",{"_index":714,"title":{},"body":{"classes/Route.html":{}}}],["scaffolding",{"_index":2130,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":1668,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["scheduletitle",{"_index":1669,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["screen",{"_index":1316,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["script",{"_index":2085,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1160,"title":{},"body":{"injectables/RouteService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["section",{"_index":1918,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["select",{"_index":1082,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["selected",{"_index":904,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop-1.html":{}}}],["selectedtrip",{"_index":829,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["selection",{"_index":1052,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["selectionmodel",{"_index":1096,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["selectionmodel(true",{"_index":1090,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["selector",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["selects",{"_index":1076,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["self",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["send",{"_index":66,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{}}}],["sendauthstatechangenotification",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["sends",{"_index":766,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"injectables/RouteService.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{}}}],["sequence",{"_index":1471,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["serve",{"_index":2124,"title":{},"body":{"index.html":{}}}],["server",{"_index":69,"title":{},"body":{"injectables/AgencyService.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["server.azurewebsites.net/api/agenciesapi",{"_index":101,"title":{},"body":{"injectables/AgencyService.html":{}}}],["server.azurewebsites.net/api/authapi/logindashboard",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["server.azurewebsites.net/api/routesapi",{"_index":1165,"title":{},"body":{"injectables/RouteService.html":{}}}],["server.azurewebsites.net/api/routesapi/${route.routeid",{"_index":1174,"title":{},"body":{"injectables/RouteService.html":{}}}],["server.azurewebsites.net/api/routesapi/${routeid",{"_index":1167,"title":{},"body":{"injectables/RouteService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/getactiveusers",{"_index":611,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/getmostactivezones",{"_index":621,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/getmostusedtransport/${userid",{"_index":627,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/gettimespent/${userid",{"_index":634,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/gettotalnumberofusers",{"_index":614,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/gettotalofnewusers",{"_index":617,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/stopsapi",{"_index":1417,"title":{},"body":{"injectables/StopService.html":{}}}],["server.azurewebsites.net/api/stoptimesapi",{"_index":1485,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["server.azurewebsites.net/api/stoptimesapi/${tripid}/${sequence",{"_index":1487,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["server.azurewebsites.net/api/stoptimesapi/route/${routeid",{"_index":1482,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["server.azurewebsites.net/api/stoptimesapi/trip/${tripid",{"_index":1483,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["server.azurewebsites.net/api/tripsapi",{"_index":1752,"title":{},"body":{"injectables/TripService.html":{}}}],["server.azurewebsites.net/api/tripsapi/${trip.tripid",{"_index":1753,"title":{},"body":{"injectables/TripService.html":{}}}],["server.azurewebsites.net/api/tripsapi/${tripid",{"_index":1751,"title":{},"body":{"injectables/TripService.html":{}}}],["server.azurewebsites.net/api/tripsapi/route/${routeid",{"_index":1750,"title":{},"body":{"injectables/TripService.html":{}}}],["server.azurewebsites.net/api/userapi",{"_index":1959,"title":{},"body":{"injectables/UserService.html":{}}}],["server.azurewebsites.net/api/userapi/${userid",{"_index":1955,"title":{},"body":{"injectables/UserService.html":{}}}],["server.azurewebsites.net/api/userapi/email/${email",{"_index":1957,"title":{},"body":{"injectables/UserService.html":{}}}],["server.azurewebsites.net/api/usersuspensionsapi",{"_index":1532,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["server.azurewebsites.net/api/usersuspensionsapi/unban/${userid",{"_index":1534,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["server.azurewebsites.net/api/usersuspensionsapi/user/${userid",{"_index":1528,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["servermodule",{"_index":313,"title":{},"body":{"modules/AppServerModule.html":{}}}],["serves",{"_index":417,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["service",{"_index":92,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["serviceid",{"_index":1561,"title":{},"body":{"classes/Trip.html":{}}}],["services/agency.service",{"_index":788,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["services/auth.service",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["services/route.service",{"_index":783,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["services/statistics.service",{"_index":1229,"title":{},"body":{"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["services/stop",{"_index":914,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["services/stop.service",{"_index":1031,"title":{},"body":{"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["services/suspension.service",{"_index":1842,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["services/trip.service",{"_index":917,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["services/user.service",{"_index":1844,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["shadow",{"_index":567,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["shape",{"_index":1437,"title":{},"body":{"classes/StopTime.html":{},"classes/Trip.html":{}}}],["shapedisttraveled",{"_index":1423,"title":{},"body":{"classes/StopTime.html":{}}}],["shapeid",{"_index":1562,"title":{},"body":{"classes/Trip.html":{}}}],["short",{"_index":716,"title":{},"body":{"classes/Route.html":{},"classes/Stop.html":{}}}],["show",{"_index":1214,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["shows",{"_index":863,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["side",{"_index":106,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{}}}],["size",{"_index":542,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["snackbar",{"_index":372,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["snackbar(this.translocoservice.translate('login.list",{"_index":440,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["snackbar(this.translocoservice.translate('route",{"_index":1400,"title":{},"body":{"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["snackbar(this.translocoservice.translate('user",{"_index":1862,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["solid",{"_index":1290,"title":{},"body":{"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["sorts",{"_index":1817,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["space",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["specific",{"_index":1151,"title":{},"body":{"injectables/RouteService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["specifically",{"_index":1814,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["specified",{"_index":39,"title":{},"body":{"classes/Agency.html":{},"classes/StopTime.html":{}}}],["spent",{"_index":630,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{},"components/UserDetailsComponent.html":{}}}],["spinner",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/UserDetailsComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2114,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../transport",{"_index":2095,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../travel",{"_index":2097,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":2099,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.server.module.ts",{"_index":312,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/components/login/login.component.ts",{"_index":362,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:108",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:22",{"_index":517,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:26",{"_index":516,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":515,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":514,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:38",{"_index":509,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:54",{"_index":512,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:72",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/nav",{"_index":635,"title":{},"body":{"components/NavMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/route",{"_index":740,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"coverage.html":{}}}],["src/app/components/statistics/statistics.component.ts",{"_index":1191,"title":{},"body":{"components/StatisticsComponent.html":{},"coverage.html":{}}}],["src/app/components/statistics/statistics.component.ts:105",{"_index":1204,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:34",{"_index":1211,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:39",{"_index":1226,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:44",{"_index":1225,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:49",{"_index":1215,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:54",{"_index":1217,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:59",{"_index":1219,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:64",{"_index":1220,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:69",{"_index":1222,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:74",{"_index":1221,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:79",{"_index":1202,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/stop",{"_index":1361,"title":{},"body":{"components/StopCreateComponent.html":{},"coverage.html":{}}}],["src/app/components/trip",{"_index":1579,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["src/app/components/user",{"_index":1785,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/users",{"_index":1960,"title":{},"body":{"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["src/app/enums/transport",{"_index":2101,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/travel",{"_index":2107,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/user",{"_index":2111,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:13",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:29",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/models/agency.ts",{"_index":6,"title":{},"body":{"classes/Agency.html":{},"coverage.html":{}}}],["src/app/models/agency.ts:12",{"_index":34,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/agency.ts:16",{"_index":43,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/agency.ts:20",{"_index":40,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/agency.ts:24",{"_index":29,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/agency.ts:28",{"_index":21,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/agency.ts:8",{"_index":27,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/route.ts",{"_index":692,"title":{},"body":{"classes/Route.html":{},"coverage.html":{}}}],["src/app/models/route.ts:11",{"_index":711,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:15",{"_index":705,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:19",{"_index":704,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:23",{"_index":715,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:27",{"_index":712,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:31",{"_index":718,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:35",{"_index":706,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:39",{"_index":702,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:61",{"_index":720,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/statistics.ts",{"_index":1175,"title":{},"body":{"classes/Statistics.html":{},"coverage.html":{}}}],["src/app/models/statistics.ts:11",{"_index":1181,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/models/statistics.ts:3",{"_index":1182,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/models/statistics.ts:5",{"_index":1185,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/models/statistics.ts:7",{"_index":1184,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/models/statistics.ts:9",{"_index":1183,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/models/stop",{"_index":1419,"title":{},"body":{"classes/StopTime.html":{},"coverage.html":{}}}],["src/app/models/stop.ts",{"_index":1337,"title":{},"body":{"classes/Stop.html":{},"coverage.html":{}}}],["src/app/models/stop.ts:13",{"_index":1345,"title":{},"body":{"classes/Stop.html":{}}}],["src/app/models/stop.ts:17",{"_index":1355,"title":{},"body":{"classes/Stop.html":{}}}],["src/app/models/stop.ts:21",{"_index":1352,"title":{},"body":{"classes/Stop.html":{}}}],["src/app/models/stop.ts:25",{"_index":1344,"title":{},"body":{"classes/Stop.html":{}}}],["src/app/models/stop.ts:8",{"_index":1351,"title":{},"body":{"classes/Stop.html":{}}}],["src/app/models/suspension.ts",{"_index":1490,"title":{},"body":{"classes/Suspension.html":{},"coverage.html":{}}}],["src/app/models/suspension.ts:12",{"_index":1502,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/suspension.ts:16",{"_index":1501,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/suspension.ts:20",{"_index":1497,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/suspension.ts:24",{"_index":1500,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/suspension.ts:28",{"_index":1496,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/suspension.ts:8",{"_index":1498,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/trip.ts",{"_index":1560,"title":{},"body":{"classes/Trip.html":{},"coverage.html":{}}}],["src/app/models/trip.ts:11",{"_index":1573,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:15",{"_index":1571,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:19",{"_index":1568,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:23",{"_index":1567,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:27",{"_index":1569,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:31",{"_index":1566,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:35",{"_index":1570,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:41",{"_index":1565,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/user.ts",{"_index":1754,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:10",{"_index":1766,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:14",{"_index":1771,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:18",{"_index":1770,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:22",{"_index":1769,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:26",{"_index":1762,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:30",{"_index":1763,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:34",{"_index":1764,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:38",{"_index":1761,"title":{},"body":{"classes/User.html":{}}}],["src/app/services/agency.service.ts",{"_index":57,"title":{},"body":{"injectables/AgencyService.html":{},"coverage.html":{}}}],["src/app/services/agency.service.ts:12",{"_index":64,"title":{},"body":{"injectables/AgencyService.html":{}}}],["src/app/services/agency.service.ts:20",{"_index":70,"title":{},"body":{"injectables/AgencyService.html":{}}}],["src/app/services/agency.service.ts:30",{"_index":75,"title":{},"body":{"injectables/AgencyService.html":{}}}],["src/app/services/auth.service.ts",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:20",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:50",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:61",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:68",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:78",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/route.service.ts",{"_index":1139,"title":{},"body":{"injectables/RouteService.html":{},"coverage.html":{}}}],["src/app/services/route.service.ts:13",{"_index":1145,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:25",{"_index":1162,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:36",{"_index":1159,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:47",{"_index":1147,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:58",{"_index":1150,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:69",{"_index":1155,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:80",{"_index":1163,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/statistics.service.ts",{"_index":598,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["src/app/services/statistics.service.ts:19",{"_index":1328,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:31",{"_index":1329,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:42",{"_index":1332,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:52",{"_index":1331,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:62",{"_index":1330,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:72",{"_index":1333,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:82",{"_index":1335,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:94",{"_index":1336,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/stop",{"_index":1459,"title":{},"body":{"injectables/StopTimeService.html":{},"coverage.html":{}}}],["src/app/services/stop.service.ts",{"_index":1408,"title":{},"body":{"injectables/StopService.html":{},"coverage.html":{}}}],["src/app/services/stop.service.ts:13",{"_index":1411,"title":{},"body":{"injectables/StopService.html":{}}}],["src/app/services/stop.service.ts:25",{"_index":1414,"title":{},"body":{"injectables/StopService.html":{}}}],["src/app/services/stop.service.ts:36",{"_index":1413,"title":{},"body":{"injectables/StopService.html":{}}}],["src/app/services/stop.service.ts:47",{"_index":1415,"title":{},"body":{"injectables/StopService.html":{}}}],["src/app/services/suspension.service.ts",{"_index":1510,"title":{},"body":{"injectables/SuspensionService.html":{},"coverage.html":{}}}],["src/app/services/suspension.service.ts:14",{"_index":1514,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["src/app/services/suspension.service.ts:27",{"_index":1516,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["src/app/services/suspension.service.ts:41",{"_index":1520,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["src/app/services/suspension.service.ts:54",{"_index":1524,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["src/app/services/suspension.service.ts:65",{"_index":1518,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["src/app/services/trip.service.ts",{"_index":1734,"title":{},"body":{"injectables/TripService.html":{},"coverage.html":{}}}],["src/app/services/trip.service.ts:12",{"_index":1739,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:24",{"_index":1747,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:35",{"_index":1745,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:46",{"_index":1741,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:57",{"_index":1743,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:68",{"_index":1749,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/user.service.ts",{"_index":1944,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:14",{"_index":1947,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1949,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:33",{"_index":1951,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:43",{"_index":1952,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:54",{"_index":1953,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/transloco",{"_index":1536,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":2058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":2062,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":912,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["startdate",{"_index":1494,"title":{},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{}}}],["started",{"_index":2116,"title":{"index.html":{}},"body":{}}],["starttime",{"_index":736,"title":{},"body":{"classes/Route.html":{}}}],["state",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2014,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":301,"title":{"classes/Statistics.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{}}}],["statistics'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["statistics.component.css",{"_index":1192,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.html",{"_index":1193,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statisticscomponent",{"_index":178,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statisticsservice",{"_index":605,"title":{"injectables/StatisticsService.html":{}},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["stats",{"_index":1293,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["stop",{"_index":181,"title":{"classes/Stop.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stop(guid.create().tostring",{"_index":1398,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["stop.arrivaltime",{"_index":993,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop.departuretime",{"_index":1705,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop.error",{"_index":1403,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["stop.shapedisttraveled",{"_index":1707,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop.stop",{"_index":1709,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop.stop.stoplat",{"_index":991,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["stop.stop.stoplon",{"_index":992,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["stop.stop.stopname",{"_index":990,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["stop.stopid",{"_index":1636,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stop.stopname",{"_index":1664,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["stop.stopsequence",{"_index":1706,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop.success",{"_index":1402,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["stop.trip",{"_index":1708,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop_code",{"_index":1348,"title":{},"body":{"classes/Stop.html":{}}}],["stop_id",{"_index":1350,"title":{},"body":{"classes/Stop.html":{}}}],["stopcode",{"_index":1338,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["stopcreatecomponent",{"_index":180,"title":{"components/StopCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stopform",{"_index":1627,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stopid",{"_index":1339,"title":{},"body":{"classes/Stop.html":{},"classes/StopTime.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stopindex",{"_index":1596,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stoplat",{"_index":1340,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["stoplon",{"_index":1341,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["stopname",{"_index":1342,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["stops",{"_index":698,"title":{},"body":{"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stops.every(s",{"_index":1642,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stops.foreach(stop",{"_index":1702,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stopsequence",{"_index":1424,"title":{},"body":{"classes/StopTime.html":{}}}],["stopservice",{"_index":1030,"title":{"injectables/StopService.html":{}},"body":{"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stoptime",{"_index":701,"title":{"classes/StopTime.html":{}},"body":{"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stoptime(stop.tripid",{"_index":1704,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stoptime(trip.tripid",{"_index":1731,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stoptime(tripid",{"_index":1655,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["stoptime).subscribe",{"_index":1733,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stoptime.gethoursandminutesstring",{"_index":1714,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stoptime.stop.stoplon",{"_index":958,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["stoptime.stopid",{"_index":1713,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stoptimes",{"_index":845,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stoptimeservice",{"_index":840,"title":{"injectables/StopTimeService.html":{}},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["storage",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"components/StatisticsComponent.html":{}}}],["stored",{"_index":1768,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["string",{"_index":19,"title":{},"body":{"classes/Agency.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["string(this.departuretime.gethours()).padstart(2",{"_index":1457,"title":{},"body":{"classes/StopTime.html":{}}}],["string(this.departuretime.getminutes()).padstart(2",{"_index":1458,"title":{},"body":{"classes/StopTime.html":{}}}],["string(this.urlroute.snapshot.parammap.get(\"id",{"_index":928,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["style",{"_index":447,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["styles",{"_index":506,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["styleurls",{"_index":375,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["subject",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe",{"_index":431,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["subscribe((route",{"_index":930,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["subscribe((trip",{"_index":1701,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["subscribe(result",{"_index":1240,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["subscribes",{"_index":1209,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["subscription",{"_index":1218,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["succeed",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["support",{"_index":1555,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"modules.html":{}}}],["suppressinfowindows",{"_index":879,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["suppressmarkers",{"_index":878,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["suspend",{"_index":1522,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["suspenddate",{"_index":1790,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspended",{"_index":1864,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspendreason",{"_index":1791,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspends",{"_index":1521,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["suspenduser",{"_index":1512,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["suspenduser(permanent",{"_index":1826,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspenduser(userid",{"_index":1519,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["suspension",{"_index":1489,"title":{"classes/Suspension.html":{}},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["suspension(guid.create().tostring",{"_index":1531,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["suspension.enddate",{"_index":1904,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspension.permanent",{"_index":1854,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["suspension.reason",{"_index":1857,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspension.startdate",{"_index":1902,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspensions",{"_index":1517,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["suspensionservice",{"_index":1509,"title":{"injectables/SuspensionService.html":{}},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["svg",{"_index":2154,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1058,"title":{},"body":{"components/RouteManagementComponent.html":{},"injectables/StopService.html":{},"components/UsersManagementComponent.html":{}}}],["t('account",{"_index":1893,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('active",{"_index":1286,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t('ban",{"_index":1905,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t('cancel",{"_index":805,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('create",{"_index":804,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('delete",{"_index":1125,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["t('departure",{"_index":1665,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('edit",{"_index":984,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t('email",{"_index":1889,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('error",{"_index":801,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{}}}],["t('filter",{"_index":1126,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t('hint",{"_index":1910,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('input",{"_index":522,"title":{},"body":{"components/LoginComponent.html":{}}}],["t('label",{"_index":800,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('list",{"_index":1900,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('loading",{"_index":983,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t('login",{"_index":518,"title":{},"body":{"components/LoginComponent.html":{}}}],["t('logout",{"_index":665,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t('mostusedtransport",{"_index":1896,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('new",{"_index":1288,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t('no",{"_index":995,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t('rating",{"_index":1891,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('reason",{"_index":1911,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('route",{"_index":988,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{}}}],["t('routes",{"_index":663,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t('schedules",{"_index":1662,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('since",{"_index":1901,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('stats",{"_index":662,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t('stop",{"_index":1663,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('submit",{"_index":1404,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["t('suspend",{"_index":1906,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('suspension",{"_index":1907,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('timespend",{"_index":1897,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('title",{"_index":519,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t('total",{"_index":1287,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t('trip",{"_index":985,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t('unban",{"_index":1912,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t('until",{"_index":1903,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('update",{"_index":1044,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{}}}],["t('user",{"_index":1898,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t('username",{"_index":1888,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('users",{"_index":664,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t('welcome",{"_index":661,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(\\'account",{"_index":1931,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'active",{"_index":1325,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t(\\'ban",{"_index":1938,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t(\\'cancel",{"_index":819,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'create",{"_index":818,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'delete",{"_index":1137,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["t(\\'departure",{"_index":1675,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'edit",{"_index":1012,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t(\\'email",{"_index":1929,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'error",{"_index":817,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{}}}],["t(\\'filter",{"_index":1138,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t(\\'hint",{"_index":1941,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'input",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["t(\\'label",{"_index":816,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'list",{"_index":1935,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'loading",{"_index":1011,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t(\\'login",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["t(\\'logout",{"_index":691,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(\\'mostusedtransport",{"_index":1932,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'new",{"_index":1327,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t(\\'no",{"_index":1015,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t(\\'rating",{"_index":1930,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'reason",{"_index":1942,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'route",{"_index":1014,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{}}}],["t(\\'routes",{"_index":689,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(\\'schedules",{"_index":1673,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'since",{"_index":1936,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'stats",{"_index":688,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(\\'stop",{"_index":1674,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'submit",{"_index":1407,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["t(\\'suspend",{"_index":1939,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'suspension",{"_index":1940,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'timespend",{"_index":1933,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'title",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t(\\'total",{"_index":1326,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t(\\'trip",{"_index":1013,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t(\\'unban",{"_index":1943,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t(\\'until",{"_index":1937,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'update",{"_index":1045,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'user",{"_index":1934,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t(\\'username",{"_index":1928,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'users",{"_index":690,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(\\'welcome",{"_index":687,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(geterrormessage",{"_index":1909,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["table",{"_index":1081,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2064,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":708,"title":{},"body":{"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["telephone",{"_index":37,"title":{},"body":{"classes/Agency.html":{}}}],["template",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["templateurl",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["test",{"_index":2140,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2148,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2139,"title":{},"body":{"index.html":{}}}],["text",{"_index":399,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["textarea.mat",{"_index":1914,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.activelang",{"_index":402,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.activeusers",{"_index":1245,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.activeuserscount",{"_index":1186,"title":{},"body":{"classes/Statistics.html":{}}}],["this.addmarkers",{"_index":952,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.agencies",{"_index":791,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["this.agency",{"_index":728,"title":{},"body":{"classes/Route.html":{}}}],["this.agencyid",{"_index":46,"title":{},"body":{"classes/Agency.html":{},"classes/Route.html":{}}}],["this.agencylang",{"_index":50,"title":{},"body":{"classes/Agency.html":{}}}],["this.agencyname",{"_index":47,"title":{},"body":{"classes/Agency.html":{}}}],["this.agencyphone",{"_index":51,"title":{},"body":{"classes/Agency.html":{}}}],["this.agencyservice.getagencies().subscribe((agencies",{"_index":790,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["this.agencytimezone",{"_index":49,"title":{},"body":{"classes/Agency.html":{}}}],["this.agencyurl",{"_index":48,"title":{},"body":{"classes/Agency.html":{}}}],["this.allstops",{"_index":1625,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.allstops.foreach(compstop",{"_index":1634,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.alltrips!.push(new",{"_index":1617,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.arrivaltime",{"_index":1449,"title":{},"body":{"classes/StopTime.html":{}}}],["this.authchangesub.asobservable",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authchangesub.next(isauthenticated",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.isloggedin(localstorage.getitem('token')!.tostring",{"_index":355,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.loginuser(userforauth",{"_index":430,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.authservice.logout",{"_index":659,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(res.isauthsuccessful",{"_index":436,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.availablelangs",{"_index":400,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.banned",{"_index":1855,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.banned.set(user.id",{"_index":1987,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.banreason",{"_index":1856,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.breakpointobserver.observe",{"_index":1237,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.calculaterouteduration",{"_index":731,"title":{},"body":{"classes/Route.html":{}}}],["this.center",{"_index":959,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.change",{"_index":1242,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart",{"_index":1276,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart.data.datasets[0].data",{"_index":1262,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart.data.datasets[0].data.length",{"_index":1260,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart.data.datasets[0].label",{"_index":1269,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart.data.labels",{"_index":1263,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart.update",{"_index":1264,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.createrouteform.controls.agency.value",{"_index":793,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["this.createrouteform.controls.name.value",{"_index":795,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["this.createrouteform.controls.number.value",{"_index":794,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["this.createrouteform.controls.tripname.value",{"_index":1647,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createrouteform.controls[\"stops",{"_index":1630,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createrouteform.value.stops",{"_index":1639,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createrouteform.value.stops!.foreach(s",{"_index":1652,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createrouteform.value.stops.length",{"_index":1641,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createrouteform.value.stops?.foreach(s",{"_index":1631,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createstopform.controls.code.value",{"_index":1394,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createstopform.controls.latitude.patchvalue(event.latlng.lat",{"_index":1392,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createstopform.controls.latitude.value",{"_index":1396,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createstopform.controls.longitude.patchvalue(event.latlng.lng",{"_index":1393,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createstopform.controls.longitude.value",{"_index":1397,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createstopform.controls.name.value",{"_index":1395,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createwaypoints",{"_index":969,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.creationdate",{"_index":1779,"title":{},"body":{"classes/User.html":{}}}],["this.creationdate.tolocaledatestring('pt",{"_index":1783,"title":{},"body":{"classes/User.html":{}}}],["this.currentuser",{"_index":1846,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.datasource",{"_index":1101,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.datasource.data",{"_index":1111,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.datasource.data.length",{"_index":1116,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.datasource.filter",{"_index":1123,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.datasource.paginator",{"_index":1103,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.dateaftertodayvalidator",{"_index":1835,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.datepipe.transform(stoptimes[0].arrivaltime",{"_index":948,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.datepipe.transform(stoptimes[stoptimes.length",{"_index":950,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.departuretime",{"_index":1451,"title":{},"body":{"classes/StopTime.html":{}}}],["this.direction",{"_index":1577,"title":{},"body":{"classes/Trip.html":{}}}],["this.directionsresults",{"_index":974,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.controls.agency.patchvalue(this.route.agencyid",{"_index":1036,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.agency.value",{"_index":1038,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.name.patchvalue(this.route.routelongname",{"_index":1034,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.name.value",{"_index":1040,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.number.patchvalue(this.route.routeshortname",{"_index":1033,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.number.value",{"_index":1039,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.stops.patchvalue(this.tripstops",{"_index":1712,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.controls.transporttype.patchvalue(this.route.routetransporttype",{"_index":1035,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.transporttype.value",{"_index":1041,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.tripname.patchvalue(this.selectedtrip.tripheadsign",{"_index":1710,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.controls.tripname.value",{"_index":1722,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.controls.triptransportdirection.patchvalue(this.selectedtrip.direction",{"_index":1711,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.controls[\"stops",{"_index":1717,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.value.stops",{"_index":1719,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.value.stops.foreach(s",{"_index":1728,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.value.stops?.foreach(s",{"_index":1718,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.email",{"_index":1781,"title":{},"body":{"classes/User.html":{}}}],["this.enddate",{"_index":1506,"title":{},"body":{"classes/Suspension.html":{}}}],["this.formateddate",{"_index":1782,"title":{},"body":{"classes/User.html":{}}}],["this.formbuilder.array",{"_index":1602,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.formbuilder.control(null",{"_index":772,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.formbuilder.group",{"_index":771,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.getsuspensions",{"_index":1881,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.getuser",{"_index":1880,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.getusermostusedtransport",{"_index":1882,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.getusersinfo",{"_index":1984,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.getuserssuspensionpermanent",{"_index":2001,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.getusertimespent",{"_index":1883,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.http.delete(`api/routesapi/${routeid",{"_index":1170,"title":{},"body":{"injectables/RouteService.html":{}}}],["this.http.delete(`api/stoptimesapi/${stoptimeid",{"_index":1488,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["this.http.delete(`https://traveller",{"_index":1171,"title":{},"body":{"injectables/RouteService.html":{},"injectables/StopTimeService.html":{}}}],["this.http.get('api/routesapi",{"_index":1164,"title":{},"body":{"injectables/RouteService.html":{}}}],["this.http.get('api/statisticsapi/getactiveusers",{"_index":610,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get('api/statisticsapi/getmostactivezones",{"_index":620,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get('api/statisticsapi/gettotalnumberofusers",{"_index":613,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get('api/statisticsapi/gettotalofnewusers",{"_index":616,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get('api/stopsapi",{"_index":1416,"title":{},"body":{"injectables/StopService.html":{}}}],["this.http.get('https://traveller",{"_index":100,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{}}}],["this.http.get(`/assets/i18n/${lang}.json",{"_index":1548,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["this.http.get(`api/routesapi/${routeid",{"_index":1166,"title":{},"body":{"injectables/RouteService.html":{}}}],["this.http.get(`api/routesapi/stoptimes/${routeid}`).pipe(catcherror(this.handleerror",{"_index":1481,"title":{},"body":{"injectables/StopTimeService.html":{},"injectables/TripService.html":{}}}],["this.http.get(`api/statisticsapi/getmostusedtransport/${userid",{"_index":625,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get(`api/statisticsapi/gettimespent/${userid",{"_index":633,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get(`api/userapi",{"_index":1958,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`api/userapi/${userid",{"_index":1954,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`api/userapi/email/${email",{"_index":1956,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`api/usersuspensionsapi/unban/${userid",{"_index":1533,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["this.http.get(`api/usersuspensionsapi/user/${userid",{"_index":1527,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["this.http.get(`https://traveller",{"_index":626,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["this.http.post('api/authapi/logindashboard",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('https://traveller",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`api/routesapi",{"_index":1168,"title":{},"body":{"injectables/RouteService.html":{},"injectables/TripService.html":{}}}],["this.http.post(`api/stopsapi",{"_index":1418,"title":{},"body":{"injectables/StopService.html":{}}}],["this.http.post(`api/stoptimesapi",{"_index":1484,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["this.http.post(`api/usersuspensionsapi",{"_index":1530,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["this.http.post(`https://traveller",{"_index":1169,"title":{},"body":{"injectables/RouteService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{}}}],["this.http.put(`api/routesapi/${route.routeid",{"_index":1172,"title":{},"body":{"injectables/RouteService.html":{},"injectables/TripService.html":{}}}],["this.http.put(`api/stoptimesapi/${stoptime.id",{"_index":1486,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["this.http.put(`https://traveller",{"_index":1173,"title":{},"body":{"injectables/RouteService.html":{},"injectables/StopTimeService.html":{},"injectables/TripService.html":{}}}],["this.id",{"_index":1503,"title":{},"body":{"classes/Suspension.html":{},"classes/User.html":{}}}],["this.isallselected",{"_index":1117,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.isloading",{"_index":437,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.label",{"_index":1265,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.labelsub",{"_index":1267,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.linkmarkers",{"_index":953,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.loginform",{"_index":406,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.mapdirectionsservice.route(request).pipe(map(response",{"_index":975,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.markerpos",{"_index":1388,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.markers.push(new",{"_index":956,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.markers.splice(0",{"_index":954,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.markers[0",{"_index":967,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.markers[math.floor(this.markers.length",{"_index":961,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.markers[this.markers.length",{"_index":970,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.mostactivezones",{"_index":1254,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.mostactivezonesdata",{"_index":1258,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.mostactivezonesdata.length",{"_index":1261,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.mostactivezoneskeys",{"_index":1252,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.mostactivezoneskeys.map(zone",{"_index":1271,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.mostusedtransport",{"_index":1189,"title":{},"body":{"classes/Statistics.html":{}}}],["this.mostusedtransporttype",{"_index":1874,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.newusers",{"_index":1188,"title":{},"body":{"classes/Statistics.html":{},"components/StatisticsComponent.html":{}}}],["this.ngoninit",{"_index":1868,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.paginator",{"_index":1104,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.permanent",{"_index":1508,"title":{},"body":{"classes/Suspension.html":{}}}],["this.profileimage",{"_index":1784,"title":{},"body":{"classes/User.html":{}}}],["this.rating",{"_index":1778,"title":{},"body":{"classes/User.html":{}}}],["this.reason",{"_index":1507,"title":{},"body":{"classes/Suspension.html":{}}}],["this.resetforms",{"_index":1867,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.returnurl",{"_index":412,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.route",{"_index":932,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.route.routeid",{"_index":1043,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":413,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.routeduration",{"_index":730,"title":{},"body":{"classes/Route.html":{}}}],["this.routeid",{"_index":724,"title":{},"body":{"classes/Route.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.routelongname",{"_index":726,"title":{},"body":{"classes/Route.html":{}}}],["this.router.navigate",{"_index":798,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.router.navigate(['/api/authapi/logindashboard",{"_index":356,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/statistics",{"_index":438,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.router.url",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.routes",{"_index":1112,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routes.findindex((route",{"_index":1109,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routes.push(new",{"_index":1100,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routes.splice(index",{"_index":1110,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routeservice.addroute(route).subscribe",{"_index":797,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["this.routeservice.deleteroute(routetodeleteid).subscribe(result",{"_index":1108,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routeservice.editroute(route).subscribe",{"_index":1042,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.routeservice.getroute(id",{"_index":929,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{}}}],["this.routeservice.getroute(this.routeid",{"_index":1615,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.routeservice.getroutes().subscribe((rts",{"_index":1098,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routeshortname",{"_index":725,"title":{},"body":{"classes/Route.html":{}}}],["this.routetransporttype",{"_index":727,"title":{},"body":{"classes/Route.html":{}}}],["this.selectedtrip",{"_index":943,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.selectedtrip.routeid",{"_index":1723,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.selectedtrip.serviceid",{"_index":1724,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.selectedtrip.shapeid",{"_index":1726,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.selection.clear",{"_index":1118,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.selection.select(...this.datasource.data",{"_index":1119,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.selection.selected.foreach((route",{"_index":1105,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.selection.selected.foreach((user",{"_index":2003,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.selection.selected.length",{"_index":1114,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.sendauthstatechangenotification(false",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.service.getactivelang",{"_index":656,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.service.getavailablelangs",{"_index":655,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.service.setactivelang(lang",{"_index":660,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.serviceid",{"_index":1576,"title":{},"body":{"classes/Trip.html":{}}}],["this.shapedisttraveled",{"_index":1454,"title":{},"body":{"classes/StopTime.html":{}}}],["this.shapeid",{"_index":1578,"title":{},"body":{"classes/Trip.html":{}}}],["this.startdate",{"_index":1505,"title":{},"body":{"classes/Suspension.html":{}}}],["this.statisticsservice.getactiveusers().subscribe(data",{"_index":1244,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.statisticsservice.getmostactivezones().subscribe(data",{"_index":1251,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.statisticsservice.getnumberofnewusers().subscribe(data",{"_index":1249,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.statisticsservice.gettotalnumberofusers().subscribe(data",{"_index":1247,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.statisticsservice.getusertimespent(this.route.snapshot.params.id).subscribe(data",{"_index":1876,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.stop",{"_index":1456,"title":{},"body":{"classes/StopTime.html":{}}}],["this.stopcode",{"_index":1357,"title":{},"body":{"classes/Stop.html":{}}}],["this.stopid",{"_index":1356,"title":{},"body":{"classes/Stop.html":{},"classes/StopTime.html":{}}}],["this.stoplat",{"_index":1359,"title":{},"body":{"classes/Stop.html":{}}}],["this.stoplon",{"_index":1360,"title":{},"body":{"classes/Stop.html":{}}}],["this.stopname",{"_index":1358,"title":{},"body":{"classes/Stop.html":{}}}],["this.stops",{"_index":729,"title":{},"body":{"classes/Route.html":{}}}],["this.stops.length",{"_index":732,"title":{},"body":{"classes/Route.html":{}}}],["this.stops.push(stopform",{"_index":1628,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.stops.removeat(stopindex",{"_index":1629,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.stopsequence",{"_index":1453,"title":{},"body":{"classes/StopTime.html":{}}}],["this.stopservice.addstop(stop).subscribe",{"_index":1399,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.stopservice.getstops().subscribe(result",{"_index":1624,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.stoptimeservice.addstoptime(stoptime).subscribe",{"_index":1657,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.stoptimeservice.editstoptime(stoptime.tripid",{"_index":1732,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.stoptimeservice.getstopsofroute(route.routeid).subscribe((stops",{"_index":931,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.stoptimeservice.getstopsoftrip(trip.tripid).subscribe((stops",{"_index":941,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.suspenddate.reset",{"_index":1879,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspenddate.value",{"_index":1873,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspendreason",{"_index":1860,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensions",{"_index":1848,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensions.foreach((suspension",{"_index":1853,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensions.sort((a",{"_index":1849,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensionservice.getsuspensionsofuser(this.route.snapshot.params.id).subscribe(result",{"_index":1847,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensionservice.getsuspensionsofuser(user.id).subscribe(res",{"_index":1986,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.suspensionservice.suspenduser(this.currentuser.id",{"_index":1858,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensionservice.suspenduser(usertobanid",{"_index":2006,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.suspensionservice.unbanuser(this.currentuser.id).subscribe(res",{"_index":1871,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensionservice.unbanuser(userid).subscribe(res",{"_index":2009,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.timespent",{"_index":1190,"title":{},"body":{"classes/Statistics.html":{}}}],["this.timespentintransport",{"_index":1877,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.totalusers",{"_index":1187,"title":{},"body":{"classes/Statistics.html":{},"components/StatisticsComponent.html":{}}}],["this.translation.langchanges$.subscribe",{"_index":1270,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.translation.selecttranslate('statistics.list.chart",{"_index":1266,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.translation.translate('statistics.list",{"_index":1256,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.translocoservice.getactivelang",{"_index":403,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.translocoservice.getavailablelangs",{"_index":401,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.translocoservice.setactivelang(lang",{"_index":456,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.translocoservice.translate('login.list.hide",{"_index":446,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.translocoservice.translate('user",{"_index":1865,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.trip",{"_index":1455,"title":{},"body":{"classes/StopTime.html":{}}}],["this.tripheadsign",{"_index":1575,"title":{},"body":{"classes/Trip.html":{}}}],["this.tripid",{"_index":1448,"title":{},"body":{"classes/StopTime.html":{},"classes/Trip.html":{}}}],["this.tripservice.addtrip(trip).subscribe",{"_index":1650,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.tripservice.edittrip(trip).subscribe",{"_index":1727,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.tripservice.gettrip(id",{"_index":1700,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.tripservice.gettripsofroute(this.route.routeid).subscribe((trips",{"_index":939,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.tripservice.gettripsofroute(this.routeid).subscribe((trips",{"_index":1616,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.tripsstopsmap.get(event.value",{"_index":946,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.tripsstopsmap.set(trip",{"_index":942,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.tripstops",{"_index":945,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.tripstops!.foreach(stoptime",{"_index":955,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.tripstops!.push(new",{"_index":1703,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.tripstops.length",{"_index":980,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.tripstops?.slice(1",{"_index":979,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.updatemap",{"_index":947,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.useremail",{"_index":657,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.userid",{"_index":1504,"title":{},"body":{"classes/Suspension.html":{}}}],["this.username",{"_index":1777,"title":{},"body":{"classes/User.html":{}}}],["this.userrank",{"_index":1775,"title":{},"body":{"classes/User.html":{}}}],["this.users",{"_index":1991,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.users.foreach((user",{"_index":1985,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.users.push(new",{"_index":1994,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.userservice.getuser(this.route.snapshot.params.id).subscribe(result",{"_index":1845,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.userservice.getusers().subscribe((usr",{"_index":1992,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["through",{"_index":853,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["throwerror",{"_index":87,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["tile",{"_index":1292,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["time",{"_index":629,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/StatisticsService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["time.service",{"_index":915,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["time.service.ts",{"_index":1460,"title":{},"body":{"injectables/StopTimeService.html":{},"coverage.html":{}}}],["time.service.ts:13",{"_index":1466,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:25",{"_index":1477,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:35",{"_index":1479,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:46",{"_index":1468,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:57",{"_index":1475,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:68",{"_index":1472,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:79",{"_index":1480,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.ts",{"_index":1420,"title":{},"body":{"classes/StopTime.html":{},"coverage.html":{}}}],["time.ts:11",{"_index":1443,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:15",{"_index":1442,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:19",{"_index":1429,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:23",{"_index":1431,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:27",{"_index":1440,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:31",{"_index":1439,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:35",{"_index":1441,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:39",{"_index":1428,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:61",{"_index":1444,"title":{},"body":{"classes/StopTime.html":{}}}],["times",{"_index":905,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["timespent",{"_index":1178,"title":{},"body":{"classes/Statistics.html":{}}}],["timespentintransport",{"_index":1792,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["timezone",{"_index":41,"title":{},"body":{"classes/Agency.html":{}}}],["title",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{}}}],["title').subscribe",{"_index":1268,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["today",{"_index":1807,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["toformgroup",{"_index":1582,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["together",{"_index":870,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["toggle",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["toggleallrows",{"_index":1056,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["token",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["tooltip",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["top",{"_index":546,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["total",{"_index":608,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["totalcount",{"_index":604,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["totalusers",{"_index":1179,"title":{},"body":{"classes/Statistics.html":{},"components/StatisticsComponent.html":{}}}],["train",{"_index":2104,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tram",{"_index":2102,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transform",{"_index":1300,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["transit",{"_index":33,"title":{},"body":{"classes/Agency.html":{}}}],["translate",{"_index":1301,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["translated",{"_index":1210,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["translation",{"_index":398,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["transloco",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["transloco_config",{"_index":1544,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["transloco_loader",{"_index":1542,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["translococonfig",{"_index":1545,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["translocohttploader",{"_index":1535,"title":{"injectables/TranslocoHttpLoader.html":{}},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"coverage.html":{}}}],["translocoloader",{"_index":1543,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["translocomodule",{"_index":1546,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["translocorootmodule",{"_index":200,"title":{"modules/TranslocoRootModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"modules.html":{},"overview.html":{}}}],["translocoservice",{"_index":370,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["transport",{"_index":623,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteManagementComponent.html":{},"injectables/StatisticsService.html":{},"classes/Trip.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transportation",{"_index":1822,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["transports",{"_index":631,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"injectables/StatisticsService.html":{}}}],["transporttype",{"_index":603,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/StatisticsService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["transporttype[route.routetransporttype",{"_index":1127,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["transporttype[transport",{"_index":802,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["travel",{"_index":2108,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["traveldirection",{"_index":1564,"title":{},"body":{"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["traveldirection[direction",{"_index":1661,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["traveled",{"_index":1434,"title":{},"body":{"classes/StopTime.html":{}}}],["traveller_dashboard",{"_index":2117,"title":{},"body":{"index.html":{}}}],["travelmode",{"_index":972,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["tree",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["trip",{"_index":183,"title":{"classes/Trip.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip(this.selectedtrip.tripid",{"_index":1721,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["trip(trip.tripid",{"_index":1618,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip(tripid",{"_index":1646,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["trip.direction",{"_index":1622,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip.error",{"_index":1659,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip.routeid",{"_index":1620,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip.serviceid",{"_index":1621,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip.shapeid",{"_index":1623,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip.tripheadsign",{"_index":1619,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["tripcreatecomponent",{"_index":182,"title":{"components/TripCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"overview.html":{}}}],["tripeditcomponent",{"_index":184,"title":{"components/TripEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["tripheadsign",{"_index":1563,"title":{},"body":{"classes/Trip.html":{}}}],["tripid",{"_index":1425,"title":{},"body":{"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{}}}],["tripname",{"_index":1600,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trips",{"_index":844,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trips.foreach((trip",{"_index":940,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["tripservice",{"_index":839,"title":{"injectables/TripService.html":{}},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["tripsstopsmap",{"_index":830,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["tripstops",{"_index":831,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["triptransportdirection",{"_index":1601,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["true",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/variables.html":{}}}],["true).subscribe(res",{"_index":2007,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["try",{"_index":131,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["trying",{"_index":1813,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["tslib",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":2096,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typescript",{"_index":601,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{}}}],["uma",{"_index":923,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["unban",{"_index":1525,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["unbanned",{"_index":1872,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["unbanuser",{"_index":1513,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["unbanuser(userid",{"_index":1523,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UsersManagementComponent.html":{}}}],["undefined",{"_index":906,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{}}}],["underline",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["unit",{"_index":2138,"title":{},"body":{"index.html":{}}}],["universal",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["unsuccessful",{"_index":114,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["until",{"_index":1837,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["update",{"_index":1156,"title":{},"body":{"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/TripService.html":{}}}],["updatemap",{"_index":836,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["updates",{"_index":867,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["updatestops",{"_index":837,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["updatestops(event",{"_index":871,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["url",{"_index":44,"title":{},"body":{"classes/Agency.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["url(\"../../../assets/img/nav",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{}}}],["urlroute",{"_index":843,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["urltree",{"_index":351,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":911,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["useclass",{"_index":1559,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["used",{"_index":32,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["usefactory",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":123,"title":{"classes/User.html":{}},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["user's",{"_index":650,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["user(user.id",{"_index":1995,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.creationdate",{"_index":1999,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.email",{"_index":2000,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.formateddate",{"_index":2010,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.id",{"_index":2005,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.rating",{"_index":1998,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.username",{"_index":1997,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.userrank",{"_index":1996,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.userrank.tolowercase",{"_index":1989,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user/:id",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["userdetailscomponent",{"_index":185,"title":{"components/UserDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["useremail",{"_index":640,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["userforauth",{"_index":426,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["userforauthentication",{"_index":427,"title":{"interfaces/UserForAuthentication.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{}}}],["userid",{"_index":1334,"title":{},"body":{"injectables/StatisticsService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["userloggedin",{"_index":641,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["username",{"_index":1759,"title":{},"body":{"classes/User.html":{},"components/UsersManagementComponent.html":{}}}],["userrank",{"_index":1760,"title":{},"body":{"classes/User.html":{},"components/UsersManagementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["userrank[number(userrank",{"_index":1776,"title":{},"body":{"classes/User.html":{}}}],["users",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["userservice",{"_index":1799,"title":{"injectables/UserService.html":{}},"body":{"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["usersmanagementcomponent",{"_index":186,"title":{"components/UsersManagementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usertobanid",{"_index":2004,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["usevalue",{"_index":1551,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["using",{"_index":768,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["usr.foreach((user",{"_index":1993,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["usually",{"_index":717,"title":{},"body":{"classes/Route.html":{},"classes/Trip.html":{}}}],["valid",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/UserDetailsComponent.html":{}}}],["validate",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["validation",{"_index":524,"title":{},"body":{"components/LoginComponent.html":{}}}],["validationerrors",{"_index":1841,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["validator",{"_index":1803,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["validatorfn",{"_index":1808,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["validators",{"_index":368,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["validators.email",{"_index":410,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["validators.required",{"_index":409,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["value",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":381,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["var",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["variable",{"_index":384,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"classes/StopTime.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{}}}],["variables",{"_index":1212,"title":{"miscellaneous/variables.html":{}},"body":{"components/StatisticsComponent.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":94,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["verify",{"_index":1971,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["version",{"_index":2121,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1003,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["via",{"_index":1092,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{},"index.html":{}}}],["viewchild",{"_index":1095,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["viewchild(matpaginator",{"_index":1088,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["viewed",{"_index":774,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["viewing",{"_index":377,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["voice",{"_index":36,"title":{},"body":{"classes/Agency.html":{}}}],["void",{"_index":405,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["waypoints",{"_index":968,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["waypoints.length",{"_index":982,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["webkit",{"_index":999,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["went",{"_index":120,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["whether",{"_index":1499,"title":{},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["white",{"_index":668,"title":{},"body":{"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["whose",{"_index":752,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["width",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["window.history.back",{"_index":799,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["word",{"_index":670,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["wrong",{"_index":121,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["yes",{"_index":703,"title":{},"body":{"classes/Route.html":{},"classes/StopTime.html":{},"classes/Trip.html":{}}}],["zone",{"_index":1257,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["zone.js",{"_index":2091,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":619,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{}}}],["zoom",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["zoomcontrol",{"_index":892,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Agency.html":{"url":"classes/Agency.html","title":"class - Agency","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agency\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/agency.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a Agency.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agencyId\n                            \n                            \n                                agencyLang\n                            \n                            \n                                agencyName\n                            \n                            \n                                agencyPhone\n                            \n                            \n                                agencyTimezone\n                            \n                            \n                                agencyUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(agencyId: string, agencyName: string, agencyUrl: string, agencyTimezone: string, agencyLang: string, agencyPhone: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/agency.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        agencyId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyTimezone\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyLang\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyPhone\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agencyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:8\n                        \n                    \n\n            \n                \n                    Id of the Agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:24\n                        \n                    \n\n            \n                \n                    Primary language used by this transit agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:12\n                        \n                    \n\n            \n                \n                    Full name of the transit agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:28\n                        \n                    \n\n            \n                \n                    A voice telephone number for the specified agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyTimezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:20\n                        \n                    \n\n            \n                \n                    Timezone where the transit agency is located.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:16\n                        \n                    \n\n            \n                \n                    URL of the transit agency.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Agency {\n  /**\n   * Id of the Agency.\n   */\n  agencyId: string;\n  /**\n   * Full name of the transit agency.\n   */\n  agencyName: string;\n  /**\n   * URL of the transit agency.\n   */\n  agencyUrl: string;\n  /**\n   * Timezone where the transit agency is located.\n   */\n  agencyTimezone: string;\n  /**\n   * Primary language used by this transit agency.\n   */\n  agencyLang: string;\n  /**\n   * A voice telephone number for the specified agency.\n   */\n  agencyPhone: string;\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(agencyId: string, agencyName: string, agencyUrl: string,\n    agencyTimezone: string, agencyLang: string, agencyPhone: string) {\n    this.agencyId = agencyId;\n    this.agencyName = agencyName;\n    this.agencyUrl = agencyUrl;\n    this.agencyTimezone = agencyTimezone;\n    this.agencyLang = agencyLang;\n    this.agencyPhone = agencyPhone;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgencyService.html":{"url":"injectables/AgencyService.html","title":"injectable - AgencyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgencyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/agency.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAgencies\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/agency.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAgencies\n                        \n                    \n                \n            \n            \n                \ngetAgencies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/agency.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/agency.service.ts:30\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Agency } from '../models/agency';\n\n@Injectable({\n  providedIn: 'root'\n})\n  /**\n   * Service that communicates with the server and has various operations about Agencies.\n   */\nexport class AgencyService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient,) { }\n\n  getAgencies(): Observable {\n    return this.http.get('https://traveller-server.azurewebsites.net/api/AgenciesApi')\n      .pipe(catchError(this.handleError))\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isLoginPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoginPage\n                        \n                    \n                \n            \n            \n                \nisLoginPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor(private router: Router) { }\n\n  isLoginPage() {\n    return this.router.url === '/';\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavMenuComponent\n\nNavMenuComponent\n\nAppModule -->\n\nNavMenuComponent->AppModule\n\n\n\n\n\nRouteCreateComponent\n\nRouteCreateComponent\n\nAppModule -->\n\nRouteCreateComponent->AppModule\n\n\n\n\n\nRouteDetailsComponent\n\nRouteDetailsComponent\n\nAppModule -->\n\nRouteDetailsComponent->AppModule\n\n\n\n\n\nRouteEditComponent\n\nRouteEditComponent\n\nAppModule -->\n\nRouteEditComponent->AppModule\n\n\n\n\n\nRouteManagementComponent\n\nRouteManagementComponent\n\nAppModule -->\n\nRouteManagementComponent->AppModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nAppModule -->\n\nStatisticsComponent->AppModule\n\n\n\n\n\nStopCreateComponent\n\nStopCreateComponent\n\nAppModule -->\n\nStopCreateComponent->AppModule\n\n\n\n\n\nTripCreateComponent\n\nTripCreateComponent\n\nAppModule -->\n\nTripCreateComponent->AppModule\n\n\n\n\n\nTripEditComponent\n\nTripEditComponent\n\nAppModule -->\n\nTripEditComponent->AppModule\n\n\n\n\n\nUserDetailsComponent\n\nUserDetailsComponent\n\nAppModule -->\n\nUserDetailsComponent->AppModule\n\n\n\n\n\nUsersManagementComponent\n\nUsersManagementComponent\n\nAppModule -->\n\nUsersManagementComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nTranslocoRootModule\n\nTranslocoRootModule\n\nAppModule -->\n\nTranslocoRootModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavMenuComponent\n                        \n                        \n                            RouteCreateComponent\n                        \n                        \n                            RouteDetailsComponent\n                        \n                        \n                            RouteEditComponent\n                        \n                        \n                            RouteManagementComponent\n                        \n                        \n                            StatisticsComponent\n                        \n                        \n                            StopCreateComponent\n                        \n                        \n                            TripCreateComponent\n                        \n                        \n                            TripEditComponent\n                        \n                        \n                            UserDetailsComponent\n                        \n                        \n                            UsersManagementComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TranslocoRootModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { Component, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { DatePipe } from '@angular/common';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './components/nav-menu/nav-menu.component';\nimport { UserDetailsComponent } from './components/user-details/user-details.component';\nimport { RouteManagementComponent } from './components/route-management/route-management.component';\nimport { StatisticsComponent } from './components/statistics/statistics.component';\nimport { TranslocoRootModule } from './transloco-root.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { UsersManagementComponent } from './components/users-management/users-management.component';\nimport { RouteDetailsComponent } from './components/route-details/route-details.component';\nimport { RouteCreateComponent } from './components/route-create/route-create.component';\nimport { TripCreateComponent } from './components/trip-create/trip-create.component';\nimport { TripEditComponent } from './components/trip-edit/trip-edit.component';\nimport { RouteEditComponent } from './components/route-edit/route-edit.component';\nimport { StopCreateComponent } from './components/stop-create/stop-create.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    UserDetailsComponent,\n    RouteManagementComponent,\n    StatisticsComponent,\n    LoginComponent,\n    UsersManagementComponent,\n    RouteDetailsComponent,\n    RouteCreateComponent,\n    RouteEditComponent,\n    StopCreateComponent,\n    TripCreateComponent,\n    TripEditComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatChipsModule,\n    MatDividerModule,\n    MatIconModule,\n    MatTableModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatSelectModule,\n    GoogleMapsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatGridListModule,\n    RouterModule.forRoot([\n      { path: '', component: LoginComponent, pathMatch: 'full' },\n      { path: 'statistics', component: StatisticsComponent, canActivate: [AuthGuard] },\n      { path: 'route-management', component: RouteManagementComponent, canActivate: [AuthGuard] },\n      { path: 'user/:id', component: UserDetailsComponent, canActivate: [AuthGuard] },\n      { path: 'users-management', component: UsersManagementComponent, canActivate: [AuthGuard] },\n      { path: 'route-details/:id', component: RouteDetailsComponent, canActivate: [AuthGuard] },\n      { path: 'route-create', component: RouteCreateComponent, canActivate: [AuthGuard] },\n      { path: 'route-edit/:id', component: RouteEditComponent, canActivate: [AuthGuard] },\n      { path: 'trip-edit/:id', component: TripEditComponent, canActivate: [AuthGuard] },\n      { path: 'trip-create/:id', component: TripCreateComponent, canActivate: [AuthGuard] },\n      { path: 'stop-create', component: StopCreateComponent, canActivate: [AuthGuard] },\n    ]),\n    TranslocoRootModule\n  ],\n  providers: [AuthService, AuthGuard, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\nimport { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\n\n@NgModule({\n    imports: [AppModule, ServerModule, ModuleMapLoaderModule],\n    bootstrap: [AppComponent]\n})\nexport class AppServerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to comunicate with the server to perform the login.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Redirect the current link.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:29\n                \n            \n\n\n            \n                \n                    Function that will validate if the token created is valid if it's true login succeed, it's false redirect to login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Gives information about the current route.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Gives the state of the route after received the token.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Class for the Guard Routes of the dashboard.\n */\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Constructor for the component.\n   * \n   * @param authService Service to comunicate with the server to perform the login.\n   * @param router Redirect the current link.\n   */\n  constructor(private authService: AuthService, private router: Router) { };\n\n  /**\n   * Function that will validate if the token created is valid if it's true login succeed, it's false redirect to login page.\n   * \n   * @param next Gives information about the current route.\n   * @param state Gives the state of the route after received the token.\n   */\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n\n    if (!this.authService.isLoggedIn(localStorage.getItem('token')!.toString())) {\n      this.router.navigate(['/api/AuthApi/LoginDashboard']); // go to login if not authenticated\n      return false;\n    }\n    return true;\n \n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/login/login.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                        \n                                            isAuthSuccessful\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthSuccessful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAuthSuccessful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslocoService } from '@ngneat/transloco';\nimport Snackbar from 'awesome-snackbar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n/**\n* Class for the component of the page of viewing Login Page.\n*/\nexport class LoginComponent implements OnInit {\n  /**\n   * Url to navigate to the statistics page.\n   */\n  private returnUrl!: string;\n  /*\n   * Form to have the values of the inputs.\n   */\n  loginForm!: FormGroup;\n  /*\n   * Variable used to give feedback to the user if the page is loading or not.\n   */\n  isLoading!: boolean;\n  /**\n   * All the available languages of the application.\n   */\n  private availableLangs: string[] | { id: string, label: string }[];\n  /**\n   * Current active language.\n   */\n  private activeLang: string;\n\n  /**\n   * Constructor for the component.\n   * \n   * @param authService Authentication service that comunicates with the server to validate the inputs of the user.\n   * @param router Redirect the current link after the login succeed.\n   * @param route Gives information about the current route.\n   * @param translocoService Service that perform the translation of the text.\n   */\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute, private translocoService: TranslocoService)\n  {\n    this.availableLangs = this.translocoService.getAvailableLangs();\n    this.activeLang = this.translocoService.getActiveLang();\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [Validators.required]),\n    })\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  /**\n   * Function that will be executed when the login button\n   * is pressed which serves to send the data to the authentication\n   * service if they are correct login was done correctly.\n   * \n   * @param loginForm FormGroup to obtain the values of the inputs\n   */\n  loginCredentials(loginForm: FormGroup) {\n    const login = loginForm.value;\n\n    const userForAuth: UserForAuthentication = {\n      email: login.email,\n      password: login.password\n    }\n\n    this.authService.loginUser(userForAuth)\n      .subscribe({\n        next: (res: AuthResponse) => {\n          localStorage.setItem(\"token\", res.token);\n          localStorage.setItem(\"userEmail\", login.email);\n          this.authService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n          this.isLoading = true;\n          this.router.navigate(['/statistics']);\n        },\n        error: (err: HttpErrorResponse) => {\n          this.isLoading = false;\n          new Snackbar(this.translocoService.translate('login.list.' + err.message), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      })\n  }\n\n  /**\n * Changes the active language.\n * @param {string} lang id of language to change to.\n */\n  changeLang(lang: string) {\n    this.translocoService.setActiveLang(lang);\n    this.activeLang = lang;\n  }\n}\n\nexport interface UserForAuthentication {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  isAuthSuccessful: boolean;\n  errorMessage: string;\n  token: string;\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authChanged\n                            \n                            \n                                    Private\n                                authChangeSub\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                sendAuthStateChangeNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:78\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:34\n                \n            \n\n\n            \n                \n                    Function that validate if the token created is valid or not\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Used to pass the guard in the page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authChangeSub.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:20\n                        \n                    \n\n            \n                \n                    Variable used to observe the authChengeSub and store the value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authChangeSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n            \n                \n                    Variable that creates a Subject\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:50\n                        \n                    \n\n            \n                \n                    Function used to post the information to comunicate with the server.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                            \n                                            \n                                                    body\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:68\n                        \n                    \n\n            \n                \n                    Function used to logout the user and remove the storage token and modify the autenticated value to false\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendAuthStateChangeNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:61\n                        \n                    \n\n            \n                \n                    Function used to modify the value of authChageSub variable.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    isAuthenticated\n                                                    \n                                                            a boolean variable that will be true if the login succeed and false if not or the user logout\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { AuthResponse, UserForAuthentication } from '../components/login/login.component';\nimport { catchError, Observable, throwError, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service that communicates with the server and has operations about Authentication Service.\n*/\nexport class AuthService {\n  /**\n   * Variable that creates a Subject\n   */\n  private authChangeSub = new Subject()\n  /**\n   * Variable used to observe the authChengeSub and store the value.\n   */\n  public authChanged = this.authChangeSub.asObservable();\n\n  /**\n   * Constructor for the component.\n   * \n   * @param http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Function that validate if the token created is valid or not \n   * \n   * @param token Used to pass the guard in the page\n   */\n  isLoggedIn(token: string) {\n    //const token = localStorage.getItem('token'); // get token from local storage\n\n    const payload = atob(token.split('.')[1]); // decode payload of token\n\n    const parsedPayload = JSON.parse(payload); // convert payload into an Object\n\n    return parsedPayload.exp > Date.now() / 1000;\n  }\n\n  /**\n   * Function used to post the information to comunicate with the server.\n   * \n   * @param route \n   * @param body \n   */\n  public loginUser = (body: UserForAuthentication) => {\n    //return this.http.post('api/AuthApi/LoginDashboard', body)\n    return this.http.post('https://traveller-server.azurewebsites.net/api/AuthApi/LoginDashboard', body)\n    .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Function used to modify the value of authChageSub variable.\n   * \n   * @param isAuthenticated a boolean variable that will be true if the login succeed and false if not or the user logout\n   */\n  public sendAuthStateChangeNotification = (isAuthenticated: boolean) => {\n    this.authChangeSub.next(isAuthenticated);\n  }\n\n  /**\n   * Function used to logout the user and remove the storage token and modify the autenticated value to false\n   */\n  public logout = () => {\n    localStorage.removeItem(\"token\");\n    this.sendAuthStateChangeNotification(false);\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was:`, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error(error.error));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeLang\n                            \n                            \n                                    Private\n                                availableLangs\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                loginCredentials\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, route: ActivatedRoute, translocoService: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authentication service that comunicates with the server to validate the inputs of the user.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Redirect the current link after the login succeed.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gives information about the current route.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that perform the translation of the text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLang\n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:108\n                \n            \n\n\n            \n                \n                    Changes the active language.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of language to change to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginCredentials\n                        \n                    \n                \n            \n            \n                \nloginCredentials(loginForm: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:72\n                \n            \n\n\n            \n                \n                    Function that will be executed when the login button\nis pressed which serves to send the data to the authentication\nservice if they are correct login was done correctly.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loginForm\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FormGroup to obtain the values of the inputs\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:38\n                        \n                    \n\n            \n                \n                    Current active language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        availableLangs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[] | literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:34\n                        \n                    \n\n            \n                \n                    All the available languages of the application.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:22\n                        \n                    \n\n            \n                \n                    Url to navigate to the statistics page.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslocoService } from '@ngneat/transloco';\nimport Snackbar from 'awesome-snackbar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n/**\n* Class for the component of the page of viewing Login Page.\n*/\nexport class LoginComponent implements OnInit {\n  /**\n   * Url to navigate to the statistics page.\n   */\n  private returnUrl!: string;\n  /*\n   * Form to have the values of the inputs.\n   */\n  loginForm!: FormGroup;\n  /*\n   * Variable used to give feedback to the user if the page is loading or not.\n   */\n  isLoading!: boolean;\n  /**\n   * All the available languages of the application.\n   */\n  private availableLangs: string[] | { id: string, label: string }[];\n  /**\n   * Current active language.\n   */\n  private activeLang: string;\n\n  /**\n   * Constructor for the component.\n   * \n   * @param authService Authentication service that comunicates with the server to validate the inputs of the user.\n   * @param router Redirect the current link after the login succeed.\n   * @param route Gives information about the current route.\n   * @param translocoService Service that perform the translation of the text.\n   */\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute, private translocoService: TranslocoService)\n  {\n    this.availableLangs = this.translocoService.getAvailableLangs();\n    this.activeLang = this.translocoService.getActiveLang();\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [Validators.required]),\n    })\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  /**\n   * Function that will be executed when the login button\n   * is pressed which serves to send the data to the authentication\n   * service if they are correct login was done correctly.\n   * \n   * @param loginForm FormGroup to obtain the values of the inputs\n   */\n  loginCredentials(loginForm: FormGroup) {\n    const login = loginForm.value;\n\n    const userForAuth: UserForAuthentication = {\n      email: login.email,\n      password: login.password\n    }\n\n    this.authService.loginUser(userForAuth)\n      .subscribe({\n        next: (res: AuthResponse) => {\n          localStorage.setItem(\"token\", res.token);\n          localStorage.setItem(\"userEmail\", login.email);\n          this.authService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n          this.isLoading = true;\n          this.router.navigate(['/statistics']);\n        },\n        error: (err: HttpErrorResponse) => {\n          this.isLoading = false;\n          new Snackbar(this.translocoService.translate('login.list.' + err.message), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      })\n  }\n\n  /**\n * Changes the active language.\n * @param {string} lang id of language to change to.\n */\n  changeLang(lang: string) {\n    this.translocoService.setActiveLang(lang);\n    this.activeLang = lang;\n  }\n}\n\nexport interface UserForAuthentication {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  isAuthSuccessful: boolean;\n  errorMessage: string;\n  token: string;\n}\n\n\n\n\n    \n\n    \n        \n  \n    {{t('login-page-loading')}}\n    \n  \n  \n    \n      \n        \n          {{t('title-card-login')}}\n          \n            help\n          \n        \n        \n\n          \n          \n            {{t('input-email-label')}}\n            \n            {{t('input-email-error-required')}}\n            {{t('input-email-error-validation')}}\n          \n\n          \n          \n            {{t('input-password-label')}}\n            \n            {{t('input-password-error-required')}}\n          \n\n          \n        \n        \n           Login \n        \n      \n      \n        \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                #container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  width: 100%;\n  height: 100%;\n}\n\n.login-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n}\n\nmat-card-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n  height: 25%;\n}\n\n.login-card-title {\n  color: black;\n  font-size: 35px;\n}\n\nmat-card-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  width: 100%;\n  height: 50%;\n  margin-top: 5%;\n  margin-bottom: 10%;\n}\n\n.input-email {\n  margin-top: 2%;\n  padding-bottom: 2%;\n  width: 100%;\n  height: 50%;\n  margin-bottom: 5%;\n}\n\n.input-password {\n  margin-bottom: 2%;\n  width: 100%;\n  height: 50%;\n}\n\n.mat-input-element {\n  caret-color: black;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n  /*change color of label*/\n  color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /*change color of underline*/\n  background-color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /*change color of underline when focused*/\n  background-color: #003F91 !important;\n}\n\nmat-card-footer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  margin-bottom: 5%;\n  width: 100%;\n  height: 25%;\n}\n\n#loginButton {\n  width: 100%;\n  height: 35%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em grey;\n  margin-bottom: 2%;\n  font-size: 20px;\n}\n\n.mat-icon {\n  display: flex;\n  align-self: flex-end;\n  margin-left: 8px;\n  margin-bottom: 11px;\n}\n\n#spinner {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nmat-spinner {\n  display: flex;\n  justify-self: center;\n  align-self: center;\n}\n\n#languageSelection {\n  display: flex;\n  flex-direction: row;\n  width: 10%;\n  margin-top: 10px;\n  justify-content: space-between;\n}\n\n.mat-button {\n  min-width: 45px;\n  min-height: 30px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n#en-lang {\n  background-image: url(\"../../../assets/img/nav-menu/enLang.png\");\n  background-size: 100% 100%;\n}\n\n#pt-lang {\n  background-image: url(\"../../../assets/img/nav-menu/ptLang.png\");\n  background-size: 100% 100%;\n}\n\n/deep/ .mat-tooltip {\n  font-size: 14px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{t(\\'login-page-loading\\')}}                                    {{t(\\'title-card-login\\')}}                      help                                                          {{t(\\'input-email-label\\')}}                        {{t(\\'input-email-error-required\\')}}            {{t(\\'input-email-error-validation\\')}}                                          {{t(\\'input-password-label\\')}}                        {{t(\\'input-password-error-required\\')}}                                               Login                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MostUsedTransportResponse.html":{"url":"interfaces/MostUsedTransportResponse.html","title":"interface - MostUsedTransportResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MostUsedTransportResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/statistics.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mostUsedTransport\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mostUsedTransport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mostUsedTransport:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Statistics } from '../models/statistics';\n\ninterface MostUsedTransportResponse {\n  mostUsedTransport: { transportType: string, totalCount: number }[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n/**\n* Service that communicates with the server and has various operations about statistics.\n*/\nexport class StatisticsService {\n\n  /**\n   * Constructor for the class.\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n  * getActiveUsers method is used to get the total number of active users from the API\n  */\n\n  getActiveUsers() {\n    //return this.http.get('api/StatisticsApi/GetActiveUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetActiveUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n\n  /**\n   * getTotalNumberOfUsers method is used to get the total number of users from the API\n   */\n\n  getTotalNumberOfUsers() {\n    //return this.http.get('api/StatisticsApi/GetTotalNumberOfUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTotalNumberOfUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getNumberOfNewUsers method is used to get the number of new users from the API\n  */\n\n  getNumberOfNewUsers() {\n    //return this.http.get('api/StatisticsApi/GetTotalOfNewUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTotalOfNewUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getMostActiveZones method is used to get the most active zones from the API\n  */\n\n  getMostActiveZones() {\n    //return this.http.get('api/StatisticsApi/GetMostActiveZones')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetMostActiveZones')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getUserMostUsedTransport method is used to get the most used transport\n  */\n\n  getUserMostUsedTransport(userId: string) {\n    //return this.http.get(`api/StatisticsApi/GetMostUsedTransport/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StatisticsApi/GetMostUsedTransport/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getUserTimeSpent method is used to get the user time spent in transports\n  */\n\n  getUserTimeSpent(userId: string) {\n    //return this.http.get(`api/StatisticsApi/GetTimeSpent/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTimeSpent/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavMenuComponent.html":{"url":"components/NavMenuComponent.html","title":"component - NavMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/nav-menu/nav-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-menu\n            \n\n            \n                styleUrls\n                ./nav-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./nav-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeLang\n                            \n                            \n                                    Private\n                                availableLangs\n                            \n                            \n                                    Public\n                                userEmail\n                            \n                            \n                                    Public\n                                userLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: TranslocoService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/nav-menu/nav-menu.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLang\n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/nav-menu/nav-menu.component.ts:53\n                \n            \n\n\n            \n                \n                    Changes the active language.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of language to change to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/nav-menu/nav-menu.component.ts:45\n                \n            \n\n\n            \n                \n                    Function used to logout the user from the dashboard.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/nav-menu/nav-menu.component.ts:23\n                        \n                    \n\n            \n                \n                    Current active language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        availableLangs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[] | literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/nav-menu/nav-menu.component.ts:19\n                        \n                    \n\n            \n                \n                    All the available languages of the application.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/nav-menu/nav-menu.component.ts:27\n                        \n                    \n\n            \n                \n                    Logged in user's email\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserForAuthentication\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/nav-menu/nav-menu.component.ts:34\n                        \n                    \n\n            \n                \n                    Constructor for the component.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    service\n                                                    \n                                                            TranslocoService object in order to change languages at runtime.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n\n\n\n    \n        import { UserForAuthentication } from '../login/login.component';\nimport { Component } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\n\n/**\n * Class for the component of the NavMenu\n */\nexport class NavMenuComponent {\n  /**\n   * All the available languages of the application.\n   */\n  private availableLangs: string[] | { id: string, label: string }[];\n  /**\n   * Current active language.\n   */\n  private activeLang: string;\n  /**\n   * Logged in user's email\n   * */\n  public userEmail!: string;\n\n\n  /**\n   * Constructor for the component.\n   * @param {TranslocoService} service TranslocoService object in order to change languages at runtime.\n   */\n  public userLoggedIn!: UserForAuthentication;\n\n  constructor(private service: TranslocoService, private authService: AuthService) {\n    this.availableLangs = this.service.getAvailableLangs();\n    this.activeLang = this.service.getActiveLang();\n    this.userEmail = (localStorage.getItem('userEmail') || '{}');\n  }\n\n  /**\n   * Function used to logout the user from the dashboard.\n   */\n  logOut() {\n    this.authService.logout();\n  }\n\n  /**\n   * Changes the active language.\n   * @param {string} lang id of language to change to.\n   */\n  changeLang(lang: string) {\n    this.service.setActiveLang(lang);\n    this.activeLang = lang;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n        {{ t('welcome') }}, {{userEmail}}\n      \n    \n      \n      {{ t('stats-text') }}\n    \n    \n      \n      {{ t('routes-management-text') }}\n    \n    \n      \n      {{ t('users-management-text') }}\n    \n    \n      \n        \n        \n      \n    \n    \n    \n    \n      \n      {{ t('logout-text') }}\n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./nav-menu.component.css\n                \n                a.navbar-brand {\n  white-space: normal;\n  text-align: center;\n  word-break: break-all;\n}\n\nhtml {\n  font-size: 14px;\n}\n@media (min-width: 768px) {\n  html {\n    font-size: 16px;\n  }\n}\n\n.nav-logo-img {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.nav-logo-img p {\n    color: #FAFAF9;\n}\n\n.navbar-nav {\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  height: 100%;\n}\n\nli.nav-item {\n  display: flex;\n  align-items: center;\n}\n\na.nav-link {\n  color: #FAFAF9;\n}\n\n.navbar-nav li img {\n  margin-right: 10px;\n}\n\n#language-selector {\n    display:flex;\n    justify-content: space-evenly;\n    margin-top: 15px;\n}\n\n.mat-button {\n  min-width: 45px;\n  min-height: 30px;\n}\n\n#en-lang {\n  background-image: url(\"../../../assets/img/nav-menu/enLang.png\");\n  background-size: 100% 100%;\n}\n\n#pt-lang {\n  background-image: url(\"../../../assets/img/nav-menu/ptLang.png\");\n  background-size: 100% 100%;\n}\n\n#logout {\n  color: #FAFAF9;\n  font-size: 16px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ t(\\'welcome\\') }}, {{userEmail}}                      {{ t(\\'stats-text\\') }}                    {{ t(\\'routes-management-text\\') }}                    {{ t(\\'users-management-text\\') }}                                                                {{ t(\\'logout-text\\') }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Route.html":{"url":"classes/Route.html","title":"class - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a Route.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agency\n                            \n                            \n                                agencyId\n                            \n                            \n                                routeDuration\n                            \n                            \n                                routeId\n                            \n                            \n                                routeLongName\n                            \n                            \n                                routeShortName\n                            \n                            \n                                routeTransportType\n                            \n                            \n                                stops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateRouteDuration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routeId: string, agencyId: string, routeShortName: string, routeLongName: string, routeTransportType: number, agency?: Agency, stops?: StopTime[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/route.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routeId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeShortName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeLongName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeTransportType\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agency\n                                                  \n                                                        \n                                                                        Agency\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        stops\n                                                  \n                                                        \n                                                                    StopTime[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Agency\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:19\n                        \n                    \n\n            \n                \n                    The agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:15\n                        \n                    \n\n            \n                \n                    Id of the agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeDuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:35\n                        \n                    \n\n            \n                \n                    The amount of time the route takes from origin to destination.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:11\n                        \n                    \n\n            \n                \n                    Id of the route.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeLongName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:27\n                        \n                    \n\n            \n                \n                    The long name of the route, saying the origin and destination.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeShortName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:23\n                        \n                    \n\n            \n                \n                    The short name of the route, usually the route number.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeTransportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:31\n                        \n                    \n\n            \n                \n                    The type of the transport of the route\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stops\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StopTime[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:39\n                        \n                    \n\n            \n                \n                    The stops belonging to the route\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateRouteDuration\n                        \n                    \n                \n            \n            \n                \ncalculateRouteDuration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/route.ts:61\n                \n            \n\n\n            \n                \n                    Method to calculate the duration of the route based on the stops it has.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Agency } from \"./agency\";\nimport { StopTime } from \"./stop-time\";\n\n/**\n * Class that represents a Route.\n */\nexport class Route {\n  /**\n   * Id of the route.\n   */\n  routeId: string;\n  /**\n   * Id of the agency.\n   */\n  agencyId: string;\n  /**\n   * The agency.\n   */\n  agency!: Agency;\n  /**\n   * The short name of the route, usually the route number.\n   */\n  routeShortName: string;\n  /**\n   * The long name of the route, saying the origin and destination.\n   */\n  routeLongName: string;\n  /**\n   * The type of the transport of the route\n   */\n  routeTransportType: number;\n  /**\n   * The amount of time the route takes from origin to destination.\n   */\n  routeDuration: number;\n  /**\n   * The stops belonging to the route\n   */\n  stops!: StopTime[];\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(routeId: string, agencyId: string, routeShortName: string,\n    routeLongName: string, routeTransportType: number, agency?: Agency, stops?: StopTime[]) {\n    this.routeId = routeId;\n    this.agencyId = agencyId;\n    this.routeShortName = routeShortName;\n    this.routeLongName = routeLongName;\n    this.routeTransportType = routeTransportType;\n\n    if (agency) this.agency = agency;\n    if (stops) this.stops = stops;\n\n    this.routeDuration = this.calculateRouteDuration();\n  }\n\n  /**\n   * Method to calculate the duration of the route based on the stops it has.\n   */\n  calculateRouteDuration() {\n    if (this.stops && this.stops.length != 0) {\n      var finishTime = new Date(this.stops[this.stops.length - 1].arrivalTime).getTime();\n      var startTime = new Date(this.stops[0].arrivalTime).getTime();\n      return Math.floor((finishTime - startTime) / 60000);\n    }\n    return 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteCreateComponent.html":{"url":"components/RouteCreateComponent.html","title":"component - RouteCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RouteCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/route-create/route-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-create\n            \n\n            \n                styleUrls\n                ./route-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./route-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                agencies\n                            \n                            \n                                createRouteForm\n                            \n                            \n                                transports\n                            \n                            \n                                TransportType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(routeService: RouteService, agencyService: AgencyService, formBuilder: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/route-create/route-create.component.ts:42\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the route whose Id matches the one in the URL and passes its info to the form.\nAlso gets all the existent stops.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        routeService\n                                                  \n                                                        \n                                                                        RouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Routes.\n\n                                                        \n                                                \n                                                \n                                                        agencyService\n                                                  \n                                                        \n                                                                        AgencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Agencies.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Builds form data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-create/route-create.component.ts:74\n                \n            \n\n\n            \n                \n                    Cancels the creation of a new stop. Redirects back to the previous page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-create/route-create.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-create/route-create.component.ts:64\n                \n            \n\n\n            \n                \n                    Creates a route object and sends it to the database using the routeService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        agencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-create/route-create.component.ts:32\n                        \n                    \n\n            \n                \n                    List of all the existent agencies.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRouteForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    number: ['', Validators.required],\n    name: ['', Validators.required],\n    transportType: this.formBuilder.control(null, Validators.required),\n    agency: this.formBuilder.control(null, Validators.required),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-create/route-create.component.ts:37\n                        \n                    \n\n            \n                \n                    Form data to be viewed in the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(TransportType).map(v => Number(v)).filter(v => Number.isFinite(v))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-create/route-create.component.ts:28\n                        \n                    \n\n            \n                \n                    All the values of the TransportType enum.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TransportType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransportType\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-create/route-create.component.ts:24\n                        \n                    \n\n            \n                \n                    TransportType for reverse mapping in the html.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouteService } from '../../services/route.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route } from '../../models/route';\nimport { TransportType } from '../../enums/transport-type';\nimport { map } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Agency } from '../../models/agency';\nimport { AgencyService } from '../../services/agency.service';\nimport { Guid } from 'guid-typescript';\n\n@Component({\n  selector: 'app-route-create',\n  templateUrl: './route-create.component.html',\n  styleUrls: ['./route-create.component.css']\n})\n/**\n * Class for the component of the page of Route Editing\n */\nexport class RouteCreateComponent implements OnInit {\n  /**\n   * TransportType for reverse mapping in the html.\n   */\n  TransportType = TransportType;\n  /**\n   * All the values of the TransportType enum.\n   */\n  transports: number[] = Object.keys(TransportType).map(v => Number(v)).filter(v => Number.isFinite(v));\n  /**\n   * List of all the existent agencies.\n   */\n  public agencies!: Array;\n\n  /**\n   * Form data to be viewed in the page\n   */\n  createRouteForm = this.formBuilder.group({\n    number: ['', Validators.required],\n    name: ['', Validators.required],\n    transportType: this.formBuilder.control(null, Validators.required),\n    agency: this.formBuilder.control(null, Validators.required),\n  });\n\n  /**\n   * Constructor for the component.\n   * Gets the route whose Id matches the one in the URL and passes its info to the form.\n   * Also gets all the existent stops.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {AgencyService} agencyService Service that communicates with the server and has various operations about Agencies.\n   * @param {FormBuilder} formBuilder Builds form data.\n   * @param {Router} router Router.\n   */\n  constructor(private routeService: RouteService, private agencyService: AgencyService,\n    private formBuilder: FormBuilder, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.agencyService.getAgencies().subscribe((agencies) => { this.agencies = agencies; });\n  }\n\n  /**\n   * Creates a route object and sends it to the database using the routeService\n   */\n  onSubmit(): void {\n    let route: Route = new Route(Guid.create().toString(), this.createRouteForm.controls.agency.value!,\n      this.createRouteForm.controls.number.value!, this.createRouteForm.controls.name.value!,\n      Number(this.createRouteForm.controls.transportType.value!));\n    this.routeService.addRoute(route).subscribe(() => { this.router.navigate(['/', 'route-management']); });\n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n    \n\n    \n        \n  {{ t('title-create') }}\n\n  \n\n  \n    \n      \n        {{ t('label-number') }}\n        \n        {{ t('error-number') }}\n      \n      \n        {{ t('label-name') }}\n        \n        {{ t('error-name') }}\n      \n      \n        {{ t('label-type') }}\n        \n          {{ TransportType[transport] }}\n        \n      \n      \n        {{ t('label-agency') }}\n        \n          {{ agency.agencyName }}\n        \n      \n      \n        {{ t('create-button') }}\n        {{ t('cancel') }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./route-create.component.css\n                \n                #route-data {\n  display: flex;\n}\n\n#form-fields {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  margin-right: 50px;\n}\n\nform{\n    display: flex;\n    justify-content: center;\n}\n\n#last-form{\n    padding: 0 0 15px 0;\n}\n\nmat-divider {\n  margin: 0 10px 20px 0;\n}\n\n\n.button {\n  width: 140px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n#form-buttons {\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title-create\\') }}                      {{ t(\\'label-number\\') }}                {{ t(\\'error-number\\') }}                    {{ t(\\'label-name\\') }}                {{ t(\\'error-name\\') }}                    {{ t(\\'label-type\\') }}                  {{ TransportType[transport] }}                            {{ t(\\'label-agency\\') }}                  {{ agency.agencyName }}                            {{ t(\\'create-button\\') }}        {{ t(\\'cancel\\') }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouteCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteDetailsComponent.html":{"url":"components/RouteDetailsComponent.html","title":"component - RouteDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RouteDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/route-details/route-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-details\n            \n\n            \n                styleUrls\n                ./route-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./route-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                directionsOptions\n                            \n                            \n                                directionsResults$\n                            \n                            \n                                mapOptions\n                            \n                            \n                                markerOptions\n                            \n                            \n                                markers\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                selectedTrip\n                            \n                            \n                                    Public\n                                tripsStopsMap\n                            \n                            \n                                    Public\n                                tripStops\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addMarkers\n                            \n                            \n                                    Private\n                                createWaypoints\n                            \n                            \n                                getTimeOfStopTimeList\n                            \n                            \n                                    Private\n                                linkMarkers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateMap\n                            \n                            \n                                updateStops\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(urlRoute: ActivatedRoute, routeService: RouteService, tripService: TripService, stopTimeService: StopTimeService, datePipe: DatePipe, mapDirectionsService: MapDirectionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/route-details/route-details.component.ts:86\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        urlRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gives information about the current route.\n\n                                                        \n                                                \n                                                \n                                                        routeService\n                                                  \n                                                        \n                                                                        RouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Routes.\n\n                                                        \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Trips.\n\n                                                        \n                                                \n                                                \n                                                        stopTimeService\n                                                  \n                                                        \n                                                                        StopTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about StopTimes.\n\n                                                        \n                                                \n                                                \n                                                        datePipe\n                                                  \n                                                        \n                                                                        DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Pipe to format dates.\n\n                                                        \n                                                \n                                                \n                                                        mapDirectionsService\n                                                  \n                                                        \n                                                                    MapDirectionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Google service of the Directions API.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:144\n                \n            \n\n\n            \n                \n                    Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createWaypoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWaypoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     google.maps.DirectionsWaypoint[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTimeOfStopTimeList\n                        \n                    \n                \n            \n            \n                \ngetTimeOfStopTimeList(stopTimes: StopTime[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stopTimes\n                                    \n                                            StopTime[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        linkMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    linkMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:159\n                \n            \n\n\n            \n                \n                    Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMap\n                        \n                    \n                \n            \n            \n                \nupdateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:136\n                \n            \n\n\n            \n                \n                    Updates the map in the page by adding/removing markers and linking them together in one route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStops\n                        \n                    \n                \n            \n            \n                \nupdateStops(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:54\n                        \n                    \n\n            \n                \n                    Coordinates for the map to be centered on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.DirectionsRendererOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:38\n                        \n                    \n\n            \n                \n                    Options to be used by the Directions-Renderer field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:62\n                        \n                    \n\n            \n                \n                    Holds the result from the call of the Directions API made from the list of markers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MapOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:27\n                        \n                    \n\n            \n                \n                    Options to be used by the Google-Map field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MarkerOptions\n\n                    \n                \n                \n                    \n                        Default value : { draggable: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:45\n                        \n                    \n\n            \n                \n                    Options to be used by the Map-Marker field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:58\n                        \n                    \n\n            \n                \n                    List of markers that represents the stops of the route to edit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:74\n                        \n                    \n\n            \n                \n                    Route whose details are viewed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedTrip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:78\n                        \n                    \n\n            \n                \n                    The trip the user has currently selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tripsStopsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:86\n                        \n                    \n\n            \n                \n                    A map with the all the trips of the route, with a list of their stop times.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tripStops\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StopTime[] | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:82\n                        \n                    \n\n            \n                \n                    The stops belonging to the current selected trip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:50\n                        \n                    \n\n            \n                \n                    Zoom level for the map to use at the start.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StopTime } from '../../models/stop-time';\nimport { Route } from '../../models/route';\nimport { RouteService } from '../../services/route.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport { Trip } from '../../models/trip';\nimport { TripService } from '../../services/trip.service';\nimport { DatePipe } from '@angular/common';\nimport { map, Observable } from 'rxjs';\nimport { MapDirectionsService } from '@angular/google-maps';\n\n@Component({\n  selector: 'app-route-details',\n  templateUrl: './route-details.component.html',\n  styleUrls: ['./route-details.component.css']\n})\n\n\n/**\n * Class for the component of the page of Route Details\n */\nexport class RouteDetailsComponent implements OnInit {\n  /**\n * Options to be used by the Google-Map field.\n */\n  mapOptions: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  };\n  /**\n   * Options to be used by the Directions-Renderer field.\n   */\n  directionsOptions: google.maps.DirectionsRendererOptions = {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field.\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n\n  /**\n   * Zoom level for the map to use at the start.\n   */\n  zoom = 15;\n  /**\n   * Coordinates for the map to be centered on.\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * List of markers that represents the stops of the route to edit.\n   */\n  markers: Array = new Array();\n  /**\n   * Holds the result from the call of the Directions API made from the list of markers.\n   */\n  directionsResults$!: Observable;\n\n  /**\n   * @ignore\n   */\n  helpMessage = `Informação detalhada de uma rota\n  Lista de paragens\n  Horário`;\n\n  /**\n   * Route whose details are viewed.\n   */\n  public route!: Route;\n  /**\n   * The trip the user has currently selected.\n   */\n  public selectedTrip!: Trip;\n  /**\n   * The stops belonging to the current selected trip.\n   */\n  public tripStops: StopTime[] | undefined;\n  /**\n   * A map with the all the trips of the route, with a list of their stop times.\n   */\n  public tripsStopsMap: Map = new Map();\n\n  /**\n   * Constructor for the component.\n   * @param {ActivatedRoute} urlRoute Gives information about the current route.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {TripService} tripService Service that communicates with the server and has various operations about Trips.\n   * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n   * @param {DatePipe} datePipe Pipe to format dates.\n   * @param {MapDirectionsService} mapDirectionsService Google service of the Directions API.\n   */\n  constructor(private urlRoute: ActivatedRoute, private routeService: RouteService,\n    private tripService: TripService, private stopTimeService: StopTimeService,\n    private datePipe: DatePipe, private mapDirectionsService: MapDirectionsService) { }\n\n  ngOnInit(): void {\n    const id = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.routeService.getRoute(id)\n      .subscribe((route) => {\n        this.stopTimeService.getStopsOfRoute(route.routeId).subscribe((stops) => {\n          this.route = new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, stops);\n        }, (error) => {\n          this.route = new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, []);\n        }, () => {\n          this.tripService.getTripsOfRoute(this.route.routeId).subscribe((trips) => {\n            trips.forEach((trip) => {\n              this.stopTimeService.getStopsOfTrip(trip.tripId).subscribe((stops) => {\n                this.tripsStopsMap.set(trip, stops);\n              });\n            });\n          });\n        });\n      });\n  }\n\n  updateStops(event: any) {\n    this.selectedTrip = event.value;\n    this.tripStops = this.tripsStopsMap.get(event.value);\n    this.updateMap();\n  }\n\n  getTimeOfStopTimeList(stopTimes: StopTime[]) {\n    return this.datePipe.transform(stopTimes[0].arrivalTime, 'HH:mm') + \" | \" + this.datePipe.transform(stopTimes[stopTimes.length - 1].arrivalTime, 'HH:mm');\n  }\n\n  /**\n   * Updates the map in the page by adding/removing markers and linking them together in one route.\n   */\n  updateMap() {\n    this.addMarkers();\n    this.linkMarkers();\n  }\n\n  /**\n   * Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n   */\n  private addMarkers() {\n    this.markers.splice(0);\n\n    this.tripStops!.forEach(stopTime => {\n      this.markers.push(new google.maps.LatLng(stopTime.stop.stopLat, stopTime.stop.stopLon));\n    });\n    this.center = {\n      lat: this.markers[Math.floor(this.markers.length / 2)].lat(),\n      lng: this.markers[Math.floor(this.markers.length / 2)].lng()\n    }\n  }\n\n  /**\n   * Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n   */\n  private linkMarkers() {\n    const request: google.maps.DirectionsRequest = {\n      origin: this.markers[0],\n      waypoints: this.createWaypoints(),\n      destination: this.markers[this.markers.length - 1],\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  private createWaypoints(): google.maps.DirectionsWaypoint[] {\n    var waypoints: google.maps.DirectionsWaypoint[] = [];\n    const MAX_WAYPOINTS: number = 25\n    var addWaypoint: boolean = true;\n    this.tripStops?.slice(1, this.tripStops.length - 1).forEach((stopTime) => {\n      if (waypoints.length \n    \n\n    \n        \n  {{ t('loading') }}\n  \n    \n      \n        {{ route.routeShortName }} - {{ route.routeLongName }}\n        {{ route.routeLongName }}\n        {{ t('edit') }}\n      \n      \n        info\n      \n    \n\n    \n\n    \n      \n        {{ t('trip') }}\n        \n          {{ entry.key.tripHeadsign }} - {{ getTimeOfStopTimeList(entry.value)}}\n        \n      \n      \n        {{ t('create-trip') }}\n        \n          {{ t('edit-trip') }}\n\n          {{ t('route-details') }}-->\n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            \n              \n                {{ t('route-stop') }}\n                {{ t('route-departure') }}\n              \n            \n            \n              \n                {{ stop.stop.stopName }} - {{ stop.stop.stopLat }}, {{ stop.stop.stopLon }}\n                {{ stop.arrivalTime | date: 'HH:mm'}}\n              \n            \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n          {{t('no-trips')}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./route-details.component.css\n                \n                #route-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#route-label {\n  overflow: hidden;\n  width: 80%;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n}\n\n#route-name {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\n#trip{\n    display: flex;\n    align-items: center;\n\n}\n\n.button {\n  width: 140px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n.title {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.info-icon {\n  height: 20px;\n  cursor: pointer;\n}\n\n#trip-selector {\n  width: 100%;\n  margin-top: 15px;\n}\n\n#trip-buttons{\n    display: flex;\n    gap: 10px;\n    padding: 0 0 0 15px;\n}\n\n#trip-details {\n  padding: 10px 0 0 0;\n  display: flex;\n  gap: 2%;\n}\n\n#trip-stops {\n  width: 63%;\n  max-height: 500px;\n  overflow: auto;\n}\n\ngoogle-map {\n  width: 35%;\n}\n\n#no-trips-label{\n    display: flex;\n    justify-content: center;\n    padding: 50px 0 0 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'loading\\') }}                    {{ route.routeShortName }} - {{ route.routeLongName }}        {{ route.routeLongName }}        {{ t(\\'edit\\') }}                    info                                {{ t(\\'trip\\') }}                  {{ entry.key.tripHeadsign }} - {{ getTimeOfStopTimeList(entry.value)}}                            {{ t(\\'create-trip\\') }}                  {{ t(\\'edit-trip\\') }}          {{ t(\\'route-details\\') }}-->                                                                                            {{ t(\\'route-stop\\') }}                {{ t(\\'route-departure\\') }}                                                                    {{ stop.stop.stopName }} - {{ stop.stop.stopLat }}, {{ stop.stop.stopLon }}                {{ stop.arrivalTime | date: \\'HH:mm\\'}}                                                                                                                        {{t(\\'no-trips\\')}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouteDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteEditComponent.html":{"url":"components/RouteEditComponent.html","title":"component - RouteEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RouteEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/route-edit/route-edit.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-edit\n            \n\n            \n                styleUrls\n                ./route-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./route-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                agencies\n                            \n                            \n                                editRouteForm\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                transports\n                            \n                            \n                                TransportType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(urlRoute: ActivatedRoute, routeService: RouteService, formBuilder: FormBuilder, router: Router, agencyService: AgencyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/route-edit/route-edit.component.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the route whose Id matches the one in the URL and passes its info to the form.\nAlso gets all the existent stops.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        urlRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        routeService\n                                                  \n                                                        \n                                                                        RouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Routes.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Builds form data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router.\n\n                                                        \n                                                \n                                                \n                                                        agencyService\n                                                  \n                                                        \n                                                                        AgencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Agencies.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-edit/route-edit.component.ts:94\n                \n            \n\n\n            \n                \n                    Cancels the creation of a new stop. Redirects back to the previous page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-edit/route-edit.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-edit/route-edit.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        agencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-edit/route-edit.component.ts:35\n                        \n                    \n\n            \n                \n                    List of all the existent agencies.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editRouteForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    number: ['', Validators.required],\n    name: ['', Validators.required],\n    transportType: this.formBuilder.control(null, Validators.required),\n    agency: this.formBuilder.control(null, Validators.required),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-edit/route-edit.component.ts:40\n                        \n                    \n\n            \n                \n                    Form data to be viewed in the page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-edit/route-edit.component.ts:50\n                        \n                    \n\n            \n                \n                    Route whose details are viewed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(TransportType).map(v => Number(v)).filter(v => Number.isFinite(v))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-edit/route-edit.component.ts:31\n                        \n                    \n\n            \n                \n                    All the values of the TransportType enum.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TransportType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransportType\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-edit/route-edit.component.ts:27\n                        \n                    \n\n            \n                \n                    TransportType for reverse mapping in the html.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { RouteService } from '../../services/route.service';\nimport { ActivatedRoute, convertToParamMap } from '@angular/router';\nimport { TransportType } from '../../enums/transport-type';\nimport { StopService } from '../../services/stop.service';\nimport { MapDirectionsService } from '@angular/google-maps';\nimport { Router } from '@angular/router';\nimport { Agency } from '../../models/agency';\nimport { AgencyService } from '../../services/agency.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TripService } from '../../services/trip.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport { Route } from '../../models/route';\n\n@Component({\n  selector: 'app-route-edit',\n  templateUrl: './route-edit.component.html',\n  styleUrls: ['./route-edit.component.css']\n})\n/**\n * Class for the component of the page of Route Editing.\n */\nexport class RouteEditComponent implements OnInit {\n  /**\n    * TransportType for reverse mapping in the html.\n    */\n  TransportType = TransportType;\n  /**\n   * All the values of the TransportType enum.\n   */\n  transports: number[] = Object.keys(TransportType).map(v => Number(v)).filter(v => Number.isFinite(v));\n  /**\n   * List of all the existent agencies.\n   */\n  public agencies!: Array;\n\n  /**\n   * Form data to be viewed in the page.\n   */\n  editRouteForm = this.formBuilder.group({\n    number: ['', Validators.required],\n    name: ['', Validators.required],\n    transportType: this.formBuilder.control(null, Validators.required),\n    agency: this.formBuilder.control(null, Validators.required),\n  });\n\n  /**\n * Route whose details are viewed.\n */\n  public route!: Route;\n\n\n  /**\n   * Constructor for the component.\n   * Gets the route whose Id matches the one in the URL and passes its info to the form.\n   * Also gets all the existent stops.\n   * @param {ActivatedRoute} actRoute Gives information about the current route.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {FormBuilder} formBuilder Builds form data.\n   * @param {Router} router Router.\n   * @param {AgencyService} agencyService Service that communicates with the server and has various operations about Agencies.\n   * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n   */\n  constructor(private urlRoute: ActivatedRoute, private routeService: RouteService, private formBuilder: FormBuilder, private router: Router, private agencyService: AgencyService) { }\n\n  ngOnInit(): void {\n    const id = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.routeService.getRoute(id)\n      .subscribe((route) => {\n        this.route = new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName, route.routeTransportType, route.agency);\n\n          this.editRouteForm.controls.number.patchValue(this.route.routeShortName);\n          this.editRouteForm.controls.name.patchValue(this.route.routeLongName);\n          this.editRouteForm.controls.transportType.patchValue(this.route.routeTransportType);\n          this.editRouteForm.controls.agency.patchValue(this.route.agencyId);\n\n      });\n    this.agencyService.getAgencies().subscribe((agencies) => { this.agencies = agencies; });\n  }\n\n  ///**\n  // * Creates a route object and sends it to the database using the routeService.\n  // */\n  onSubmit(): void {\n    let route: Route = new Route(this.route.routeId, this.editRouteForm.controls.agency.value!, this.editRouteForm.controls.number.value!, this.editRouteForm.controls.name.value!,\n      this.editRouteForm.controls.transportType.value!);\n    this.routeService.editRoute(route).subscribe();\n    this.router.navigate(['/', 'route-details', this.route.routeId]);\n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n    \n\n    \n        \n  {{ t('title-edit') }}\n\n  \n\n  \n    \n      \n        {{ t('label-number') }}\n        \n        {{ t('error-number') }}\n      \n      \n        {{ t('label-name') }}\n        \n        {{ t('error-name') }}\n      \n      \n        {{ t('label-type') }}\n        \n          {{ TransportType[transport] }}\n        \n      \n      \n        {{ t('label-agency') }}\n        \n          {{ agency.agencyName }}\n        \n      \n      \n        {{ t('update-button') }}\n        {{ t('cancel') }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./route-edit.component.css\n                \n                #route-data {\n  display: flex;\n}\n\n#form-fields {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  margin-right: 50px;\n}\n\nform {\n  display: flex;\n  justify-content: center;\n}\n\n#last-form {\n  padding: 0 0 15px 0;\n}\n\nmat-divider {\n  margin: 0 10px 20px 0;\n}\n\n\n.button {\n  width: 140px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n#form-buttons {\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title-edit\\') }}                      {{ t(\\'label-number\\') }}                {{ t(\\'error-number\\') }}                    {{ t(\\'label-name\\') }}                {{ t(\\'error-name\\') }}                    {{ t(\\'label-type\\') }}                  {{ TransportType[transport] }}                            {{ t(\\'label-agency\\') }}                  {{ agency.agencyName }}                            {{ t(\\'update-button\\') }}        {{ t(\\'cancel\\') }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouteEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteManagementComponent.html":{"url":"components/RouteManagementComponent.html","title":"component - RouteManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RouteManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/route-management/route-management.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-management\n            \n\n            \n                styleUrls\n                ./route-management.component.css\n            \n\n\n\n            \n                templateUrl\n                ./route-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                    Public\n                                routes\n                            \n                            \n                                selection\n                            \n                            \n                                TransportType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                deleteRoutes\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleAllRows\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(routeService: RouteService, stopTimeService: StopTimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/route-management/route-management.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the routes in the system and add them to the \"routes\" attribute.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        routeService\n                                                  \n                                                        \n                                                                        RouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Routes.\n\n                                                        \n                                                \n                                                \n                                                        stopTimeService\n                                                  \n                                                        \n                                                                        StopTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about StopTimes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-management/route-management.component.ts:111\n                \n            \n\n\n            \n                \n                    Aplies a filter to the list of existing routes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parameter to filter the list for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRoutes\n                        \n                    \n                \n            \n            \n                \ndeleteRoutes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-management/route-management.component.ts:76\n                \n            \n\n\n            \n                \n                    Deletes all the checked routes.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-management/route-management.component.ts:90\n                \n            \n\n\n            \n                \n                     Checks if the number of selected elements matches the total number of rows.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-management/route-management.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAllRows\n                        \n                    \n                \n            \n            \n                \ntoggleAllRows()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-management/route-management.component.ts:99\n                \n            \n\n\n            \n                \n                     Selects all rows if they are not all selected; otherwise clear selection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:33\n                        \n                    \n\n            \n                \n                    The data source used in the route management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['select', 'number', 'name', 'type', 'agency', 'duration', 'details']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:29\n                        \n                    \n\n            \n                \n                    The columns to be displayed in the route management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:25\n                        \n                    \n\n            \n                \n                    The paginator used in the route management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:45\n                        \n                    \n\n            \n                \n                    All the existent routes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:37\n                        \n                    \n\n            \n                \n                    Holds the routes selected via checkbox.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TransportType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransportType\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:41\n                        \n                    \n\n            \n                \n                    The enum for reverse mapping in the html.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Route } from '../../models/route';\nimport { RouteService } from '../../services/route.service';\nimport { TransportType } from '../../enums/transport-type'\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Agency } from '../../models/agency';\nimport { StopTime } from '../../models/stop-time';\nimport { TripService } from '../../services/trip.service';\nimport { StopTimeService } from '../../services/stop-time.service';\n\n@Component({\n  selector: 'app-route-management',\n  templateUrl: './route-management.component.html',\n  styleUrls: ['./route-management.component.css']\n})\n/**\n * Class for the component of the page of Route Management\n */\nexport class RouteManagementComponent implements OnInit {\n  /**\n   * The paginator used in the route management table.\n   */\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  /**\n   * The columns to be displayed in the route management table.\n   */\n  displayedColumns: string[] = ['select', 'number', 'name', 'type', 'agency', 'duration', 'details'];\n  /**\n   * The data source used in the route management table.\n   */\n  dataSource!: MatTableDataSource\n  /**\n   * Holds the routes selected via checkbox.\n   */\n  selection = new SelectionModel(true, []);\n  /**\n   * The enum for reverse mapping in the html.\n   */\n  TransportType = TransportType;\n  /**\n   * All the existent routes.\n   */\n  public routes: Route[] = [];\n\n  /**\n   * Constructor for the component.\n   * Gets the routes in the system and add them to the \"routes\" attribute.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n   */\n  constructor(private routeService: RouteService, private stopTimeService: StopTimeService) { }\n\n  ngOnInit(): void {\n    this.routeService.getRoutes().subscribe((rts) => {\n      rts.forEach((route) => {\n        this.stopTimeService.getStopsOfRoute(route.routeId).subscribe((stops) => {\n          this.routes.push(new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, stops));\n          this.dataSource = new MatTableDataSource(this.routes);\n          this.dataSource.paginator = this.paginator;\n        }, (error) => {\n          this.routes.push(new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, []));\n          this.dataSource = new MatTableDataSource(this.routes);\n          this.dataSource.paginator = this.paginator;\n        });\n      });\n    });\n  }\n  \n  /**\n   * Deletes all the checked routes.\n   */\n  deleteRoutes() {\n    this.selection.selected.forEach((route) => {\n      var routeToDeleteId = route.routeId;\n      this.routeService.deleteRoute(routeToDeleteId).subscribe(result => {\n        const index = this.routes.findIndex((route) => route.routeId == routeToDeleteId);\n        this.routes.splice(index, 1);\n        this.dataSource.data = this.routes;\n      });\n    });\n  }\n\n  /**\n   *  Checks if the number of selected elements matches the total number of rows.\n   */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /**\n   *  Selects all rows if they are not all selected; otherwise clear selection.\n   */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /**\n   * Aplies a filter to the list of existing routes.\n   * @param {Event} event The parameter to filter the list for.\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n\n    \n\n    \n        \n  {{ t('title') }}\n\n  \n    \n      \n      {{ t('create') }}\n    \n    \n      \n      {{ t('delete') }}\n    \n  \n  \n    {{t('filter')}}\n    \n  \n\n  \n    \n    \n      \n        \n        \n      \n      \n        \n        \n      \n    \n\n    \n    \n       {{ t('route-number') }} \n       {{ route.routeShortName }} \n    \n\n    \n    \n       {{ t('route-name') }} \n       {{ route.routeLongName }} \n    \n\n    \n    \n       {{ t('route-transport') }} \n       {{ TransportType[route.routeTransportType] }} \n    \n\n    \n    \n       {{ t('route-company') }} \n       {{ route.agency.agencyName }} \n    \n    \n    \n       {{ t('route-duration') }} \n       {{ route.routeDuration }} min\n    \n\n    \n    \n      \n      {{ t('route-details') }}\n    \n\n    \n    \n\n    \n    \n      No data matching the filter \"{{input.value}}\"\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./route-management.component.css\n                \n                #management-buttons {\n    display:flex;\n    gap: 20px;\n}\n\n.button-image {\n    margin-right: 10px;\n}\n\n.button-image.round {\n    width: 25px;\n    height: 25px;\n}\n\n.button-image.tall {\n    width: 20px;\n    height: 25px;\n}\n\n/deep/ .mat-tooltip {\n    font-size: 14px;\n}\n\ntable {\n  width: 100%;\n}\n\n#filter {\n    width: 100%;\n    margin-top: 15px;\n}\n\n.link {\n  color: dodgerblue;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n  /*change color of label*/\n  color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /*change color of underline*/\n  background-color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /*change color of underline when focused*/\n  background-color: #003F91 !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title\\') }}                  {{ t(\\'create\\') }}                    {{ t(\\'delete\\') }}            {{t(\\'filter\\')}}                                                                                           {{ t(\\'route-number\\') }}        {{ route.routeShortName }}                    {{ t(\\'route-name\\') }}        {{ route.routeLongName }}                    {{ t(\\'route-transport\\') }}        {{ TransportType[route.routeTransportType] }}                    {{ t(\\'route-company\\') }}        {{ route.agency.agencyName }}                    {{ t(\\'route-duration\\') }}        {{ route.routeDuration }} min                        {{ t(\\'route-details\\') }}                          No data matching the filter \"{{input.value}}\"        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouteManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouteService.html":{"url":"injectables/RouteService.html","title":"injectable - RouteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/route.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRoute\n                            \n                            \n                                deleteRoute\n                            \n                            \n                                editRoute\n                            \n                            \n                                getRoute\n                            \n                            \n                                getRoutes\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/route.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRoute\n                        \n                    \n                \n            \n            \n                \naddRoute(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:47\n                \n            \n\n\n            \n                \n                    Adds a route to the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        route to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The created route.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRoute\n                        \n                    \n                \n            \n            \n                \ndeleteRoute(routeId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:58\n                \n            \n\n\n            \n                \n                    Deletes a specific route from the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    routeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the route to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The deleted route\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editRoute\n                        \n                    \n                \n            \n            \n                \neditRoute(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:69\n                \n            \n\n\n            \n                \n                    Sends a route to the database to update.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The edited route\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoute\n                        \n                    \n                \n            \n            \n                \ngetRoute(routeId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets a specific route from the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    routeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id to search the route for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A route obtained from the database with a specific id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoutes\n                        \n                    \n                \n            \n            \n                \ngetRoutes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:25\n                \n            \n\n\n            \n                \n                    Gets all routes in the database.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A list of routes obtained from the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:80\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Route } from '../models/route';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n  /**\n   * Service that communicates with the server and has various operations about Routes.\n   */\nexport class RouteService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient,) { }\n\n  /**\n   * Gets all routes in the database.\n   * @returns A list of routes obtained from the database.\n   */\n  getRoutes(): Observable {\n    //return this.http.get('api/RoutesApi')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/RoutesApi')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Gets a specific route from the database.\n   * @param {string} routeId Id to search the route for.\n   * @returns A route obtained from the database with a specific id.\n   */\n  getRoute(routeId: string): Observable {\n    //return this.http.get(`api/RoutesApi/${routeId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/RoutesApi/${routeId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Adds a route to the database.\n   * @param {Route} route route to add.\n   * @returns The created route.\n   */\n  addRoute(route: Route): Observable {\n    //return this.http.post(`api/RoutesApi`, route)\n    return this.http.post(`https://traveller-server.azurewebsites.net/api/RoutesApi`, route)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Deletes a specific route from the database.\n   * @param {string} routeId Id of the route to delete.\n   * @returns The deleted route\n   */\n  deleteRoute(routeId: string): Observable {\n    //return this.http.delete(`api/RoutesApi/${routeId}`)\n    return this.http.delete(`https://traveller-server.azurewebsites.net/api/RoutesApi/${routeId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Sends a route to the database to update.\n   * @param {Route} route The route to update.\n   * @returns The edited route\n   */\n  editRoute(route: Route): Observable {\n    //return this.http.put(`api/RoutesApi/${route.routeId}`, route)\n    return this.http.put(`https://traveller-server.azurewebsites.net/api/RoutesApi/${route.routeId}`, route)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistics.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeUsersCount\n                            \n                            \n                                mostUsedTransport\n                            \n                            \n                                newUsers\n                            \n                            \n                                timeSpent\n                            \n                            \n                                totalUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(activeUsersCount: number, totalUsers: number, newUsers: number, mostUsedTransport: string, timeSpent: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistics.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeUsersCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalUsers\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newUsers\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mostUsedTransport\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeSpent\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeUsersCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostUsedTransport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeSpent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Statistics {\n\n  activeUsersCount: number;\n\n  totalUsers: number;\n\n  newUsers: number;\n\n  mostUsedTransport: string;\n\n  timeSpent: string;\n\n  constructor(activeUsersCount: number, totalUsers: number, newUsers: number, mostUsedTransport: string, timeSpent: string) {\n    this.activeUsersCount = activeUsersCount;\n    this.totalUsers = totalUsers;\n    this.newUsers = newUsers;\n    this.mostUsedTransport = mostUsedTransport;\n    this.timeSpent = timeSpent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/statistics/statistics.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-statistics\n            \n\n            \n                styleUrls\n                ./statistics.component.css\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                activeUsers\n                            \n                            \n                                change\n                            \n                            \n                                chart\n                            \n                            \n                                label\n                            \n                            \n                                labelSub\n                            \n                            \n                                mostActiveZones\n                            \n                            \n                                mostActiveZonesData\n                            \n                            \n                                mostActiveZonesKeys\n                            \n                            \n                                    Optional\n                                newUsers\n                            \n                            \n                                    Optional\n                                totalUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, statisticsService: StatisticsService, http: HttpClient, translation: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/statistics/statistics.component.ts:79\n                            \n                        \n\n                \n                    \n                            The constructor injects the HttpClient and TranslocoService modules to be used in the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        statisticsService\n                                                  \n                                                        \n                                                                        StatisticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                                \n                                                        translation\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/statistics/statistics.component.ts:105\n                \n            \n\n\n            \n                \n                    ngOnInit method is called when the component is initialized.\nIt retrieves the total and new users data from the API and creates the chart using Chart.js.\nIt also subscribes to the translated label and updates the chart accordingly.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        activeUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:34\n                        \n                    \n\n            \n                \n                    Variables to store the number of active users\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        change\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:79\n                        \n                    \n\n            \n                \n                    Variables responsible to change the number of mat-card elements to show\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:49\n                        \n                    \n\n            \n                \n                    The chart variable is used to store the chart object created using the Chart.js library\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:54\n                        \n                    \n\n            \n                \n                    The label variable is used to store the chart title label\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:59\n                        \n                    \n\n            \n                \n                    The labelSub variable is used to subscribe to the translated label and update the chart\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostActiveZones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:64\n                        \n                    \n\n            \n                \n                    Variables to store the most active zones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostActiveZonesData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:74\n                        \n                    \n\n            \n                \n                    Variables to store the most active zones data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostActiveZonesKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:69\n                        \n                    \n\n            \n                \n                    Variables to store the orginal keys of the most active zones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:44\n                        \n                    \n\n            \n                \n                    Variables to store the number of new users\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        totalUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:39\n                        \n                    \n\n            \n                \n                    Variables to store the number of total users\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, AfterViewInit, Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Chart, registerables } from 'chart.js';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { Subscription } from 'rxjs';\nimport { StatisticsService } from '../../services/statistics.service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\n\n/**\n * The component is marked as injectable to allow it to be used as a service\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * StatisticsComponent class is the main component that implements the OnInit interface\n */\n\nexport class StatisticsComponent implements OnInit {\n  /**\n   * Variables to store the number of active users\n   */\n  activeUsers?: number;\n\n  /**\n   * Variables to store the number of total users\n   */\n  totalUsers?: number;\n\n  /**\n   * Variables to store the number of new users\n   */\n  newUsers?: number;\n\n  /**\n  * The chart variable is used to store the chart object created using the Chart.js library\n  */\n  chart: any = [];\n\n  /**\n  * The label variable is used to store the chart title label\n  */\n  label: any;\n\n  /**\n  * The labelSub variable is used to subscribe to the translated label and update the chart\n  */\n  labelSub!: Subscription;\n\n  /**\n  * Variables to store the most active zones\n  */  \n  mostActiveZones: string[] = [];\n\n  /**\n  * Variables to store the orginal keys of the most active zones\n  */  \n  mostActiveZonesKeys: string[] = []; \n\n  /**\n  * Variables to store the most active zones data\n  */\n  mostActiveZonesData: number[] = []; \n\n  /**\n  * Variables responsible to change the number of mat-card elements to show\n  */\n  change: number = 1;\n\n  /**\n * The constructor injects the HttpClient and TranslocoService modules to be used in the component\n * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n * @param {TranslocoService} service TranslocoService object in order to change chart label language at runtime.\n */\n  constructor(private breakpointObserver: BreakpointObserver,private statisticsService: StatisticsService, private http: HttpClient, private translation: TranslocoService) {\n    Chart.register(...registerables);\n    this.breakpointObserver.observe([\n      Breakpoints.Small,\n      Breakpoints.XSmall,\n    ]).subscribe(result => {\n      if (result.matches)\n        this.change = 3;\n      else {\n        this.change = 1;\n      }\n    });\n  }\n\n  /**\n * ngOnInit method is called when the component is initialized.\n * It retrieves the total and new users data from the API and creates the chart using Chart.js.\n * It also subscribes to the translated label and updates the chart accordingly.\n */\n  ngOnInit(): void {\n\n    this.statisticsService.getActiveUsers().subscribe(data => {\n      this.activeUsers = data.activeUsersCount;\n    });\n\n    this.statisticsService.getTotalNumberOfUsers().subscribe(data => {\n      this.totalUsers = data.totalUsers;\n    });\n\n    this.statisticsService.getNumberOfNewUsers().subscribe(data => {\n      this.newUsers = data.newUsers;\n    });\n\n    this.statisticsService.getMostActiveZones().subscribe(data => {\n      this.mostActiveZonesKeys = Object.keys(data);\n      this.mostActiveZones = Object.keys(data).map(zone => this.translation.translate('statistics.list.' + zone));\n      this.mostActiveZonesData = Object.values(data);\n      if (this.chart.data.datasets[0].data.length !== this.mostActiveZonesData.length) {\n        this.chart.data.datasets[0].data = this.mostActiveZonesData;\n        this.chart.data.labels = this.mostActiveZones;\n        this.chart.update();\n      }\n      this.chart.update();\n    });\n\n    this.label = this.translation.selectTranslate('statistics.list.chart-title');\n    this.labelSub = this.translation.selectTranslate('statistics.list.chart-title').subscribe(\n      label => {\n        this.label = label;\n        this.chart.data.datasets[0].label = this.label;\n        this.chart.update();\n      }\n    );\n\n    this.translation.langChanges$.subscribe(() => {\n      this.mostActiveZones = this.mostActiveZonesKeys.map(zone => this.translation.translate('statistics.list.' + zone));\n      this.chart.data.labels = this.mostActiveZones;\n      this.chart.update();\n    });\n\n    const canvas = document.getElementById('myChart');\n    const ctx = canvas.getContext('2d');\n\n    if (ctx) {\n      this.chart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: this.mostActiveZones,\n          datasets: [\n            {\n              label: this.label,\n              data: this.mostActiveZonesData, \n              backgroundColor: [\n                'rgba(59, 226, 171, 1)',\n              ]\n            },\n          ],\n\n        },\n\n        options: {\n          plugins: { \n            legend: {\n              labels: {\n                color: \"white\"\n              }\n            }\n          },\n        },\n      });\n    }\n\n  }\n}\n\n    \n\n    \n        \n\n\n  {{ t('title') }}\n\n\n\n  \n    \n      \n        \n          \n            {{ t('active-users') }}\n            \n              help\n            \n          \n          \n            {{ activeUsers }}\n          \n        \n      \n    \n    \n      \n        \n          \n            {{ t('total-users') }}\n            \n              help\n            \n          \n          {{ totalUsers }}\n        \n      \n    \n    \n      \n        \n          \n            {{ t('new-users') }}\n            \n              help\n            \n          \n          {{ newUsers }}\n        \n      \n    \n  \n  \n    \n      {{chart}}\n      \n        \n          help\n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./statistics.component.css\n                \n                .mat-card {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n  background: #003F91;\n}\n\n.mat-grid-tile {\n  border-radius: 10px;\n  background: #003F91;\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n}\n\n.stats-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 100%;\n}\n\n.title {\n  color: #FAFAF9;\n  font-size: 2em;\n  align-self: flex-start;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.number {\n  color: #FAFAF9;\n  font-size: 5em;\n  position: absolute;\n  top: 30%;\n}\n\n.info-icon {\n  height: 20px;\n  cursor: pointer;\n}\n\n.info-message {\n  display: none;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  padding: 10px;\n  border-radius: 5px;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\n}\n\n.stats-container:hover .info-message {\n  display: block;\n}\n\n\n::ng-deep .mat-tooltip {\n  font-size: 0.9em;\n  border: 1px solid black;\n}\n\n.mat-card-chart {\n  color: #FAFAF9;\n  display: flex;\n  justify-content: center;\n}\n\n#myChart {\n  width: 100%;\n  height: 100% ;\n}\n\n/* Media queries for responsive design */\n@media (max-width: 1160px) {\n  .title {\n    font-size: 1.5em;\n  }\n\n  .number {\n    font-size: 4.5em;\n  }\n}\n\n@media only screen and (max-width: 960px) {\n  .title {\n    font-size: 2.5em;\n  }\n\n  .number {\n    font-size: 5em;\n  }\n}\n\n@media only screen and (max-width: 768px) {\n  .title {\n    font-size: 1.5em;\n  }\n\n  .number {\n    font-size: 4.5em;\n  }\n}\n\n@media only screen and (min-width: 515px) and (max-width: 767px) {\n  .title {\n    font-size: 2em;\n  }\n\n  .number {\n    font-size: 4.5em;\n  }\n}\n\n@media only screen and (min-width: 481px) and (max-width: 514px) {\n  .title {\n    font-size: 1.5em;\n  }\n\n  .number {\n    font-size: 4.5em;\n  }\n}\n\n\n@media only screen and (max-width: 480px) {\n  .title {\n    font-size: 1em;\n  }\n\n  .number {\n    font-size: 4.5em;\n  }\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title\\') }}                                          {{ t(\\'active-users\\') }}                          help                                            {{ activeUsers }}                                                                    {{ t(\\'total-users\\') }}                          help                                {{ totalUsers }}                                                          {{ t(\\'new-users\\') }}                          help                                {{ newUsers }}                                {{chart}}                        help                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   "},"injectables/StatisticsService.html":{"url":"injectables/StatisticsService.html","title":"injectable - StatisticsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatisticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/statistics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActiveUsers\n                            \n                            \n                                getMostActiveZones\n                            \n                            \n                                getNumberOfNewUsers\n                            \n                            \n                                getTotalNumberOfUsers\n                            \n                            \n                                getUserMostUsedTransport\n                            \n                            \n                                getUserTimeSpent\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/statistics.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveUsers\n                        \n                    \n                \n            \n            \n                \ngetActiveUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:31\n                \n            \n\n\n            \n                \n                    getActiveUsers method is used to get the total number of active users from the API\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMostActiveZones\n                        \n                    \n                \n            \n            \n                \ngetMostActiveZones()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:62\n                \n            \n\n\n            \n                \n                    getMostActiveZones method is used to get the most active zones from the API\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfNewUsers\n                        \n                    \n                \n            \n            \n                \ngetNumberOfNewUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:52\n                \n            \n\n\n            \n                \n                    getNumberOfNewUsers method is used to get the number of new users from the API\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalNumberOfUsers\n                        \n                    \n                \n            \n            \n                \ngetTotalNumberOfUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:42\n                \n            \n\n\n            \n                \n                    getTotalNumberOfUsers method is used to get the total number of users from the API\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserMostUsedTransport\n                        \n                    \n                \n            \n            \n                \ngetUserMostUsedTransport(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:72\n                \n            \n\n\n            \n                \n                    getUserMostUsedTransport method is used to get the most used transport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserTimeSpent\n                        \n                    \n                \n            \n            \n                \ngetUserTimeSpent(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:82\n                \n            \n\n\n            \n                \n                    getUserTimeSpent method is used to get the user time spent in transports\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:94\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Statistics } from '../models/statistics';\n\ninterface MostUsedTransportResponse {\n  mostUsedTransport: { transportType: string, totalCount: number }[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n/**\n* Service that communicates with the server and has various operations about statistics.\n*/\nexport class StatisticsService {\n\n  /**\n   * Constructor for the class.\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n  * getActiveUsers method is used to get the total number of active users from the API\n  */\n\n  getActiveUsers() {\n    //return this.http.get('api/StatisticsApi/GetActiveUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetActiveUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n\n  /**\n   * getTotalNumberOfUsers method is used to get the total number of users from the API\n   */\n\n  getTotalNumberOfUsers() {\n    //return this.http.get('api/StatisticsApi/GetTotalNumberOfUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTotalNumberOfUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getNumberOfNewUsers method is used to get the number of new users from the API\n  */\n\n  getNumberOfNewUsers() {\n    //return this.http.get('api/StatisticsApi/GetTotalOfNewUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTotalOfNewUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getMostActiveZones method is used to get the most active zones from the API\n  */\n\n  getMostActiveZones() {\n    //return this.http.get('api/StatisticsApi/GetMostActiveZones')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetMostActiveZones')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getUserMostUsedTransport method is used to get the most used transport\n  */\n\n  getUserMostUsedTransport(userId: string) {\n    //return this.http.get(`api/StatisticsApi/GetMostUsedTransport/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StatisticsApi/GetMostUsedTransport/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getUserTimeSpent method is used to get the user time spent in transports\n  */\n\n  getUserTimeSpent(userId: string) {\n    //return this.http.get(`api/StatisticsApi/GetTimeSpent/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTimeSpent/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stop.html":{"url":"classes/Stop.html","title":"class - Stop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/stop.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a Stop.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stopCode\n                            \n                            \n                                stopId\n                            \n                            \n                                stopLat\n                            \n                            \n                                stopLon\n                            \n                            \n                                stopName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stopId: string, stopCode: string, stopName: string, stopLat: number, stopLon: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/stop.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stopId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopLat\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopLon\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stopCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop.ts:13\n                        \n                    \n\n            \n                \n                    Short text or a number that identifies the stop for riders.\nThe stop_code may be the same as stop_id if it is public facing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop.ts:8\n                        \n                    \n\n            \n                \n                    Id of the stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopLat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop.ts:21\n                        \n                    \n\n            \n                \n                    Latitude of the stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopLon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop.ts:25\n                        \n                    \n\n            \n                \n                    Longitude of the stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop.ts:17\n                        \n                    \n\n            \n                \n                    Name of the stop.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Stop {\n  /**\n   * Id of the stop.\n   */\n  stopId: string;\n  /**\n   * Short text or a number that identifies the stop for riders.\n   * The stop_code may be the same as stop_id if it is public facing.\n   */\n  stopCode: string;\n  /**\n   * Name of the stop.\n   */\n  stopName: string;\n  /**\n   * Latitude of the stop.\n   */\n  stopLat: number;\n  /**\n   * Longitude of the stop.\n   */\n  stopLon: number;\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(stopId: string, stopCode: string, stopName: string, stopLat: number, stopLon: number) {\n    this.stopId = stopId;\n    this.stopCode = stopCode;\n    this.stopName = stopName;\n    this.stopLat = stopLat;\n    this.stopLon = stopLon;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopCreateComponent.html":{"url":"components/StopCreateComponent.html","title":"component - StopCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StopCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/stop-create/stop-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stop-create\n            \n\n            \n                styleUrls\n                ./stop-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stop-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                createStopForm\n                            \n                            \n                                markerOptions\n                            \n                            \n                                markerPos\n                            \n                            \n                                options\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStopMarkerInMap\n                            \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(stopService: StopService, formBuilder: FormBuilder, translocoService: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/stop-create/stop-create.component.ts:55\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Stops.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Builds form data.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that perform the translation of the text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStopMarkerInMap\n                        \n                    \n                \n            \n            \n                \naddStopMarkerInMap(event: google.maps.MapMouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stop-create/stop-create.component.ts:78\n                \n            \n\n\n            \n                \n                    Adds a map marker to the map and puts its coordinates in the creation form.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            google.maps.MapMouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event that contains the coordinates of where the user clicked.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stop-create/stop-create.component.ts:127\n                \n            \n\n\n            \n                \n                    Cancels the creation of a new stop. Redirects back to the previous page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stop-create/stop-create.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stop-create/stop-create.component.ts:90\n                \n            \n\n\n            \n                \n                    Creates a Location object, then sends it to the database using the locationService.\nAfter this using the locationId of this object, creates a Stop object and using the stopService sends it to the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:41\n                        \n                    \n\n            \n                \n                    Coordinates for the map to be centered on\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createStopForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    code: ['', Validators.required],\n    name: ['', Validators.required],\n    latitude: this.formBuilder.control(null, Validators.required),\n    longitude: this.formBuilder.control(null, Validators.required)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:50\n                        \n                    \n\n            \n                \n                    Form data to be viewed in the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MarkerOptions\n\n                    \n                \n                \n                    \n                        Default value : { draggable: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:32\n                        \n                    \n\n            \n                \n                    Options to be used by the Map-Marker field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.LatLngLiteral | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:45\n                        \n                    \n\n            \n                \n                    Coordinates of the stop marker\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MapOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:22\n                        \n                    \n\n            \n                \n                    Options to be used by the Google-Map field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 13\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:37\n                        \n                    \n\n            \n                \n                    Zoom level for the map to use at the start\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { TranslocoService } from '@ngneat/transloco';\nimport Snackbar from 'awesome-snackbar';\nimport { Guid } from 'guid-typescript';\nimport { Stop } from '../../models/stop';\nimport { StopService } from '../../services/stop.service';\n\n@Component({\n  selector: 'app-stop-create',\n  templateUrl: './stop-create.component.html',\n  styleUrls: ['./stop-create.component.css']\n})\n\n/**\n * Class for the component of the page for creating Stops\n */\nexport class StopCreateComponent implements OnInit {\n  /**\n   * Options to be used by the Google-Map field\n   */\n  options: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n\n  /**\n   * Zoom level for the map to use at the start\n   */\n  zoom = 13;\n  /**\n   * Coordinates for the map to be centered on\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * Coordinates of the stop marker\n   */\n  markerPos!: google.maps.LatLngLiteral | undefined;\n\n  /**\n   * Form data to be viewed in the page\n   */\n  createStopForm = this.formBuilder.group({\n    code: ['', Validators.required],\n    name: ['', Validators.required],\n    latitude: this.formBuilder.control(null, Validators.required),\n    longitude: this.formBuilder.control(null, Validators.required)\n  });\n\n  /**\n   * Constructor for the component.\n   * @param {StopService} stopService Service that communicates with the server and has various operations about Stops.\n   * @param {FormBuilder} formBuilder Builds form data.\n   * @param {TranslocoService} translocoService Service that perform the translation of the text.\n   */\n  constructor(private stopService: StopService, private formBuilder: FormBuilder, private translocoService: TranslocoService) { }\n\n  ngOnInit(): void {\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      };\n    });\n  }\n\n  /**\n   * Adds a map marker to the map and puts its coordinates in the creation form.\n   * @param {google.maps.MapMouseEvent} event Event that contains the coordinates of where the user clicked.\n   */\n  addStopMarkerInMap(event: google.maps.MapMouseEvent) {\n    this.markerPos = event.latLng?.toJSON();\n    if (event.latLng?.lat() && event.latLng?.lng()) {\n      this.createStopForm.controls.latitude.patchValue(event.latLng.lat());\n      this.createStopForm.controls.longitude.patchValue(event.latLng.lng());\n    }\n  }\n\n  /**\n   * Creates a Location object, then sends it to the database using the locationService.\n   * After this using the locationId of this object, creates a Stop object and using the stopService sends it to the database.\n   */\n  onSubmit(): void {\n    let stopCode = this.createStopForm.controls.code.value!;\n    let stopName = this.createStopForm.controls.name.value!;\n    let stopLat = this.createStopForm.controls.latitude.value!;\n    let stopLon = this.createStopForm.controls.longitude.value!;\n\n    if (stopCode && stopName && stopLat && stopLon) {\n\n      let stop: Stop = new Stop(Guid.create().toString(), stopCode, stopName, stopLat, stopLon);\n      this.stopService.addStop(stop).subscribe();\n      new Snackbar(this.translocoService.translate('route-management.add-stop.success-message'), {\n        position: 'bottom-center',\n        actionText: this.translocoService.translate('login.list.hide'),\n        style: {\n          container: [\n            ['background-color', '#003F91']\n          ]\n        }\n      });\n      window.history.back();\n    }\n    else {\n      new Snackbar(this.translocoService.translate('route-management.add-stop.error-message'), {\n        position: 'bottom-center',\n        actionText: this.translocoService.translate('login.list.hide'),\n        style: {\n          container: [\n            ['background-color', '#003F91']\n          ]\n        }\n      });\n    }\n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n\n    \n\n    \n        \n  {{ t('title') }}\n\n  \n    \n      \n        \n          {{ t('label-code') }}\n          \n          {{ t('error-code') }}\n        \n        \n          {{ t('label-name') }}\n          \n          {{ t('error-name') }}\n        \n        \n          {{ t('label-latitude') }}\n          \n          {{ t('error-latitude') }}\n        \n        \n          {{ t('label-longitude') }}\n          \n          {{ t('error-longitude') }}\n        \n        \n          {{ t('submit') }}\n          {{ t('cancel') }}\n        \n      \n      \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./stop-create.component.css\n                \n                form{\n    margin-top: 20px;\n}\n\ngoogle-map {\n  width: 730px;\n}\n\n#full-form{\n    display: flex;\n}\n\n#form-fields {\n    width: 40%;\n    display: flex;\n    flex-flow: column;\n    margin-right: 50px;\n}\n\nmat-form-field{\n    margin-bottom: 30px;\n}\n\n#form-buttons{\n    display: flex;\n    justify-content: space-evenly;\n}\n\n.button {\n  width: 120px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title\\') }}                              {{ t(\\'label-code\\') }}                    {{ t(\\'error-code\\') }}                          {{ t(\\'label-name\\') }}                    {{ t(\\'error-name\\') }}                          {{ t(\\'label-latitude\\') }}                    {{ t(\\'error-latitude\\') }}                          {{ t(\\'label-longitude\\') }}                    {{ t(\\'error-longitude\\') }}                          {{ t(\\'submit\\') }}          {{ t(\\'cancel\\') }}                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StopCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StopService.html":{"url":"injectables/StopService.html","title":"injectable - StopService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stop.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStop\n                            \n                            \n                                getStops\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stop.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStop\n                        \n                    \n                \n            \n            \n                \naddStop(stop: Stop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop.service.ts:36\n                \n            \n\n\n            \n                \n                    Adds a stop to the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stop\n                                    \n                                                Stop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Stop to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The created route.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStops\n                        \n                    \n                \n            \n            \n                \ngetStops()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop.service.ts:25\n                \n            \n\n\n            \n                \n                    Gets all the existent stops.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A list of all the stops in the system.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop.service.ts:47\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Stop } from '../models/stop';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n  /**\n   * Service that communicates with the server and has various operations about Stops.\n   */\nexport class StopService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient,) { }\n\n  /**\n   * Gets all the existent stops.\n   * @returns A list of all the stops in the system.\n   */\n  getStops(): Observable {\n    //return this.http.get('api/StopsApi')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StopsApi')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Adds a stop to the database.\n   * @param {Stop} stop Stop to add.\n   * @returns The created route.\n   */\n  addStop(stop: Stop): Observable {\n    //return this.http.post(`api/StopsApi`, stop)\n    return this.http.post(`https://traveller-server.azurewebsites.net/api/StopsApi`, stop)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StopTime.html":{"url":"classes/StopTime.html","title":"class - StopTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StopTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/stop-time.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a StopTime.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrivalTime\n                            \n                            \n                                departureTime\n                            \n                            \n                                shapeDistTraveled\n                            \n                            \n                                stop\n                            \n                            \n                                stopId\n                            \n                            \n                                stopSequence\n                            \n                            \n                                trip\n                            \n                            \n                                tripId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHoursAndMinutesString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tripId: string, arrivalTime: Date, departureTime: Date, stopId: string, stopSequence: number, shapeDistTraveled: number, trip?: Trip, stop?: Stop)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/stop-time.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tripId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        arrivalTime\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        departureTime\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopSequence\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shapeDistTraveled\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trip\n                                                  \n                                                        \n                                                                        Trip\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        stop\n                                                  \n                                                        \n                                                                        Stop\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        arrivalTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:19\n                        \n                    \n\n            \n                \n                    Arrival time at the stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departureTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:23\n                        \n                    \n\n            \n                \n                    Departure time from the stop\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shapeDistTraveled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:39\n                        \n                    \n\n            \n                \n                    Actual distance traveled along the associated shape, from the first stop to the stop specified in this record.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stop\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:31\n                        \n                    \n\n            \n                \n                    The stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:27\n                        \n                    \n\n            \n                \n                    Id of the stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopSequence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:35\n                        \n                    \n\n            \n                \n                    Order of the stop in the stopTime.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:15\n                        \n                    \n\n            \n                \n                    The trip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:11\n                        \n                    \n\n            \n                \n                    Id of the Trip.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHoursAndMinutesString\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHoursAndMinutesString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/stop-time.ts:61\n                \n            \n\n\n            \n                \n                    Function used to get the hours and minutes from the time variable and put it on a string.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Stop } from \"./stop\";\nimport { Trip } from \"./trip\";\n\n/**\n * Class that represents a StopTime.\n */\nexport class StopTime {\n  /**\n   * Id of the Trip.\n   */\n  tripId: string;\n  /**\n   * The trip.\n   */\n  trip!: Trip;\n  /**\n   * Arrival time at the stop.\n   */\n  arrivalTime: Date;\n  /**\n   * Departure time from the stop\n   */\n  departureTime: Date;\n  /**\n   * Id of the stop.\n   */\n  stopId: string;\n  /**\n   * The stop.\n   */\n  stop!: Stop;\n  /**\n   * Order of the stop in the stopTime.\n   */\n  stopSequence: number;\n  /**\n   * Actual distance traveled along the associated shape, from the first stop to the stop specified in this record.\n   */\n  shapeDistTraveled: number;\n\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(tripId: string, arrivalTime: Date, departureTime: Date,\n    stopId: string, stopSequence: number, shapeDistTraveled: number, trip?: Trip, stop?: Stop) {\n    this.tripId = tripId;\n    this.arrivalTime = new Date(arrivalTime);\n    this.departureTime = new Date(departureTime);\n    this.stopId = stopId;\n    this.stopSequence = stopSequence;\n    this.shapeDistTraveled = shapeDistTraveled;\n\n    if (trip) this.trip = trip;\n    if (stop) this.stop = stop;\n  }\n\n  /**\n   * Function used to get the hours and minutes from the time variable and put it on a string.\n   * */\n  public getHoursAndMinutesString() {\n    return String(this.departureTime.getHours()).padStart(2, '0') + \":\" + String(this.departureTime.getMinutes()).padStart(2, '0');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StopTimeService.html":{"url":"injectables/StopTimeService.html","title":"injectable - StopTimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StopTimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stop-time.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStopTime\n                            \n                            \n                                deleteStopTime\n                            \n                            \n                                editStopTime\n                            \n                            \n                                getStopsOfRoute\n                            \n                            \n                                getStopsOfTrip\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stop-time.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStopTime\n                        \n                    \n                \n            \n            \n                \naddStopTime(stopTime: StopTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:46\n                \n            \n\n\n            \n                \n                    Adds a StopTime to the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stopTime\n                                    \n                                                StopTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LinkedStop to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The created LinkedStop\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteStopTime\n                        \n                    \n                \n            \n            \n                \ndeleteStopTime(tripId: string, sequence: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:68\n                \n            \n\n\n            \n                \n                    Edits a StopTime in the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sequence\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The created LinkedStop\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editStopTime\n                        \n                    \n                \n            \n            \n                \neditStopTime(tripId: string, sequence: number, stopTime: StopTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:57\n                \n            \n\n\n            \n                \n                    Edits a StopTime in the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    sequence\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    stopTime\n                                    \n                                                StopTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LinkedStop to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The created LinkedStop\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStopsOfRoute\n                        \n                    \n                \n            \n            \n                \ngetStopsOfRoute(routeId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:25\n                \n            \n\n\n            \n                \n                    Method to get the all the available stops of a route.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStopsOfTrip\n                        \n                    \n                \n            \n            \n                \ngetStopsOfTrip(tripId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:35\n                \n            \n\n\n            \n                \n                    Method to get the stops of a specific trip from a route.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:79\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { StopTime } from '../models/stop-time';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Service that communicates with the server and has various operations about StopTimes.\n */\nexport class StopTimeService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient,) { }\n\n  /**\n   * Method to get the all the available stops of a route.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  getStopsOfRoute(routeId: string): Observable {\n    //return this.http.get(`api/RoutesApi/StopTimes/${routeId}`).pipe(catchError(this.handleError));\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StopTimesApi/Route/${routeId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Method to get the stops of a specific trip from a route.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  getStopsOfTrip(tripId: string): Observable {\n    //return this.http.get(`api/RoutesApi/StopTimes/${routeId}`).pipe(catchError(this.handleError));\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StopTimesApi/Trip/${tripId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Adds a StopTime to the database.\n   * @param {StopTime} stopTime LinkedStop to add.\n   * @returns The created LinkedStop\n   */\n  addStopTime(stopTime: StopTime): Observable {\n    //return this.http.post(`api/StopTimesApi`, stopTime)\n    return this.http.post(`https://traveller-server.azurewebsites.net/api/StopTimesApi`, stopTime)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Edits a StopTime in the database.\n   * @param {StopTime} stopTime LinkedStop to add.\n   * @returns The created LinkedStop\n   */\n  editStopTime(tripId: string, sequence: number, stopTime: StopTime): Observable {\n    //return this.http.put(`api/StopTimesApi/${stopTime.id}`, stopTime)\n    return this.http.put(`https://traveller-server.azurewebsites.net/api/StopTimesApi/${tripId}/${sequence}`, stopTime)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Edits a StopTime in the database.\n   * @param {StopTime} stopTime LinkedStop to add.\n   * @returns The created LinkedStop\n   */\n  deleteStopTime(tripId: string, sequence: number): Observable {\n    //return this.http.delete(`api/StopTimesApi/${stopTimeId}`)\n    return this.http.delete(`https://traveller-server.azurewebsites.net/api/StopTimesApi/${tripId}/${sequence}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Suspension.html":{"url":"classes/Suspension.html","title":"class - Suspension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Suspension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/suspension.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a Suspension.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                permanent\n                            \n                            \n                                reason\n                            \n                            \n                                startDate\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, userId: string, startDate: Date, endDate: Date, reason: string, permanent: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/suspension.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reason\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permanent\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:20\n                        \n                    \n\n            \n                \n                    Date of the end of the suspension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:8\n                        \n                    \n\n            \n                \n                    Id of the suspension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permanent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:28\n                        \n                    \n\n            \n                \n                    Whether the suspension is permanent.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:24\n                        \n                    \n\n            \n                \n                    Reason for the suspension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:16\n                        \n                    \n\n            \n                \n                    Date of the start of the suspension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:12\n                        \n                    \n\n            \n                \n                    Id of the user of the suspension.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Suspension {\n  /**\n   * Id of the suspension.\n   */\n  id: string;\n  /**\n   * Id of the user of the suspension.\n   */\n  userId: string;\n  /**\n   * Date of the start of the suspension.\n   */\n  startDate: Date;\n  /**\n   * Date of the end of the suspension.\n   */\n  endDate: Date;\n  /**\n   * Reason for the suspension.\n   */\n  reason: string;\n  /**\n   * Whether the suspension is permanent.\n   */\n  permanent: boolean;\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(id: string, userId: string, startDate: Date, endDate: Date, reason: string, permanent: boolean) {\n    this.id = id;\n    this.userId = userId;\n    this.startDate = startDate;\n    this.endDate = endDate;\n    this.reason = reason;\n    this.permanent = permanent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuspensionService.html":{"url":"injectables/SuspensionService.html","title":"injectable - SuspensionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuspensionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/suspension.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSuspensionsOfUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                suspendUser\n                            \n                            \n                                unbanUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/suspension.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSuspensionsOfUser\n                        \n                    \n                \n            \n            \n                \ngetSuspensionsOfUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/suspension.service.ts:27\n                \n            \n\n\n            \n                \n                    Gets all the suspensions of a specific user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the user to search for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A list of suspensions of a user obtained from the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/suspension.service.ts:65\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suspendUser\n                        \n                    \n                \n            \n            \n                \nsuspendUser(userId: string, startDate: Date, endDate: Date, reason: string, permanent: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/suspension.service.ts:41\n                \n            \n\n\n            \n                \n                    Suspends a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the user to suspend.\n\n                                    \n                                \n                                \n                                    startDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date to start the suspension.\n\n                                    \n                                \n                                \n                                    endDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date to end the suspension.\n\n                                    \n                                \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Reason for the suspension.\n\n                                    \n                                \n                                \n                                    permanent\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether suspension is permanent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unbanUser\n                        \n                    \n                \n            \n            \n                \nunbanUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/suspension.service.ts:54\n                \n            \n\n\n            \n                \n                    Function used to unban.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the user to unban.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Suspension } from '../models/suspension';\nimport { Guid } from 'guid-typescript';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n  /**\n   * Service that communicates with the server and has various operations about Suspensions.\n   */\nexport class SuspensionService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Gets all the suspensions of a specific user.\n   * @param {string} userId Id of the user to search for.\n   * @returns A list of suspensions of a user obtained from the database.\n   */\n  getSuspensionsOfUser(userId: string): Observable {\n    //return this.http.get(`api/UserSuspensionsApi/user/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/UserSuspensionsApi/user/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Suspends a user.\n   * @param {string} userId Id of the user to suspend.\n   * @param {Date} startDate Date to start the suspension.\n   * @param {Date} endDate Date to end the suspension.\n   * @param {string} reason Reason for the suspension.\n   * @param {boolean} permanent Whether suspension is permanent.\n   */\n  suspendUser(userId: string, startDate: Date, endDate: Date, reason: string, permanent: boolean) {\n    if (reason == \"\") {\n      reason = \"No reason provided.\";\n    }\n    //return this.http.post(`api/UserSuspensionsApi`, new Suspension(Guid.create().toString(), userId, startDate, endDate, reason, permanent))\n    return this.http.post(`https://traveller-server.azurewebsites.net/api/UserSuspensionsApi`, new Suspension(Guid.create().toString(), userId, startDate, endDate, reason, permanent))\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Function used to unban.\n   * @param userId Id of the user to unban.\n   */\n  unbanUser(userId: string) {\n    //return this.http.get(`api/UserSuspensionsApi/unban/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/UserSuspensionsApi/unban/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslocoHttpLoader.html":{"url":"injectables/TranslocoHttpLoader.html","title":"injectable - TranslocoHttpLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TranslocoHttpLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/transloco-root.module.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/transloco-root.module.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/transloco-root.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, isDevMode, NgModule } from '@angular/core';\n\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get(`/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en', 'pt'],\n        defaultLang: 'en',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: !isDevMode(),\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslocoRootModule.html":{"url":"modules/TranslocoRootModule.html","title":"module - TranslocoRootModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslocoRootModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transloco-root.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, isDevMode, NgModule } from '@angular/core';\n\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get(`/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en', 'pt'],\n        defaultLang: 'en',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: !isDevMode(),\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Trip.html":{"url":"classes/Trip.html","title":"class - Trip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Trip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/trip.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a Trip.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                direction\n                            \n                            \n                                route\n                            \n                            \n                                routeId\n                            \n                            \n                                serviceId\n                            \n                            \n                                shapeId\n                            \n                            \n                                tripHeadsign\n                            \n                            \n                                tripId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tripId: string, tripHeadsign: string, routeId: string, serviceId: string, direction: TravelDirection, shapeId: string, route?: Route)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/trip.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tripId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tripHeadsign\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        direction\n                                                  \n                                                        \n                                                                        TravelDirection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shapeId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Route\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TravelDirection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:31\n                        \n                    \n\n            \n                \n                    The direction of the trip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:23\n                        \n                    \n\n            \n                \n                    The route.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:19\n                        \n                    \n\n            \n                \n                    Id of the route.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:27\n                        \n                    \n\n            \n                \n                    Id of the service.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shapeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:35\n                        \n                    \n\n            \n                \n                    Id of the shape.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripHeadsign\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:15\n                        \n                    \n\n            \n                \n                    The text normally displayed on a transport about the route, usually its name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:11\n                        \n                    \n\n            \n                \n                    Id of the trip.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TravelDirection } from \"../enums/travel-direction\";\nimport { Route } from \"./route\";\n\n/**\n * Class that represents a Trip.\n */\nexport class Trip {\n  /**\n   * Id of the trip.\n   */\n  tripId: string;\n  /**\n   * The text normally displayed on a transport about the route, usually its name.\n   */\n  tripHeadsign: string;\n  /**\n   * Id of the route.\n   */\n  routeId: string;\n  /**\n   * The route.\n   */\n  route!: Route;\n  /**\n   * Id of the service.\n   */\n  serviceId: string;\n  /**\n   * The direction of the trip.\n   */\n  direction: TravelDirection;\n  /**\n   * Id of the shape.\n   */\n  shapeId: string;\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(tripId: string, tripHeadsign: string, routeId: string,\n    serviceId: string, direction: TravelDirection, shapeId: string);\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(tripId: string, tripHeadsign: string, routeId: string,\n    serviceId: string, direction: TravelDirection, shapeId: string, route?: Route) {\n    this.tripId = tripId;\n    this.tripHeadsign = tripHeadsign;\n    this.routeId = routeId;\n    this.serviceId = serviceId;\n    this.direction = direction;\n    this.shapeId = shapeId;\n\n    if (route) this.route = route;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripCreateComponent.html":{"url":"components/TripCreateComponent.html","title":"component - TripCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TripCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trip-create/trip-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trip-create\n            \n\n            \n                styleUrls\n                ./trip-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./trip-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AllStops\n                            \n                            \n                                AllTrips\n                            \n                            \n                                center\n                            \n                            \n                                createRouteForm\n                            \n                            \n                                directions\n                            \n                            \n                                directionsOptions\n                            \n                            \n                                directionsResults$\n                            \n                            \n                                mapOptions\n                            \n                            \n                                markerOptions\n                            \n                            \n                                markers\n                            \n                            \n                                route\n                            \n                            \n                                routeId\n                            \n                            \n                                toFormGroup\n                            \n                            \n                                TravelDirection\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addMarkers\n                            \n                            \n                                addStop\n                            \n                            \n                                cancel\n                            \n                            \n                                    Private\n                                linkMarkers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeStop\n                            \n                            \n                                updateMap\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stops\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(urlRoute: ActivatedRoute, routeService: RouteService, stopService: StopService, formBuilder: FormBuilder, mapDirectionsService: MapDirectionsService, tripService: TripService, router: Router, stopTimeService: StopTimeService, translocoService: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trip-create/trip-create.component.ts:100\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the route whose Id matches the one in the URL and passes its info to the form.\nAlso gets all the existent stops.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        urlRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        routeService\n                                                  \n                                                        \n                                                                        RouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Routes.\n\n                                                        \n                                                \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Stops.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Builds form data.\n\n                                                        \n                                                \n                                                \n                                                        mapDirectionsService\n                                                  \n                                                        \n                                                                    MapDirectionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Google service of the Directions API.\n\n                                                        \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Trips.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router.\n\n                                                        \n                                                \n                                                \n                                                        stopTimeService\n                                                  \n                                                        \n                                                                        StopTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about StopTimes.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that perform the translation of the text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:187\n                \n            \n\n\n            \n                \n                    Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addStop\n                        \n                    \n                \n            \n            \n                \naddStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:146\n                \n            \n\n\n            \n                \n                    Adds a form to the page that lets the user select the details for a stop in the route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:270\n                \n            \n\n\n            \n                \n                    Cancels the creation of a new stop. Redirects back to the previous page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        linkMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    linkMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:205\n                \n            \n\n\n            \n                \n                    Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:217\n                \n            \n\n\n            \n                \n                    Creates a trip object and sends it to the database using the tripService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeStop\n                        \n                    \n                \n            \n            \n                \nremoveStop(stopIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:159\n                \n            \n\n\n            \n                \n                    Removes the form of one of the route stops.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stopIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The form index to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMap\n                        \n                    \n                \n            \n            \n                \nupdateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:179\n                \n            \n\n\n            \n                \n                    Updates the map in the page by adding/removing markers and linking them together in one route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AllStops\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stop[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:82\n                        \n                    \n\n            \n                \n                    All the existent stops.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllTrips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:87\n                        \n                    \n\n            \n                \n                    All the existent trips.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:57\n                        \n                    \n\n            \n                \n                    Coordinates for the map to be centered on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRouteForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:96\n                        \n                    \n\n            \n                \n                    Form data to be viewed in the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:91\n                        \n                    \n\n            \n                \n                    All the values of the TransportType enum.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.DirectionsRendererOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:42\n                        \n                    \n\n            \n                \n                    Options to be used by the Directions-Renderer field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:65\n                        \n                    \n\n            \n                \n                    Holds the result from the call of the Directions API made from the list of markers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MapOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:31\n                        \n                    \n\n            \n                \n                    Options to be used by the Google-Map field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MarkerOptions\n\n                    \n                \n                \n                    \n                        Default value : { draggable: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:49\n                        \n                    \n\n            \n                \n                    Options to be used by the Map-Marker field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:61\n                        \n                    \n\n            \n                \n                    List of markers that represents the stops of the route to edit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:74\n                        \n                    \n\n            \n                \n                    Route to edit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:70\n                        \n                    \n\n            \n                \n                    Id of the route.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:174\n                        \n                    \n\n            \n                \n                    Casts a AbstractControl form to a FormGroup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TravelDirection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TravelDirection\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:78\n                        \n                    \n\n            \n                \n                    TransportType for reverse mapping in the html.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 11\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:53\n                        \n                    \n\n            \n                \n                    Zoom level for the map to use at the start.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stops\n                    \n                \n\n                \n                    \n                        getstops()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/trip-create/trip-create.component.ts:167\n                                \n                            \n                    \n                        \n                                Gets all the stop forms in the page.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouteService } from '../../services/route.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route } from '../../models/route';\nimport { Stop } from '../../models/stop';\nimport { StopService } from '../../services/stop.service';\nimport { StopTime } from \"../../models/stop-time\";\nimport { Guid } from 'guid-typescript';\nimport { map, Observable } from 'rxjs';\nimport { MapDirectionsService } from '@angular/google-maps';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TravelDirection } from '../../enums/travel-direction';\nimport { Trip } from '../../models/trip';\nimport { TripService } from '../../services/trip.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport Snackbar from 'awesome-snackbar';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-trip-create',\n  templateUrl: './trip-create.component.html',\n  styleUrls: ['./trip-create.component.css']\n})\n/**\n * Class for the component of the page of Route Editing\n */\nexport class TripCreateComponent implements OnInit {\n  /**\n   * Options to be used by the Google-Map field.\n   */\n  mapOptions: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  };\n  /**\n   * Options to be used by the Directions-Renderer field.\n   */\n  directionsOptions: google.maps.DirectionsRendererOptions = {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field.\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n  /**\n   * Zoom level for the map to use at the start.\n   */\n  zoom = 11;\n  /**\n   * Coordinates for the map to be centered on.\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * List of markers that represents the stops of the route to edit.\n   */\n  markers: Array = new Array();\n  /**\n   * Holds the result from the call of the Directions API made from the list of markers.\n   */\n  directionsResults$!: Observable;\n\n  /**\n * Id of the route.\n */\n  routeId: string = '';\n  /**\n   * Route to edit.\n   */\n  route!: Route;\n  /**\n   * TransportType for reverse mapping in the html.\n   */\n  TravelDirection = TravelDirection;\n  /**\n   * All the existent stops.\n   */\n  AllStops: Stop[] = [];\n\n  /**\n * All the existent trips.\n */\n  AllTrips: Trip[] = [];\n  /**\n   * All the values of the TransportType enum.\n   */\n  directions: number[] = Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v));\n\n  /**\n   * Form data to be viewed in the page\n   */\n  createRouteForm = this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  });\n\n  /**\n   * Constructor for the component.\n   * Gets the route whose Id matches the one in the URL and passes its info to the form.\n   * Also gets all the existent stops.\n   * @param {ActivatedRoute} actRoute Gives information about the current route.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {StopService} stopService Service that communicates with the server and has various operations about Stops.\n   * @param {FormBuilder} formBuilder Builds form data.\n   * @param {MapDirectionsService} mapDirectionsService Google service of the Directions API.\n   * @param {TripService} tripService Service that communicates with the server and has various operations about Trips.\n   * @param {Router} router Router.\n   * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n   * @param {TranslocoService} translocoService Service that perform the translation of the text.\n   */\n  constructor(private urlRoute: ActivatedRoute, private routeService: RouteService, private stopService: StopService,\n    private formBuilder: FormBuilder, private mapDirectionsService: MapDirectionsService, private tripService: TripService,\n    private router: Router, private stopTimeService: StopTimeService, private translocoService: TranslocoService) { }\n\n  ngOnInit(): void {\n    this.routeId = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.routeService.getRoute(this.routeId)\n      .subscribe((route) => {\n        this.stopTimeService.getStopsOfRoute(route.routeId).subscribe((stops) => {\n          this.route = new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, stops);\n        });\n      });\n\n    this.tripService.getTripsOfRoute(this.routeId).subscribe((trips) => {\n      trips.forEach((trip) => {\n        this.AllTrips!.push(new Trip(trip.tripId, trip.tripHeadsign, trip.routeId, trip.serviceId, trip.direction, trip.shapeId));\n      });\n      \n    });\n\n\n    this.stopService.getStops().subscribe(result => {\n      this.AllStops = result;\n    }, error => console.error(error));\n  }\n\n  /**\n   * Adds a form to the page that lets the user select the details for a stop in the route.\n   */\n  addStop() {\n    const stopForm = this.formBuilder.group({\n      stopId: '',\n      stopTime: ''\n    });\n\n    this.stops.push(stopForm);\n  }\n\n  /**\n   * Removes the form of one of the route stops.\n   * @param {number} stopIndex The form index to delete.\n   */\n  removeStop(stopIndex: number) {\n    this.stops.removeAt(stopIndex);\n    this.updateMap();\n  }\n\n  /**\n   * Gets all the stop forms in the page.\n   */\n  get stops() {\n    return this.createRouteForm.controls[\"stops\"] as FormArray;\n  }\n\n  /**\n   * Casts a AbstractControl form to a FormGroup.\n   */\n  toFormGroup = (form: AbstractControl) => form as FormGroup;\n\n  /**\n   * Updates the map in the page by adding/removing markers and linking them together in one route.\n   */\n  updateMap() {\n    this.addMarkers();\n    this.linkMarkers();\n  }\n\n  /**\n   * Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n   */\n  private addMarkers() {\n    this.markers.splice(0);\n\n    this.createRouteForm.value.stops?.forEach(s => {\n      var stop = (s as formStop);\n      this.AllStops.forEach(compStop => {\n        if (compStop.stopId == stop.stopId) this.markers.push(new google.maps.LatLng(compStop.stopLat, compStop.stopLon));\n      });\n    });\n    this.center = {\n      lat: this.markers[Math.floor(this.markers.length / 2)].lat(),\n      lng: this.markers[Math.floor(this.markers.length / 2)].lng()\n    }\n  }\n\n  /**\n   * Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n   */\n  private linkMarkers() {\n    const request: google.maps.DirectionsRequest = {\n      origin: this.markers[0],\n      destination: this.markers[this.markers.length - 1],\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  /**\n   * Creates a trip object and sends it to the database using the tripService\n   */\n  onSubmit(): void {\n    if (this.createRouteForm.value.stops != null) {\n      if (this.createRouteForm.value.stops.length > 2) {\n        const stops = this.createRouteForm.value.stops as formStop[];\n        if (stops.every(s => s.stopId.length != 0 && s.stopTime.length != 0)) {\n          const tripId = Guid.create().toString();\n          let trip: Trip = new Trip(tripId, this.createRouteForm.controls.tripName.value!, this.routeId,\n            \"1\", Number(this.createRouteForm.controls.tripTransportDirection.value!), \"4560_0_1_a\")\n\n          this.tripService.addTrip(trip).subscribe(() => { }, () => { }, () => {\n            let idx = 1;\n            this.createRouteForm.value.stops!.forEach(s => {\n              var stop = (s as formStop);\n              var date = new Date();\n              date.setUTCHours(Number(stop.stopTime.substring(0, 2)));\n              date.setUTCMinutes(Number(stop.stopTime.substring(3, 5)));\n              let stopTime: StopTime = new StopTime(tripId, date, date, stop.stopId, idx, 0.0);\n              this.stopTimeService.addStopTime(stopTime).subscribe();\n              idx++;\n            });\n            this.router.navigate(['/', 'route-management']);\n          });\n        }\n        else {\n          new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message-empty-stops'), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      } else {\n        new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('login.list.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n      }\n    }\n\n    \n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n/**\n * Interface for the stop form\n */\ninterface formStop {\n  stopId: string,\n  stopTime: string\n}\n\n\n    \n\n    \n        \n  {{ t('title-create') }}\n\n  \n    \n      \n        \n          {{ t('label-name') }}\n          \n        \n        \n          {{ t('label-direction') }}\n          \n            {{ TravelDirection[direction] }}\n          \n        \n      \n      \n        \n        \n        \n      \n    \n    \n    \n      \n        {{ t('schedules' ) }}\n        {{ t('create-stop') }}\n      \n      \n        \n          \n            \n              {{ t('stop') }}\n              \n                {{ stop.stopName }}\n              \n            \n            \n              {{ t('departure') }}\n              \n            \n            \n              delete_forever\n            \n          \n        \n      \n\n      \n        \n          add\n        \n      \n    \n    \n      {{ t('create-button') }}\n      {{ t('cancel') }}\n    \n  \n\n\n    \n\n    \n                \n                    ./trip-create.component.css\n                \n                #route-data {\n  display: flex;\n}\n\n#route-forms {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  margin-right: 50px;\n  justify-content: flex-start;\n}\n\ngoogle-map {\n  width: 730px;\n}\n\n.last-form {\n  padding: 0px;\n}\n\n#schedule-label {\n  display: flex;\n  justify-content: space-between;\n}\n\nmat-divider {\n  margin: 20px 0;\n}\n\n#scheduleTitle {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1%;\n}\n\n.stop-form-row {\n  display: flex;\n  width: 100%;\n}\n\n#add-stop-button {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n}\n\n.stop-name {\n  flex-grow: 1;\n}\n\n.remove-stop-button {\n  align-self: center;\n  margin-bottom: 21.5px;\n}\n\n.button {\n  width: 140px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n#create-stop-button {\n  width: 200px;\n}\n\n#form-buttons {\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title-create\\') }}                              {{ t(\\'label-name\\') }}                                    {{ t(\\'label-direction\\') }}                      {{ TravelDirection[direction] }}                                                                                      {{ t(\\'schedules\\' ) }}        {{ t(\\'create-stop\\') }}                                                        {{ t(\\'stop\\') }}                              {{ stop.stopName }}                                                    {{ t(\\'departure\\') }}                                                    delete_forever                                                            add                            {{ t(\\'create-button\\') }}      {{ t(\\'cancel\\') }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TripCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripEditComponent.html":{"url":"components/TripEditComponent.html","title":"component - TripEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TripEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trip-edit/trip-edit.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trip-edit\n            \n\n            \n                styleUrls\n                ./trip-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./trip-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AllStops\n                            \n                            \n                                center\n                            \n                            \n                                directions\n                            \n                            \n                                directionsOptions\n                            \n                            \n                                directionsResults$\n                            \n                            \n                                editRouteForm\n                            \n                            \n                                mapOptions\n                            \n                            \n                                markerOptions\n                            \n                            \n                                markers\n                            \n                            \n                                    Public\n                                selectedTrip\n                            \n                            \n                                toFormGroup\n                            \n                            \n                                TravelDirection\n                            \n                            \n                                    Public\n                                tripsStopsMap\n                            \n                            \n                                    Public\n                                tripStops\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addMarkers\n                            \n                            \n                                addStop\n                            \n                            \n                                cancel\n                            \n                            \n                                    Private\n                                createWaypoints\n                            \n                            \n                                    Private\n                                linkMarkers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeStop\n                            \n                            \n                                updateMap\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stops\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(urlRoute: ActivatedRoute, tripService: TripService, stopTimeService: StopTimeService, formBuilder: FormBuilder, router: Router, mapDirectionsService: MapDirectionsService, stopService: StopService, translocoService: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:100\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the route whose Id matches the one in the URL and passes its info to the form.\nAlso gets all the existent stops.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        urlRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Trips.\n\n                                                        \n                                                \n                                                \n                                                        stopTimeService\n                                                  \n                                                        \n                                                                        StopTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about StopTimes.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Builds form data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router.\n\n                                                        \n                                                \n                                                \n                                                        mapDirectionsService\n                                                  \n                                                        \n                                                                    MapDirectionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Google service of the Directions API.\n\n                                                        \n                                                \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Stops.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that perform the translation of the text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:196\n                \n            \n\n\n            \n                \n                    Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addStop\n                        \n                    \n                \n            \n            \n                \naddStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:162\n                \n            \n\n\n            \n                \n                    Adds a form to the page that lets the user select the details for a stop in the route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:300\n                \n            \n\n\n            \n                \n                    Cancels the creation of a new stop. Redirects back to the previous page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createWaypoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWaypoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     google.maps.DirectionsWaypoint[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        linkMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    linkMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:214\n                \n            \n\n\n            \n                \n                    Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:244\n                \n            \n\n\n            \n                \n                    Creates a trip object and sends it to the database using the tripService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeStop\n                        \n                    \n                \n            \n            \n                \nremoveStop(stopIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:175\n                \n            \n\n\n            \n                \n                    Removes the form of one of the route stops.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stopIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The form index to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMap\n                        \n                    \n                \n            \n            \n                \nupdateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:188\n                \n            \n\n\n            \n                \n                    Updates the map in the page by adding/removing markers and linking them together in one route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AllStops\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stop[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:74\n                        \n                    \n\n            \n                \n                    All the existent stops.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:57\n                        \n                    \n\n            \n                \n                    Coordinates for the map to be centered on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:78\n                        \n                    \n\n            \n                \n                    All the values of the TransportType enum.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.DirectionsRendererOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:42\n                        \n                    \n\n            \n                \n                    Options to be used by the Directions-Renderer field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:65\n                        \n                    \n\n            \n                \n                    Holds the result from the call of the Directions API made from the list of markers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editRouteForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:83\n                        \n                    \n\n            \n                \n                    Form data to be viewed in the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MapOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:31\n                        \n                    \n\n            \n                \n                    Options to be used by the Google-Map field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MarkerOptions\n\n                    \n                \n                \n                    \n                        Default value : { draggable: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:49\n                        \n                    \n\n            \n                \n                    Options to be used by the Map-Marker field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:61\n                        \n                    \n\n            \n                \n                    List of markers that represents the stops of the route to edit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedTrip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:92\n                        \n                    \n\n            \n                \n                    The trip the user has currently selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:183\n                        \n                    \n\n            \n                \n                    Casts a AbstractControl form to a FormGroup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TravelDirection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TravelDirection\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:70\n                        \n                    \n\n            \n                \n                    TransportType for reverse mapping in the html.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tripsStopsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:100\n                        \n                    \n\n            \n                \n                    A map with the all the trips of the route, with a list of their stop times.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tripStops\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StopTime[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:96\n                        \n                    \n\n            \n                \n                    The stops belonging to the current selected trip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 11\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:53\n                        \n                    \n\n            \n                \n                    Zoom level for the map to use at the start.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stops\n                    \n                \n\n                \n                    \n                        getstops()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/trip-edit/trip-edit.component.ts:155\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Route } from '../../models/route';\nimport { StopTime } from '../../models/stop-time';\nimport { Trip } from '../../models/trip';\nimport { RouteService } from '../../services/route.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport { TripService } from '../../services/trip.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TravelDirection } from '../../enums/travel-direction';\nimport { map, Observable } from 'rxjs';\nimport { Stop } from '../../models/stop';\nimport { MapDirectionsService } from '@angular/google-maps';\nimport { Console } from 'console';\nimport { StopService } from '../../services/stop.service';\nimport Snackbar from 'awesome-snackbar';\nimport { TranslocoService } from '@ngneat/transloco';\n\n\n@Component({\n  selector: 'app-trip-edit',\n  templateUrl: './trip-edit.component.html',\n  styleUrls: ['./trip-edit.component.css']\n})\nexport class TripEditComponent implements OnInit {\n\n  /**\n   * Options to be used by the Google-Map field.\n   */\n  mapOptions: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  };\n  /**\n   * Options to be used by the Directions-Renderer field.\n   */\n  directionsOptions: google.maps.DirectionsRendererOptions = {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field.\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n  /**\n   * Zoom level for the map to use at the start.\n   */\n  zoom = 11;\n  /**\n   * Coordinates for the map to be centered on.\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * List of markers that represents the stops of the route to edit.\n   */\n  markers: Array = new Array();\n  /**\n   * Holds the result from the call of the Directions API made from the list of markers.\n   */\n  directionsResults$!: Observable;\n\n  /**\n   * TransportType for reverse mapping in the html.\n   */\n  TravelDirection = TravelDirection;\n  /**\n   * All the existent stops.\n   */\n  AllStops: Stop[] = [];\n  /**\n   * All the values of the TransportType enum.\n   */\n  directions: number[] = Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v));\n\n  /**\n   * Form data to be viewed in the page\n   */\n  editRouteForm = this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  });\n\n  /**\n   * The trip the user has currently selected.\n   */\n  public selectedTrip!: Trip;\n  /**\n   * The stops belonging to the current selected trip.\n   */\n  public tripStops: StopTime[] = [];\n  /**\n   * A map with the all the trips of the route, with a list of their stop times.\n   */\n  public tripsStopsMap: Map = new Map();\n\n  /**\n * Constructor for the component.\n * Gets the route whose Id matches the one in the URL and passes its info to the form.\n * Also gets all the existent stops.\n * @param {ActivatedRoute} actRoute Gives information about the current route.\n * @param {TripService} tripService Service that communicates with the server and has various operations about Trips.\n * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n * @param {FormBuilder} formBuilder Builds form data. \n * @param {Router} router Router.\n * @param {MapDirectionsService} mapDirectionsService Google service of the Directions API.\n * @param {StopService} stopService Service that communicates with the server and has various operations about Stops.\n * @param {TranslocoService} translocoService Service that perform the translation of the text.\n */\n  constructor(private urlRoute: ActivatedRoute, private tripService: TripService, private stopTimeService: StopTimeService,\n    private formBuilder: FormBuilder, private router: Router, private mapDirectionsService: MapDirectionsService,\n    private stopService: StopService, private translocoService: TranslocoService) { }\n\n  ngOnInit(): void {\n    const id = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.tripService.getTrip(id)\n      .subscribe((trip) => {\n        this.stopTimeService.getStopsOfTrip(trip.tripId).subscribe((stops) => {\n          stops.forEach(stop => {\n            this.tripStops!.push(new StopTime(stop.tripId, stop.arrivalTime, stop.departureTime, stop.stopId, stop.stopSequence, stop.shapeDistTraveled, stop.trip, stop.stop));\n          })\n\n          this.selectedTrip = new Trip(trip.tripId, trip.tripHeadsign, trip.routeId, trip.serviceId, trip.direction, trip.shapeId);\n          this.editRouteForm.controls.tripName.patchValue(this.selectedTrip.tripHeadsign);\n          this.editRouteForm.controls.tripTransportDirection.patchValue(this.selectedTrip.direction);\n          this.editRouteForm.controls.stops.patchValue(this.tripStops!);\n\n\n          this.tripStops!.forEach(stopTime => {\n            const stopForm = this.formBuilder.group({\n              stopId: [stopTime.stopId, Validators.required],\n              departureTime: [stopTime.getHoursAndMinutesString(), Validators.required]\n              });\n            this.stops.push(stopForm);\n          });\n\n          console.log(this.tripStops!);\n          \n        }, (error) => { console.log(error) }, () => {\n          this.stopService.getStops().subscribe(result => {\n            this.AllStops = result;\n            this.updateMap();\n        });\n        });\n\n        \n      });\n  }\n\n  get stops() {\n    return this.editRouteForm.controls[\"stops\"] as FormArray;\n  }\n\n  /**\n * Adds a form to the page that lets the user select the details for a stop in the route.\n */\n  addStop() {\n    const stopForm = this.formBuilder.group({\n      stopId: '',\n      departureTime: ''\n    });\n\n    this.stops.push(stopForm);\n  }\n\n  /**\n   * Removes the form of one of the route stops.\n   * @param {number} stopIndex The form index to delete.\n   */\n  removeStop(stopIndex: number) {\n    this.stops.removeAt(stopIndex);\n    this.updateMap();\n  }\n\n  /**\n   * Casts a AbstractControl form to a FormGroup.\n   */\n  toFormGroup = (form: AbstractControl) => form as FormGroup;\n\n  /**\n   * Updates the map in the page by adding/removing markers and linking them together in one route.\n   */\n  updateMap() {\n    this.addMarkers();\n    this.linkMarkers();\n  }\n\n  /**\n   * Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n   */\n  private addMarkers() {\n    this.markers.splice(0);\n\n    this.editRouteForm.value.stops?.forEach(s => {\n      var stop = (s as formStop);\n      this.AllStops.forEach(compStop => {\n        if (compStop.stopId == stop.stopId) this.markers.push(new google.maps.LatLng(compStop.stopLat, compStop.stopLon));\n      });\n    });\n    this.center = {\n      lat: this.markers[Math.floor(this.markers.length / 2)].lat(),\n      lng: this.markers[Math.floor(this.markers.length / 2)].lng()\n    }\n  }\n\n  /**\n   * Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n   */\n  private linkMarkers() {\n    const request: google.maps.DirectionsRequest = {\n      origin: this.markers[0],\n      waypoints: this.createWaypoints(),\n      destination: this.markers[this.markers.length - 1],\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  private createWaypoints(): google.maps.DirectionsWaypoint[] {\n    var waypoints: google.maps.DirectionsWaypoint[] = [];\n    const MAX_WAYPOINTS: number = 25\n    var addWaypoint: boolean = true;\n    this.tripStops?.slice(1, this.tripStops.length - 1).forEach((stopTime) => {\n      if (waypoints.length  2) {\n        const stops = this.editRouteForm.value.stops as formStop[];\n        if (stops.every(s => s.stopId.length != 0 && s.departureTime.length != 0)) {\n          let trip: Trip = new Trip(this.selectedTrip.tripId, this.editRouteForm.controls.tripName.value!, this.selectedTrip.routeId,\n            this.selectedTrip.serviceId, Number(this.editRouteForm.controls.tripTransportDirection.value!), this.selectedTrip.shapeId)\n\n          this.tripService.editTrip(trip).subscribe();\n\n          let idx = 1;\n          this.editRouteForm.value.stops.forEach(s => {\n            var stop = (s as formStop);\n            var date = new Date();\n            date.setUTCHours(Number(stop.departureTime.substring(0, 2)));\n            date.setUTCMinutes(Number(stop.departureTime.substring(3, 5)));\n            let stopTime: StopTime = new StopTime(trip.tripId, date, date, stop.stopId, idx, 0.0);\n            this.stopTimeService.editStopTime(stopTime.tripId, idx, stopTime).subscribe(() => { }, () => {\n              this.stopTimeService.addStopTime(stopTime).subscribe();\n            });\n            idx++;\n          });\n\n          this.router.navigate(['/', 'route-management']);\n        } else {\n          new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message-empty-stops'), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      } else {\n        new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('login.list.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n      }\n    }\n     \n\n\n\n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n/**\n * Interface for the stop form\n */\ninterface formStop {\n  stopId: string,\n  departureTime: string\n}\n\n\n\n    \n\n    \n        \n  {{ t('title-edit') }}\n\n  \n    \n      \n        \n          {{ t('label-name') }}\n          \n        \n        \n          {{ t('label-direction') }}\n          \n            {{ TravelDirection[direction] }}\n          \n        \n      \n      \n        \n        \n        \n      \n    \n    \n    \n      \n        {{ t('schedules' ) }}\n        {{ t('create-stop') }}\n      \n      \n        \n          \n            \n              {{ t('stop') }}\n              \n                {{ stop.stopName }}\n              \n            \n            \n              {{ t('departure') }}\n              \n            \n            \n              delete_forever\n            \n          \n        \n\n      \n\n      \n        \n          add\n        \n      \n    \n    \n      {{ t('update-button') }}\n      {{ t('cancel') }}\n    \n  \n\n\n    \n\n    \n                \n                    ./trip-edit.component.css\n                \n                #route-data {\n  display: flex;\n}\n\n#route-forms {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  margin-right: 50px;\n  justify-content: flex-start;\n}\n\ngoogle-map {\n  width: 730px;\n}\n\n.last-form {\n  padding: 0px;\n}\n\n#scheduleTitle {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1%;\n}\n\nmat-divider {\n  margin: 20px 0;\n}\n\n#scheduleTitle {\n  display: flex;\n  justify-content: space-between;\n}\n\n.stop-form-row {\n  display: flex;\n  width: 100%;\n}\n\n#add-stop-button {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n}\n\n.stop-name {\n  flex-grow: 1;\n}\n\n.remove-stop-button {\n  align-self: center;\n  margin-bottom: 21.5px;\n}\n\n.button {\n  width: 140px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n#create-stop-button {\n  width: 200px;\n}\n\n#form-buttons {\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title-edit\\') }}                              {{ t(\\'label-name\\') }}                                    {{ t(\\'label-direction\\') }}                      {{ TravelDirection[direction] }}                                                                                      {{ t(\\'schedules\\' ) }}        {{ t(\\'create-stop\\') }}                                                        {{ t(\\'stop\\') }}                              {{ stop.stopName }}                                                    {{ t(\\'departure\\') }}                                                    delete_forever                                                            add                            {{ t(\\'update-button\\') }}      {{ t(\\'cancel\\') }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TripEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TripService.html":{"url":"injectables/TripService.html","title":"injectable - TripService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TripService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/trip.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTrip\n                            \n                            \n                                editTrip\n                            \n                            \n                                getTrip\n                            \n                            \n                                getTripsOfRoute\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/trip.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTrip\n                        \n                    \n                \n            \n            \n                \naddTrip(trip: Trip)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/trip.service.ts:46\n                \n            \n\n\n            \n                \n                    Adds a trip to the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    trip\n                                    \n                                                Trip\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        trip to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The created trip.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTrip\n                        \n                    \n                \n            \n            \n                \neditTrip(trip: Trip)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/trip.service.ts:57\n                \n            \n\n\n            \n                \n                    Sends a trip to the database to update.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    trip\n                                    \n                                                Trip\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The trip to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The edited trip\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTrip\n                        \n                    \n                \n            \n            \n                \ngetTrip(tripId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/trip.service.ts:35\n                \n            \n\n\n            \n                \n                    Gets a specific trip from the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id to search the trip for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A trip obtained from the database with a specific id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTripsOfRoute\n                        \n                    \n                \n            \n            \n                \ngetTripsOfRoute(routeId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/trip.service.ts:24\n                \n            \n\n\n            \n                \n                    Method to get all the trips a route makes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/trip.service.ts:68\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Trip } from '../models/trip';\n\n@Injectable({\n  providedIn: 'root'\n})\n  /**\n   * Service that communicates with the server and has various operations about Trips.\n   */\nexport class TripService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient,) { }\n\n  /**\n   * Method to get all the trips a route makes.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  getTripsOfRoute(routeId: string): Observable {\n    //return this.http.get(`api/RoutesApi/StopTimes/${routeId}`).pipe(catchError(this.handleError));\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/TripsApi/Route/${routeId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n * Gets a specific trip from the database.\n * @param {string} tripId Id to search the trip for.\n * @returns A trip obtained from the database with a specific id.\n */\n  getTrip(tripId: string): Observable {\n    //return this.http.get(`api/RoutesApi/StopTimes/${routeId}`).pipe(catchError(this.handleError));\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/TripsApi/${tripId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n * Adds a trip to the database.\n * @param {Trip} trip trip to add.\n * @returns The created trip.\n */\n  addTrip(trip: Trip): Observable {\n    //return this.http.post(`api/RoutesApi`, route)\n    return this.http.post(`https://traveller-server.azurewebsites.net/api/TripsApi`, trip)\n      .pipe(catchError(this.handleError));\n  }\n\n /**\n * Sends a trip to the database to update.\n * @param {Trip} trip The trip to update.\n * @returns The edited trip\n */\n  editTrip(trip: Trip): Observable {\n    //return this.http.put(`api/RoutesApi/${route.routeId}`, route)\n    return this.http.put(`https://traveller-server.azurewebsites.net/api/TripsApi/${trip.tripId}`, trip)\n      .pipe(catchError(this.handleError));\n  }\n  \n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a User.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creationDate\n                            \n                            \n                                email\n                            \n                            \n                                formatedDate\n                            \n                            \n                                id\n                            \n                            \n                                profileImage\n                            \n                            \n                                rating\n                            \n                            \n                                userName\n                            \n                            \n                                userRank\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, userRank: string, userName: string, rating: number, creationDate: Date, email: string, profileImage: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRank\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rating\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileImage\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:26\n                        \n                    \n\n            \n                \n                    Date of creation of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:30\n                        \n                    \n\n            \n                \n                    Email of creation of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:34\n                        \n                    \n\n            \n                \n                    Formated date of the creationDate of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:10\n                        \n                    \n\n            \n                \n                    Id of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:38\n                        \n                    \n\n            \n                \n                    URL in which the Profile Image is stored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:22\n                        \n                    \n\n            \n                \n                    Rating of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:18\n                        \n                    \n\n            \n                \n                    Name of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRank\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:14\n                        \n                    \n\n            \n                \n                    Rank(privilege) of the user.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRank } from \"../enums/user-rank\";\n\n/**\n * Class that represents a User.\n */\nexport class User {\n  /**\n   * Id of the user.\n   */\n  id: string;\n  /**\n   * Rank(privilege) of the user.\n   */\n  userRank: string;\n  /**\n   * Name of the user.\n   */\n  userName: string;\n  /**\n   * Rating of the user.\n   */\n  rating: number;\n  /**\n   * Date of creation of the user.\n   */\n  creationDate: Date;\n  /**\n   * Email of creation of the user.\n   */\n  email: string;\n  /**\n   * Formated date of the creationDate of the user\n   */\n  formatedDate: string;\n  /**\n   * URL in which the Profile Image is stored.\n   */\n  profileImage: string;\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(id: string, userRank: string, userName: string, rating: number, creationDate: Date, email: string, profileImage: string) {\n    this.id = id;\n    this.userRank = UserRank[Number(userRank)];\n    this.userName = userName;\n    this.rating = rating;\n    this.creationDate = new Date(creationDate);\n    this.email = email;\n    this.formatedDate = this.creationDate.toLocaleDateString('pt-PT');\n    this.profileImage = profileImage;\n  } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDetailsComponent.html":{"url":"components/UserDetailsComponent.html","title":"component - UserDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-details/user-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-details\n            \n\n            \n                styleUrls\n                ./user-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                banned\n                            \n                            \n                                    Public\n                                banReason\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                mostUsedTransportType\n                            \n                            \n                                    Public\n                                suspendDate\n                            \n                            \n                                    Public\n                                suspendReason\n                            \n                            \n                                    Public\n                                suspensions\n                            \n                            \n                                    Public\n                                    Optional\n                                timeSpentInTransport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateAfterTodayValidator\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                getSuspensions\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserMostUsedTransport\n                            \n                            \n                                getUserTimeSpent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetForms\n                            \n                            \n                                suspendUser\n                            \n                            \n                                unbanUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UserService, suspensionService: SuspensionService, translocoService: TranslocoService, statisticsService: StatisticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user-details/user-details.component.ts:53\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gives information about the current route.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Users.\n\n                                                        \n                                                \n                                                \n                                                        suspensionService\n                                                  \n                                                        \n                                                                        SuspensionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Suspensions.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        statisticsService\n                                                  \n                                                        \n                                                                        StatisticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dateAfterTodayValidator\n                        \n                    \n                \n            \n            \n                \ndateAfterTodayValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:199\n                \n            \n\n\n            \n                \n                    Custom validator created for the input suspension date.\nChecking if the date inserted by the user is before today or not.\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:152\n                \n            \n\n\n            \n                \n                    Returns the possible error messages related to the user input while trying to suspend a user, specifically the date input.\nChecking if either there isn't a valid inserted or if the inserted date is before today\n\n\n                    \n                        Returns :     \"no-date\" | \"before-date\" | \"\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSuspensions\n                        \n                    \n                \n            \n            \n                \ngetSuspensions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:76\n                \n            \n\n\n            \n                \n                    Gets the suspensions of the user whose Id is in the url.\nSorts the suspensions in descending order and checks if any suspension is permanent.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:66\n                \n            \n\n\n            \n                \n                    Gets the user through the id in the url.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserMostUsedTransport\n                        \n                    \n                \n            \n            \n                \ngetUserMostUsedTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:164\n                \n            \n\n\n            \n                \n                    Gets the user most used transport type.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserTimeSpent\n                        \n                    \n                \n            \n            \n                \ngetUserTimeSpent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:174\n                \n            \n\n\n            \n                \n                    Gets the user total time spent in transportation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForms\n                        \n                    \n                \n            \n            \n                \nresetForms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:183\n                \n            \n\n\n            \n                \n                    Resets the form data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suspendUser\n                        \n                    \n                \n            \n            \n                \nsuspendUser(permanent: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:97\n                \n            \n\n\n            \n                \n                    Suspends a user for a interval of time obtained through the form.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    permanent\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether or not the suspension is permanent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unbanUser\n                        \n                    \n                \n            \n            \n                \nunbanUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:132\n                \n            \n\n\n            \n                \n                    Function to unban an user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        banned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:33\n                        \n                    \n\n            \n                \n                    Whether the user is banned.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        banReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:37\n                        \n                    \n\n            \n                \n                    Reason for the user ban.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:25\n                        \n                    \n\n            \n                \n                    Current user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mostUsedTransportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:49\n                        \n                    \n\n            \n                \n                    Most used transport type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        suspendDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, this.dateAfterTodayValidator()])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:41\n                        \n                    \n\n            \n                \n                    Date until the suspension of the user is over.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        suspendReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:45\n                        \n                    \n\n            \n                \n                    Reason for the suspension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        suspensions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Suspension[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:29\n                        \n                    \n\n            \n                \n                    All the suspensions of the current user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        timeSpentInTransport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:53\n                        \n                    \n\n            \n                \n                    Time spent in transport.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { AbstractControl, FormControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslocoService } from '@ngneat/transloco';\nimport Snackbar from 'awesome-snackbar';\nimport { Suspension } from '../../models/suspension';\nimport { SuspensionService } from '../../services/suspension.service';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { StatisticsService } from '../../services/statistics.service'\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\n\n/**\n * Class for the component of the page of viewing User details.\n */\nexport class UserDetailsComponent implements OnInit {\n  /**\n   * Current user.\n   */\n  public currentUser!: User;\n  /**\n   * All the suspensions of the current user.\n   */\n  public suspensions!: Suspension[];\n  /**\n   * Whether the user is banned.\n   */\n  public banned!: boolean;\n  /**\n   * Reason for the user ban.\n   */\n  public banReason!: string;\n  /**\n   * Date until the suspension of the user is over.\n   */\n  public suspendDate = new FormControl('', [Validators.required, this.dateAfterTodayValidator()]);\n  /**\n   * Reason for the suspension.\n   */\n  public suspendReason = \"\";\n  /**\n   * Most used transport type.\n   */\n  public mostUsedTransportType!: string;\n  /**\n   * Time spent in transport.\n   */\n  public timeSpentInTransport?: string;\n  /**\n   * Constructor for the component.\n   * @param {ActivatedRoute} route Gives information about the current route.\n   * @param {UserService} userService Service that communicates with the server and has various operations about Users.\n   * @param {SuspensionService} suspensionService Service that communicates with the server and has various operations about Suspensions.\n   */\n  constructor(private route: ActivatedRoute, private userService: UserService, private suspensionService: SuspensionService, private translocoService: TranslocoService, private statisticsService: StatisticsService) {\n  }\n\n  /**\n   * Gets the user through the id in the url.\n   */\n  getUser() {\n    this.userService.getUser(this.route.snapshot.params.id).subscribe(result => {\n      this.currentUser = result;\n    }, error => console.error(error))\n  }\n\n  /**\n   * Gets the suspensions of the user whose Id is in the url.\n   * Sorts the suspensions in descending order and checks if any suspension is permanent.\n   */\n  getSuspensions() {\n    this.suspensionService.getSuspensionsOfUser(this.route.snapshot.params.id).subscribe(result => {\n      this.suspensions = result;\n      this.suspensions.sort((a: Suspension, b: Suspension) => {\n        if (a.startDate > b.startDate) {\n          return 1;\n        } else return 0;\n      })\n      this.suspensions.forEach((suspension) => {\n        if (suspension.permanent == true) {\n          this.banned = true;\n          this.banReason = suspension.reason;\n        }\n      })\n    }, error => console.error(error))\n  }\n\n  /**\n   * Suspends a user for a interval of time obtained through the form.\n   * @param {boolean} permanent Whether or not the suspension is permanent.\n   */\n  suspendUser(permanent: boolean) {\n    if (!permanent) {\n      this.suspensionService.suspendUser(this.currentUser.id, new Date(), new Date(this.suspendDate.value as string), this.suspendReason, permanent).subscribe(res => {\n        new Snackbar(this.translocoService.translate('user-details.user-suspended'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('user-details.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n            }\n          });\n        this.resetForms();\n        this.ngOnInit();\n      })\n    } else {\n      this.suspensionService.suspendUser(this.currentUser.id, new Date(), new Date(\"2099-01-01\"), this.suspendReason, permanent).subscribe(res => {\n        new Snackbar(this.translocoService.translate('user-details.user-banned'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('user-details.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n        this.resetForms();\n        this.ngOnInit();\n      })\n    }\n  }\n\n  /**\n   * Function to unban an user.\n   */\n  unbanUser() {\n    this.suspensionService.unbanUser(this.currentUser.id).subscribe(res => {\n      this.resetForms();\n      this.ngOnInit();\n      new Snackbar(this.translocoService.translate('user-details.user-unbanned'), {\n        position: 'bottom-center',\n        actionText: this.translocoService.translate('user-details.hide'),\n        style: {\n          container: [\n            ['background-color', '#003F91']\n          ]\n        }\n      });\n    })\n  }\n\n  /**\n   * Returns the possible error messages related to the user input while trying to suspend a user, specifically the date input.\n   * Checking if either there isn't a valid inserted or if the inserted date is before today\n   * */\n  getErrorMessage() {\n    if (this.suspendDate.value as string == \"\") {\n      return 'no-date';\n    } else if (new Date(this.suspendDate.value as string)  {\n      this.mostUsedTransportType = data.mostUsedTransport;\n    });\n  }\n\n\n  /**\n   * Gets the user total time spent in transportation.\n   */\n  getUserTimeSpent() {\n    this.statisticsService.getUserTimeSpent(this.route.snapshot.params.id).subscribe(data => {\n      this.timeSpentInTransport = data.timeSpent;\n    });\n  }\n\n  /**\n   * Resets the form data.\n   */\n  resetForms() {\n    this.suspendReason = \"\";\n    this.suspendDate.reset();\n  }\n\n  ngOnInit(): void {\n    this.getUser();\n    this.getSuspensions();\n    this.getUserMostUsedTransport();\n    this.getUserTimeSpent();\n  }\n\n  /**\n   * Custom validator created for the input suspension date.\n   * Checking if the date inserted by the user is before today or not.\n   * */\n  dateAfterTodayValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const value = new Date(control.value as string);\n      if (!value) {\n        return null;\n      }\n      const beforeToday = value \n    \n\n    \n        \n  \n\n\n  \n    {{ currentUser.userName }}\n\n    \n      \n        \n        {{ currentUser.userName }}\n         {{t('username')}} \n      \n      \n        \n          \n            \n           \n          \n            \n          \n          \n        \n          \n            \n              {{t('email')}} - {{currentUser.email}}\n              \n                info\n              \n            \n            \n              {{t('rating')}} - {{ currentUser.rating }}\n              \n                info\n              \n            \n            \n              {{t('account-creation-date')}} - {{currentUser.creationDate  | date: 'dd/MM/yyyy'}}\n              \n                info\n              \n            \n            \n              {{t('mostUsedTransport')}} - {{mostUsedTransportType}}\n              \n                info\n              \n            \n            \n              {{t('timeSpend')}} - {{timeSpentInTransport}}\n              \n                info\n              \n            \n            \n              \n                {{t('user-perma-banned')}} - {{banReason}}\n              \n              \n                \n                  {{t('user-no-suspensions')}}\n                \n                 0\">\n                  {{t('list-suspensions')}}\n                  \n                    \n                      {{t('since')}} {{suspension.startDate | date: 'dd/MM/yyyy, HH:mm'}}  {{t('until')}} {{suspension.endDate | date: 'dd/MM/yyyy, HH:mm'}} - {{suspension.reason}}\n                    \n                  \n                \n              \n              \n                info\n              \n            \n          \n        \n      \n        \n          \n            \n              info\n            \n             {{t('ban-button')}}\n          \n          \n            \n              \n                info\n              \n              {{t('suspend-button')}}\n            \n            \n              {{t('suspension-end')}}\n              \n              \n                close\n              \n              {{t(getErrorMessage())}}\n              {{t('hint-date')}}\n            \n            \n              {{t('reason')}}\n              \n              \n                close\n              \n              {{t('hint-reason')}}\n            \n          \n        \n        \n          \n            \n              info\n            \n             {{t('unban-button')}}\n          \n        \n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./user-details.component.css\n                \n                mat-spinner {\n  width: 100px;\n  height: 100px;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n}\n\n.mat-form-field-label {\n  white-space: normal;\n}\n\ntextarea.mat-input-element {\n  padding: 0px 0;\n  margin: 5px 0;\n}\n\n.mat-input-placeholder {\n  white-space: normal;\n}\n\nmat-card-actions {\n    margin-left: 4%;\n}\n\nmat-card-content {\n  display: flex;\n}\n\n.left-card-section {\n  min-width: 50%;\n  float: left;\n  border-right: 3px solid;\n}\n\n\n.profileImage {\n  margin-left: 10%;\n  max-width: 35%;\n  height: auto;\n}\n\n.right-card-section {\n  display: flex;\n  margin-left: 4%;\n  min-width: 75%;\n  justify-content: space-around;\n  flex-direction: column;\n}\n\n.ban-button {\n    background-color: lightcoral;\n}\n\n.unban-button {\n    background-color: lightgreen;\n}\n\nmat-form-field {\n    margin-right: 3%;\n    margin-left: 2%;\n}\n\n.message-container {\n    display: flex;\n    align-items: center;\n    margin: 5px;\n}\n\n.icon-right-side {\n    margin-left: 2%;\n}\n\n.time-input {\n    width: 18%;\n}\n\n.reason-input {\n  width: 20%;\n}\n\n.suspend-button {\n    margin-bottom: 3%;\n}\n\n.suspend-button .mat-button {\n    background-color: lightsalmon;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n  /*change color of label*/\n  color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /*change color of underline*/\n  background-color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /*change color of underline when focused*/\n  background-color: #003F91 !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ currentUser.userName }}                          {{ currentUser.userName }}         {{t(\\'username\\')}}                                                                                                                                            {{t(\\'email\\')}} - {{currentUser.email}}                              info                                                    {{t(\\'rating\\')}} - {{ currentUser.rating }}                              info                                                    {{t(\\'account-creation-date\\')}} - {{currentUser.creationDate  | date: \\'dd/MM/yyyy\\'}}                              info                                                    {{t(\\'mostUsedTransport\\')}} - {{mostUsedTransportType}}                              info                                                    {{t(\\'timeSpend\\')}} - {{timeSpentInTransport}}                              info                                                                    {{t(\\'user-perma-banned\\')}} - {{banReason}}                                                              {{t(\\'user-no-suspensions\\')}}                                 0\">                  {{t(\\'list-suspensions\\')}}                                                            {{t(\\'since\\')}} {{suspension.startDate | date: \\'dd/MM/yyyy, HH:mm\\'}}  {{t(\\'until\\')}} {{suspension.endDate | date: \\'dd/MM/yyyy, HH:mm\\'}} - {{suspension.reason}}                                                                                                  info                                                                                              info                         {{t(\\'ban-button\\')}}                                                              info                            {{t(\\'suspend-button\\')}}                                      {{t(\\'suspension-end\\')}}                                            close                            {{t(getErrorMessage())}}              {{t(\\'hint-date\\')}}                                      {{t(\\'reason\\')}}                                            close                            {{t(\\'hint-reason\\')}}                                                                          info                         {{t(\\'unban-button\\')}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForAuthentication.html":{"url":"interfaces/UserForAuthentication.html","title":"interface - UserForAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserForAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/login/login.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslocoService } from '@ngneat/transloco';\nimport Snackbar from 'awesome-snackbar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n/**\n* Class for the component of the page of viewing Login Page.\n*/\nexport class LoginComponent implements OnInit {\n  /**\n   * Url to navigate to the statistics page.\n   */\n  private returnUrl!: string;\n  /*\n   * Form to have the values of the inputs.\n   */\n  loginForm!: FormGroup;\n  /*\n   * Variable used to give feedback to the user if the page is loading or not.\n   */\n  isLoading!: boolean;\n  /**\n   * All the available languages of the application.\n   */\n  private availableLangs: string[] | { id: string, label: string }[];\n  /**\n   * Current active language.\n   */\n  private activeLang: string;\n\n  /**\n   * Constructor for the component.\n   * \n   * @param authService Authentication service that comunicates with the server to validate the inputs of the user.\n   * @param router Redirect the current link after the login succeed.\n   * @param route Gives information about the current route.\n   * @param translocoService Service that perform the translation of the text.\n   */\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute, private translocoService: TranslocoService)\n  {\n    this.availableLangs = this.translocoService.getAvailableLangs();\n    this.activeLang = this.translocoService.getActiveLang();\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [Validators.required]),\n    })\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  /**\n   * Function that will be executed when the login button\n   * is pressed which serves to send the data to the authentication\n   * service if they are correct login was done correctly.\n   * \n   * @param loginForm FormGroup to obtain the values of the inputs\n   */\n  loginCredentials(loginForm: FormGroup) {\n    const login = loginForm.value;\n\n    const userForAuth: UserForAuthentication = {\n      email: login.email,\n      password: login.password\n    }\n\n    this.authService.loginUser(userForAuth)\n      .subscribe({\n        next: (res: AuthResponse) => {\n          localStorage.setItem(\"token\", res.token);\n          localStorage.setItem(\"userEmail\", login.email);\n          this.authService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n          this.isLoading = true;\n          this.router.navigate(['/statistics']);\n        },\n        error: (err: HttpErrorResponse) => {\n          this.isLoading = false;\n          new Snackbar(this.translocoService.translate('login.list.' + err.message), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      })\n  }\n\n  /**\n * Changes the active language.\n * @param {string} lang id of language to change to.\n */\n  changeLang(lang: string) {\n    this.translocoService.setActiveLang(lang);\n    this.activeLang = lang;\n  }\n}\n\nexport interface UserForAuthentication {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  isAuthSuccessful: boolean;\n  errorMessage: string;\n  token: string;\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUserFromEmail\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n                    Gets a specific user from the database through their Id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id to search for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A specific user from the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFromEmail\n                        \n                    \n                \n            \n            \n                \ngetUserFromEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:43\n                \n            \n\n\n            \n                \n                    Gets all users from the database.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        All users from the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:54\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { User } from '../models/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n  /**\n   * Service that communicates with the server and has various operations about Users.\n   */\nexport class UserService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Gets a specific user from the database through their Id.\n   * @param {string} userId The id to search for.\n   * @returns A specific user from the database.\n   */\n  getUser(userId: string): Observable {\n    //return this.http.get(`api/UserApi/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/UserApi/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  getUserFromEmail(email: string): Observable {\n    //return this.http.get(`api/UserApi/email/${email}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/UserApi/email/${email}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n * Gets all users from the database.\n * @returns All users from the database.\n */\n  getUsers(): Observable {\n    //return this.http.get(`api/UserApi`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/UserApi`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersManagementComponent.html":{"url":"components/UsersManagementComponent.html","title":"component - UsersManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/users-management/users-management.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-management\n            \n\n            \n                styleUrls\n                ./users-management.component.css\n            \n\n\n\n            \n                templateUrl\n                ./users-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                banned\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                selection\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                banUsers\n                            \n                            \n                                getUsersInfo\n                            \n                            \n                                getUsersSuspensionPermanent\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleAllRows\n                            \n                            \n                                unbanUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, suspensionService: SuspensionService, translocoService: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/users-management/users-management.component.ts:43\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the users in the system and add them to the \"users\" through the function getUsersInfo().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and get all users and informations.\n\n                                                        \n                                                \n                                                \n                                                        suspensionService\n                                                  \n                                                        \n                                                                        SuspensionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Suspensions.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to perform the translation on the snackbar text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:161\n                \n            \n\n\n            \n                \n                    Aplies a filter to the list of existing routes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parameter to filter the list for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        banUsers\n                        \n                    \n                \n            \n            \n                \nbanUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:119\n                \n            \n\n\n            \n                \n                    Ban all the checked users.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersInfo\n                        \n                    \n                \n            \n            \n                \ngetUsersInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:104\n                \n            \n\n\n            \n                \n                    Function used to get the users in the system and add them to the \"users\" attribute.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersSuspensionPermanent\n                        \n                    \n                \n            \n            \n                \ngetUsersSuspensionPermanent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:85\n                \n            \n\n\n            \n                \n                    Function used to verify if an user is banned permant\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:65\n                \n            \n\n\n            \n                \n                     Whether the number of selected elements matches the total number of rows.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:58\n                \n            \n\n\n            \n                \n                    Component inicializer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAllRows\n                        \n                    \n                \n            \n            \n                \ntoggleAllRows()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:74\n                \n            \n\n\n            \n                \n                     Selects all rows if they are not all selected; otherwise clear selection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unbanUser\n                        \n                    \n                \n            \n            \n                \nunbanUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:141\n                \n            \n\n\n            \n                \n                    Unban an user account with a button.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the user account who is banned.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        banned\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:31\n                        \n                    \n\n            \n                \n                    Mapping the banned users in the system.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:39\n                        \n                    \n\n            \n                \n                    The data source used in the users management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['select', 'creation-date', 'user-name', 'user-rating', 'user-rank', 'user-details']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:35\n                        \n                    \n\n            \n                \n                    The columns to be displayed in the users management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:23\n                        \n                    \n\n            \n                \n                    The paginator used in the users management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:43\n                        \n                    \n\n            \n                \n                    Holds the routes selected via checkbox.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:27\n                        \n                    \n\n            \n                \n                    All the existent users.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { SuspensionService } from '../../services/suspension.service';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport Snackbar from 'awesome-snackbar';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-users-management',\n  templateUrl: './users-management.component.html',\n  styleUrls: ['./users-management.component.css']\n})\n/**\n* Class for the component of the page of Users Management\n*/\nexport class UsersManagementComponent implements OnInit {\n  /**\n   * The paginator used in the users management table.\n   */\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  /**\n   * All the existent users.\n   */\n  public users: User[] = [];\n  /**\n   * Mapping the banned users in the system.\n   */\n  public banned: Map = new Map();\n  /**\n   * The columns to be displayed in the users management table.\n   */\n  displayedColumns: string[] = ['select', 'creation-date', 'user-name', 'user-rating', 'user-rank', 'user-details'];\n  /**\n   * The data source used in the users management table.\n   */\n  dataSource!: MatTableDataSource\n  /**\n   * Holds the routes selected via checkbox.\n   */\n  selection = new SelectionModel(true, []);\n\n\n/**\n * Constructor for the component.\n * Gets the users in the system and add them to the \"users\" through the function getUsersInfo().\n * @param userService Service that communicates with the server and get all users and informations.\n * @param suspensionService Service that communicates with the server and has various operations about Suspensions.\n * @param translocoService Service to perform the translation on the snackbar text.\n */\n  constructor(private userService: UserService, private suspensionService: SuspensionService, private translocoService: TranslocoService) { }\n\n  /**\n   * Component inicializer.\n   */\n  ngOnInit(): void {\n    this.getUsersInfo();\n  }\n\n  /**\n   *  Whether the number of selected elements matches the total number of rows.\n   */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /**\n   *  Selects all rows if they are not all selected; otherwise clear selection.\n   */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /**\n   * Function used to verify if an user is banned permant\n   */\n  getUsersSuspensionPermanent() {\n    this.users.forEach((user) => {\n      this.suspensionService.getSuspensionsOfUser(user.id).subscribe(res => {\n        this.banned.set(user.id, false);\n        res.forEach((suspension) => {\n          if (suspension.permanent) {\n            this.banned.set(user.id, true);\n          }\n        });\n        if (user.userRank.toLowerCase() == 'admin') {\n          this.banned.set(user.id, true);\n        };\n      })\n    })\n  }\n\n  /**\n   * Function used to get the users in the system and add them to the \"users\" attribute.\n   */\n  getUsersInfo() {\n    this.users = [];\n    this.userService.getUsers().subscribe((usr) => {\n      usr.forEach((user) => {\n        this.users.push(new User(user.id, user.userRank, user.userName, user.rating, user.creationDate, user.email, \"null\"));\n      });\n      this.getUsersSuspensionPermanent();\n      this.dataSource = new MatTableDataSource(this.users);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  /**\n  * Ban all the checked users.\n  */\n  banUsers() {\n    this.selection.selected.forEach((user) => {\n      var userToBanId = user.id;\n      this.suspensionService.suspendUser(userToBanId, new Date(), new Date(\"2099-01-01\"), \"\", true).subscribe(res => {\n        new Snackbar(this.translocoService.translate('user-details.user-banned'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('user-details.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n        this.getUsersSuspensionPermanent();\n      })\n    });\n  }\n\n  /**\n   * Unban an user account with a button.\n   * @param userId Id of the user account who is banned.\n   */\n  unbanUser(userId: string) {\n    console.log(userId);\n    this.suspensionService.unbanUser(userId).subscribe(res => {\n      new Snackbar(this.translocoService.translate('user-details.user-unbanned'), {\n        position: 'bottom-center',\n        actionText: this.translocoService.translate('user-details.hide'),\n        style: {\n          container: [\n            ['background-color', '#003F91']\n          ]\n        }\n      });\n      this.getUsersSuspensionPermanent();\n    })\n  }\n\n  /**\n   * Aplies a filter to the list of existing routes.\n   * @param {Event} event The parameter to filter the list for.\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n\n    \n\n    \n        \n  {{ t('title') }}\n\n  \n    \n      {{ t('ban') }}\n    \n  \n  \n    {{ t('filter') }}\n    \n  \n\n  \n    \n    \n      \n        \n        \n      \n      \n        \n          \n          \n        \n        \n           {{t('unban-button')}} \n        \n        \n        \n      \n    \n\n    \n    \n      {{ t('user-creationDate') }}\n       {{ user.formatedDate}} \n    \n\n    \n    \n      {{ t('user-userName') }}\n      {{ user.userName }} \n    \n\n    \n    \n      {{ t('user-rating') }}\n       {{ user.rating }} \n    \n\n    \n    \n      {{ t('user-userRank') }}\n       {{ user.userRank }} \n    \n\n    \n    \n      {{ t('user-details') }}\n       {{ t('user-details') }} \n    \n\n    \n    \n\n    \n    \n      No data matching the filter \"{{input.value}}\"\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./users-management.component.css\n                \n                .unban-button {\n  background-color: lightgreen;\n}\n\n.ban-button {\n  background-color: lightcoral;\n  width: 100px;\n  height: 45px;\n}\n\n#management-buttons {\n  display: flex;\n  gap: 20px;\n}\n\n/deep/ .mat-tooltip {\n  font-size: 14px;\n}\n\ntable {\n  width: 100%;\n}\n\n#filter {\n  width: 100%;\n  margin-top: 15px;\n}\n\n.link {\n  color: dodgerblue;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n  /*change color of label*/\n  color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /*change color of underline*/\n  background-color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /*change color of underline when focused*/\n  background-color: #003F91 !important;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title\\') }}            {{ t(\\'ban\\') }}            {{ t(\\'filter\\') }}                                                                                                         {{t(\\'unban-button\\')}}                                                 {{ t(\\'user-creationDate\\') }}       {{ user.formatedDate}}                   {{ t(\\'user-userName\\') }}      {{ user.userName }}                   {{ t(\\'user-rating\\') }}       {{ user.rating }}                   {{ t(\\'user-userRank\\') }}       {{ user.userRank }}                   {{ t(\\'user-details\\') }}       {{ t(\\'user-details\\') }}                           No data matching the filter \"{{input.value}}\"        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            interface\n            UserForAuthentication\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/nav-menu/nav-menu.component.ts\n            \n            component\n            NavMenuComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/components/route-create/route-create.component.ts\n            \n            component\n            RouteCreateComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/components/route-details/route-details.component.ts\n            \n            component\n            RouteDetailsComponent\n            \n                75 %\n                (15/20)\n            \n        \n        \n            \n                \n                src/app/components/route-edit/route-edit.component.ts\n            \n            component\n            RouteEditComponent\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/components/route-management/route-management.component.ts\n            \n            component\n            RouteManagementComponent\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/components/statistics/statistics.component.ts\n            \n            component\n            StatisticsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/components/statistics/statistics.component.ts\n            \n            injectable\n            StatisticsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/components/stop-create/stop-create.component.ts\n            \n            component\n            StopCreateComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/components/trip-create/trip-create.component.ts\n            \n            component\n            TripCreateComponent\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                src/app/components/trip-create/trip-create.component.ts\n            \n            interface\n            formStop\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/trip-edit/trip-edit.component.ts\n            \n            component\n            TripEditComponent\n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                src/app/components/trip-edit/trip-edit.component.ts\n            \n            interface\n            formStop\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/user-details/user-details.component.ts\n            \n            component\n            UserDetailsComponent\n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                src/app/components/users-management/users-management.component.ts\n            \n            component\n            UsersManagementComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/models/agency.ts\n            \n            class\n            Agency\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/route.ts\n            \n            class\n            Route\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/models/statistics.ts\n            \n            class\n            Statistics\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/stop-time.ts\n            \n            class\n            StopTime\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/models/stop.ts\n            \n            class\n            Stop\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/suspension.ts\n            \n            class\n            Suspension\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/trip.ts\n            \n            class\n            Trip\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/agency.service.ts\n            \n            injectable\n            AgencyService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/services/route.service.ts\n            \n            injectable\n            RouteService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/statistics.service.ts\n            \n            injectable\n            StatisticsService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/services/statistics.service.ts\n            \n            interface\n            MostUsedTransportResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/stop-time.service.ts\n            \n            injectable\n            StopTimeService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/stop.service.ts\n            \n            injectable\n            StopService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/suspension.service.ts\n            \n            injectable\n            SuspensionService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/services/trip.service.ts\n            \n            injectable\n            TripService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/transloco-root.module.ts\n            \n            injectable\n            TranslocoHttpLoader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            getBaseUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.3\n        \n            @angular/common : ^14.0.3\n        \n            @angular/compiler : ^14.0.3\n        \n            @angular/core : ^14.0.3\n        \n            @angular/forms : ^14.0.3\n        \n            @angular/google-maps : ^13.3.9\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^14.0.3\n        \n            @angular/platform-browser-dynamic : ^14.0.3\n        \n            @angular/platform-server : ^14.0.3\n        \n            @angular/router : ^14.0.3\n        \n            @ngneat/transloco : ^4.2.2\n        \n            awesome-snackbar : ^2.0.7\n        \n            bootstrap : ^5.1.3\n        \n            chart.js : ^4.2.0\n        \n            guid-typescript : ^1.0.9\n        \n            jquery : ^3.6.0\n        \n            oidc-client : ^1.11.5\n        \n            popper.js : ^1.16.0\n        \n            run-script-os : ^1.1.6\n        \n            rxjs : ~7.5.5\n        \n            tslib : ^2.4.0\n        \n            zone.js : ~0.11.6\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TransportType   (src/.../transport-type.ts)\n                        \n                        \n                            TravelDirection   (src/.../travel-direction.ts)\n                        \n                        \n                            UserRank   (src/.../user-rank.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/transport-type.ts\n    \n        \n            \n                \n                    \n                        \n                        TransportType\n                    \n                \n                    \n                        \n                            Enum for the type of transport of a route.\n\n                        \n                    \n                        \n                            \n                                 Tram\n                            \n                        \n                        \n                            \n                                 Metro\n                            \n                        \n                        \n                            \n                                 Train\n                            \n                        \n                        \n                            \n                                 Bus\n                            \n                        \n                        \n                            \n                                 Ferry\n                            \n                        \n            \n        \n\n    src/app/enums/travel-direction.ts\n    \n        \n            \n                \n                    \n                        \n                        TravelDirection\n                    \n                \n                    \n                        \n                            Enum for travel direction of a route.\n\n                        \n                    \n                        \n                            \n                                 Outbound\n                            \n                        \n                        \n                            \n                                 Inbound\n                            \n                        \n            \n        \n\n    src/app/enums/user-rank.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRank\n                    \n                \n                    \n                        \n                            Enum for the type of the rank of a user.\n\n                        \n                    \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                 Regular\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/formStop.html":{"url":"interfaces/formStop.html","title":"interface - formStop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  formStop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/trip-create/trip-create.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the stop form\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            stopId\n                                        \n                                \n                                \n                                        \n                                            stopTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        stopId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouteService } from '../../services/route.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route } from '../../models/route';\nimport { Stop } from '../../models/stop';\nimport { StopService } from '../../services/stop.service';\nimport { StopTime } from \"../../models/stop-time\";\nimport { Guid } from 'guid-typescript';\nimport { map, Observable } from 'rxjs';\nimport { MapDirectionsService } from '@angular/google-maps';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TravelDirection } from '../../enums/travel-direction';\nimport { Trip } from '../../models/trip';\nimport { TripService } from '../../services/trip.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport Snackbar from 'awesome-snackbar';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-trip-create',\n  templateUrl: './trip-create.component.html',\n  styleUrls: ['./trip-create.component.css']\n})\n/**\n * Class for the component of the page of Route Editing\n */\nexport class TripCreateComponent implements OnInit {\n  /**\n   * Options to be used by the Google-Map field.\n   */\n  mapOptions: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  };\n  /**\n   * Options to be used by the Directions-Renderer field.\n   */\n  directionsOptions: google.maps.DirectionsRendererOptions = {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field.\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n  /**\n   * Zoom level for the map to use at the start.\n   */\n  zoom = 11;\n  /**\n   * Coordinates for the map to be centered on.\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * List of markers that represents the stops of the route to edit.\n   */\n  markers: Array = new Array();\n  /**\n   * Holds the result from the call of the Directions API made from the list of markers.\n   */\n  directionsResults$!: Observable;\n\n  /**\n * Id of the route.\n */\n  routeId: string = '';\n  /**\n   * Route to edit.\n   */\n  route!: Route;\n  /**\n   * TransportType for reverse mapping in the html.\n   */\n  TravelDirection = TravelDirection;\n  /**\n   * All the existent stops.\n   */\n  AllStops: Stop[] = [];\n\n  /**\n * All the existent trips.\n */\n  AllTrips: Trip[] = [];\n  /**\n   * All the values of the TransportType enum.\n   */\n  directions: number[] = Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v));\n\n  /**\n   * Form data to be viewed in the page\n   */\n  createRouteForm = this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  });\n\n  /**\n   * Constructor for the component.\n   * Gets the route whose Id matches the one in the URL and passes its info to the form.\n   * Also gets all the existent stops.\n   * @param {ActivatedRoute} actRoute Gives information about the current route.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {StopService} stopService Service that communicates with the server and has various operations about Stops.\n   * @param {FormBuilder} formBuilder Builds form data.\n   * @param {MapDirectionsService} mapDirectionsService Google service of the Directions API.\n   * @param {TripService} tripService Service that communicates with the server and has various operations about Trips.\n   * @param {Router} router Router.\n   * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n   * @param {TranslocoService} translocoService Service that perform the translation of the text.\n   */\n  constructor(private urlRoute: ActivatedRoute, private routeService: RouteService, private stopService: StopService,\n    private formBuilder: FormBuilder, private mapDirectionsService: MapDirectionsService, private tripService: TripService,\n    private router: Router, private stopTimeService: StopTimeService, private translocoService: TranslocoService) { }\n\n  ngOnInit(): void {\n    this.routeId = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.routeService.getRoute(this.routeId)\n      .subscribe((route) => {\n        this.stopTimeService.getStopsOfRoute(route.routeId).subscribe((stops) => {\n          this.route = new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, stops);\n        });\n      });\n\n    this.tripService.getTripsOfRoute(this.routeId).subscribe((trips) => {\n      trips.forEach((trip) => {\n        this.AllTrips!.push(new Trip(trip.tripId, trip.tripHeadsign, trip.routeId, trip.serviceId, trip.direction, trip.shapeId));\n      });\n      \n    });\n\n\n    this.stopService.getStops().subscribe(result => {\n      this.AllStops = result;\n    }, error => console.error(error));\n  }\n\n  /**\n   * Adds a form to the page that lets the user select the details for a stop in the route.\n   */\n  addStop() {\n    const stopForm = this.formBuilder.group({\n      stopId: '',\n      stopTime: ''\n    });\n\n    this.stops.push(stopForm);\n  }\n\n  /**\n   * Removes the form of one of the route stops.\n   * @param {number} stopIndex The form index to delete.\n   */\n  removeStop(stopIndex: number) {\n    this.stops.removeAt(stopIndex);\n    this.updateMap();\n  }\n\n  /**\n   * Gets all the stop forms in the page.\n   */\n  get stops() {\n    return this.createRouteForm.controls[\"stops\"] as FormArray;\n  }\n\n  /**\n   * Casts a AbstractControl form to a FormGroup.\n   */\n  toFormGroup = (form: AbstractControl) => form as FormGroup;\n\n  /**\n   * Updates the map in the page by adding/removing markers and linking them together in one route.\n   */\n  updateMap() {\n    this.addMarkers();\n    this.linkMarkers();\n  }\n\n  /**\n   * Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n   */\n  private addMarkers() {\n    this.markers.splice(0);\n\n    this.createRouteForm.value.stops?.forEach(s => {\n      var stop = (s as formStop);\n      this.AllStops.forEach(compStop => {\n        if (compStop.stopId == stop.stopId) this.markers.push(new google.maps.LatLng(compStop.stopLat, compStop.stopLon));\n      });\n    });\n    this.center = {\n      lat: this.markers[Math.floor(this.markers.length / 2)].lat(),\n      lng: this.markers[Math.floor(this.markers.length / 2)].lng()\n    }\n  }\n\n  /**\n   * Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n   */\n  private linkMarkers() {\n    const request: google.maps.DirectionsRequest = {\n      origin: this.markers[0],\n      destination: this.markers[this.markers.length - 1],\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  /**\n   * Creates a trip object and sends it to the database using the tripService\n   */\n  onSubmit(): void {\n    if (this.createRouteForm.value.stops != null) {\n      if (this.createRouteForm.value.stops.length > 2) {\n        const stops = this.createRouteForm.value.stops as formStop[];\n        if (stops.every(s => s.stopId.length != 0 && s.stopTime.length != 0)) {\n          const tripId = Guid.create().toString();\n          let trip: Trip = new Trip(tripId, this.createRouteForm.controls.tripName.value!, this.routeId,\n            \"1\", Number(this.createRouteForm.controls.tripTransportDirection.value!), \"4560_0_1_a\")\n\n          this.tripService.addTrip(trip).subscribe(() => { }, () => { }, () => {\n            let idx = 1;\n            this.createRouteForm.value.stops!.forEach(s => {\n              var stop = (s as formStop);\n              var date = new Date();\n              date.setUTCHours(Number(stop.stopTime.substring(0, 2)));\n              date.setUTCMinutes(Number(stop.stopTime.substring(3, 5)));\n              let stopTime: StopTime = new StopTime(tripId, date, date, stop.stopId, idx, 0.0);\n              this.stopTimeService.addStopTime(stopTime).subscribe();\n              idx++;\n            });\n            this.router.navigate(['/', 'route-management']);\n          });\n        }\n        else {\n          new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message-empty-stops'), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      } else {\n        new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('login.list.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n      }\n    }\n\n    \n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n/**\n * Interface for the stop form\n */\ninterface formStop {\n  stopId: string,\n  stopTime: string\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/formStop-1.html":{"url":"interfaces/formStop-1.html","title":"interface - formStop-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  formStop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/trip-edit/trip-edit.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the stop form\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            departureTime\n                                        \n                                \n                                \n                                        \n                                            stopId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        departureTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Route } from '../../models/route';\nimport { StopTime } from '../../models/stop-time';\nimport { Trip } from '../../models/trip';\nimport { RouteService } from '../../services/route.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport { TripService } from '../../services/trip.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TravelDirection } from '../../enums/travel-direction';\nimport { map, Observable } from 'rxjs';\nimport { Stop } from '../../models/stop';\nimport { MapDirectionsService } from '@angular/google-maps';\nimport { Console } from 'console';\nimport { StopService } from '../../services/stop.service';\nimport Snackbar from 'awesome-snackbar';\nimport { TranslocoService } from '@ngneat/transloco';\n\n\n@Component({\n  selector: 'app-trip-edit',\n  templateUrl: './trip-edit.component.html',\n  styleUrls: ['./trip-edit.component.css']\n})\nexport class TripEditComponent implements OnInit {\n\n  /**\n   * Options to be used by the Google-Map field.\n   */\n  mapOptions: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  };\n  /**\n   * Options to be used by the Directions-Renderer field.\n   */\n  directionsOptions: google.maps.DirectionsRendererOptions = {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field.\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n  /**\n   * Zoom level for the map to use at the start.\n   */\n  zoom = 11;\n  /**\n   * Coordinates for the map to be centered on.\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * List of markers that represents the stops of the route to edit.\n   */\n  markers: Array = new Array();\n  /**\n   * Holds the result from the call of the Directions API made from the list of markers.\n   */\n  directionsResults$!: Observable;\n\n  /**\n   * TransportType for reverse mapping in the html.\n   */\n  TravelDirection = TravelDirection;\n  /**\n   * All the existent stops.\n   */\n  AllStops: Stop[] = [];\n  /**\n   * All the values of the TransportType enum.\n   */\n  directions: number[] = Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v));\n\n  /**\n   * Form data to be viewed in the page\n   */\n  editRouteForm = this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  });\n\n  /**\n   * The trip the user has currently selected.\n   */\n  public selectedTrip!: Trip;\n  /**\n   * The stops belonging to the current selected trip.\n   */\n  public tripStops: StopTime[] = [];\n  /**\n   * A map with the all the trips of the route, with a list of their stop times.\n   */\n  public tripsStopsMap: Map = new Map();\n\n  /**\n * Constructor for the component.\n * Gets the route whose Id matches the one in the URL and passes its info to the form.\n * Also gets all the existent stops.\n * @param {ActivatedRoute} actRoute Gives information about the current route.\n * @param {TripService} tripService Service that communicates with the server and has various operations about Trips.\n * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n * @param {FormBuilder} formBuilder Builds form data. \n * @param {Router} router Router.\n * @param {MapDirectionsService} mapDirectionsService Google service of the Directions API.\n * @param {StopService} stopService Service that communicates with the server and has various operations about Stops.\n * @param {TranslocoService} translocoService Service that perform the translation of the text.\n */\n  constructor(private urlRoute: ActivatedRoute, private tripService: TripService, private stopTimeService: StopTimeService,\n    private formBuilder: FormBuilder, private router: Router, private mapDirectionsService: MapDirectionsService,\n    private stopService: StopService, private translocoService: TranslocoService) { }\n\n  ngOnInit(): void {\n    const id = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.tripService.getTrip(id)\n      .subscribe((trip) => {\n        this.stopTimeService.getStopsOfTrip(trip.tripId).subscribe((stops) => {\n          stops.forEach(stop => {\n            this.tripStops!.push(new StopTime(stop.tripId, stop.arrivalTime, stop.departureTime, stop.stopId, stop.stopSequence, stop.shapeDistTraveled, stop.trip, stop.stop));\n          })\n\n          this.selectedTrip = new Trip(trip.tripId, trip.tripHeadsign, trip.routeId, trip.serviceId, trip.direction, trip.shapeId);\n          this.editRouteForm.controls.tripName.patchValue(this.selectedTrip.tripHeadsign);\n          this.editRouteForm.controls.tripTransportDirection.patchValue(this.selectedTrip.direction);\n          this.editRouteForm.controls.stops.patchValue(this.tripStops!);\n\n\n          this.tripStops!.forEach(stopTime => {\n            const stopForm = this.formBuilder.group({\n              stopId: [stopTime.stopId, Validators.required],\n              departureTime: [stopTime.getHoursAndMinutesString(), Validators.required]\n              });\n            this.stops.push(stopForm);\n          });\n\n          console.log(this.tripStops!);\n          \n        }, (error) => { console.log(error) }, () => {\n          this.stopService.getStops().subscribe(result => {\n            this.AllStops = result;\n            this.updateMap();\n        });\n        });\n\n        \n      });\n  }\n\n  get stops() {\n    return this.editRouteForm.controls[\"stops\"] as FormArray;\n  }\n\n  /**\n * Adds a form to the page that lets the user select the details for a stop in the route.\n */\n  addStop() {\n    const stopForm = this.formBuilder.group({\n      stopId: '',\n      departureTime: ''\n    });\n\n    this.stops.push(stopForm);\n  }\n\n  /**\n   * Removes the form of one of the route stops.\n   * @param {number} stopIndex The form index to delete.\n   */\n  removeStop(stopIndex: number) {\n    this.stops.removeAt(stopIndex);\n    this.updateMap();\n  }\n\n  /**\n   * Casts a AbstractControl form to a FormGroup.\n   */\n  toFormGroup = (form: AbstractControl) => form as FormGroup;\n\n  /**\n   * Updates the map in the page by adding/removing markers and linking them together in one route.\n   */\n  updateMap() {\n    this.addMarkers();\n    this.linkMarkers();\n  }\n\n  /**\n   * Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n   */\n  private addMarkers() {\n    this.markers.splice(0);\n\n    this.editRouteForm.value.stops?.forEach(s => {\n      var stop = (s as formStop);\n      this.AllStops.forEach(compStop => {\n        if (compStop.stopId == stop.stopId) this.markers.push(new google.maps.LatLng(compStop.stopLat, compStop.stopLon));\n      });\n    });\n    this.center = {\n      lat: this.markers[Math.floor(this.markers.length / 2)].lat(),\n      lng: this.markers[Math.floor(this.markers.length / 2)].lng()\n    }\n  }\n\n  /**\n   * Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n   */\n  private linkMarkers() {\n    const request: google.maps.DirectionsRequest = {\n      origin: this.markers[0],\n      waypoints: this.createWaypoints(),\n      destination: this.markers[this.markers.length - 1],\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  private createWaypoints(): google.maps.DirectionsWaypoint[] {\n    var waypoints: google.maps.DirectionsWaypoint[] = [];\n    const MAX_WAYPOINTS: number = 25\n    var addWaypoint: boolean = true;\n    this.tripStops?.slice(1, this.tripStops.length - 1).forEach((stopTime) => {\n      if (waypoints.length  2) {\n        const stops = this.editRouteForm.value.stops as formStop[];\n        if (stops.every(s => s.stopId.length != 0 && s.departureTime.length != 0)) {\n          let trip: Trip = new Trip(this.selectedTrip.tripId, this.editRouteForm.controls.tripName.value!, this.selectedTrip.routeId,\n            this.selectedTrip.serviceId, Number(this.editRouteForm.controls.tripTransportDirection.value!), this.selectedTrip.shapeId)\n\n          this.tripService.editTrip(trip).subscribe();\n\n          let idx = 1;\n          this.editRouteForm.value.stops.forEach(s => {\n            var stop = (s as formStop);\n            var date = new Date();\n            date.setUTCHours(Number(stop.departureTime.substring(0, 2)));\n            date.setUTCMinutes(Number(stop.departureTime.substring(3, 5)));\n            let stopTime: StopTime = new StopTime(trip.tripId, date, date, stop.stopId, idx, 0.0);\n            this.stopTimeService.editStopTime(stopTime.tripId, idx, stopTime).subscribe(() => { }, () => {\n              this.stopTimeService.addStopTime(stopTime).subscribe();\n            });\n            idx++;\n          });\n\n          this.router.navigate(['/', 'route-management']);\n        } else {\n          new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message-empty-stops'), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      } else {\n        new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('login.list.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n      }\n    }\n     \n\n\n\n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n/**\n * Interface for the stop form\n */\ninterface formStop {\n  stopId: string,\n  departureTime: string\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getBaseUrl\n                        \n                    \n                \n            \n            \n                \ngetBaseUrl()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTraveller_Dashboard\nThis project was generated with Angular CLI version 12.0.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslocoRootModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavMenuComponent\n\nNavMenuComponent\n\nAppModule -->\n\nNavMenuComponent->AppModule\n\n\n\n\n\nRouteCreateComponent\n\nRouteCreateComponent\n\nAppModule -->\n\nRouteCreateComponent->AppModule\n\n\n\n\n\nRouteDetailsComponent\n\nRouteDetailsComponent\n\nAppModule -->\n\nRouteDetailsComponent->AppModule\n\n\n\n\n\nRouteEditComponent\n\nRouteEditComponent\n\nAppModule -->\n\nRouteEditComponent->AppModule\n\n\n\n\n\nRouteManagementComponent\n\nRouteManagementComponent\n\nAppModule -->\n\nRouteManagementComponent->AppModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nAppModule -->\n\nStatisticsComponent->AppModule\n\n\n\n\n\nStopCreateComponent\n\nStopCreateComponent\n\nAppModule -->\n\nStopCreateComponent->AppModule\n\n\n\n\n\nTripCreateComponent\n\nTripCreateComponent\n\nAppModule -->\n\nTripCreateComponent->AppModule\n\n\n\n\n\nTripEditComponent\n\nTripEditComponent\n\nAppModule -->\n\nTripEditComponent->AppModule\n\n\n\n\n\nUserDetailsComponent\n\nUserDetailsComponent\n\nAppModule -->\n\nUserDetailsComponent->AppModule\n\n\n\n\n\nUsersManagementComponent\n\nUsersManagementComponent\n\nAppModule -->\n\nUsersManagementComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nTranslocoRootModule\n\nTranslocoRootModule\n\nAppModule -->\n\nTranslocoRootModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            providers   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
