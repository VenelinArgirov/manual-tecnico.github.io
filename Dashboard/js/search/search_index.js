var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Agency.html",[0,0.01,1,1.841]],["body/classes/Agency.html",[0,0.019,1,3.771,2,2.201,3,0.27,4,0.239,5,0.239,6,3.949,7,0.59,8,1.841,9,0.239,10,0.844,11,5.84,12,7.071,13,7.071,14,7.071,15,7.071,16,7.071,17,0.504,18,5.789,19,0.904,20,0.843,21,5.789,22,0.55,23,0.021,24,0.701,25,0.413,26,0.55,27,4.617,28,1.138,29,4.617,30,5.789,31,2.759,32,1.075,33,7.15,34,4.617,35,4.398,36,5.789,37,5.789,38,1.496,39,4.951,40,4.617,41,5.789,42,5.789,43,4.617,44,2.308,45,0.27,46,3.949,47,4.617,48,4.617,49,4.617,50,4.617,51,4.617,52,0.049,53,0.049]],["title/injectables/AgencyService.html",[54,0.712,55,2.288]],["body/injectables/AgencyService.html",[0,0.018,1,2.324,3,0.267,4,0.236,5,0.236,7,0.735,9,0.236,17,0.502,20,0.75,22,0.686,23,0.021,24,0.638,25,0.336,26,0.686,32,1.068,45,0.267,52,0.049,53,0.049,54,1.131,55,3.634,56,1.932,57,3.911,58,1.008,59,6.608,60,1.039,61,2.742,62,2.05,63,2.66,64,4.574,65,2.567,66,2.295,67,2.742,68,2.742,69,0.978,70,4.574,71,1.008,72,2.115,73,2.579,74,2.567,75,4.574,76,2.579,77,1.886,78,2.579,79,2.579,80,2.579,81,2.295,82,2.822,83,0.576,84,1.387,85,0.507,86,2.05,87,2.579,88,1.247,89,3.149,90,1.631,91,1.545,92,0.71,93,1.12,94,1.182,95,1.12,96,3.475,97,0.95,98,0.625,99,1.309,100,2.889,101,4.574,102,2.05,103,2.579,104,1.005,105,1.932,106,1.932,107,2.05,108,2.579,109,1.932,110,2.05,111,2.579,112,2.579,113,2.579,114,2.05,115,2.579,116,2.295,117,2.431,118,2.05,119,2.05,120,2.05,121,2.05,122,2.05,123,0.545,124,1.932,125,1.387,126,0.667,127,2.18,128,2.18,129,2.18,130,2.18,131,2.18,132,2.18,133,2.18]],["title/components/AppComponent.html",[134,0.316,135,0.988]],["body/components/AppComponent.html",[0,0.013,3,0.272,4,0.241,5,0.241,9,0.241,10,0.849,17,0.371,19,0.555,20,0.793,22,0.555,23,0.021,24,0.704,25,0.34,26,0.555,45,0.272,52,0.049,53,0.049,58,1.019,71,1.019,83,0.508,85,0.516,91,1.966,98,0.636,99,1.21,123,0.555,134,0.554,135,1.813,136,1.966,137,1.661,138,1.661,139,1.661,140,3.982,141,1.661,142,2.142,143,2.04,144,1.674,145,5.82,146,4.01,147,6.651,148,6.651,149,4.657,150,2.95,151,5.82,152,4.657,153,2.076,154,4.657,155,1.755,156,1.755,157,1.573,158,6.349,159,2.532,160,1.661,161,1.863,162,2.076,163,1.661,164,2.017,165,1.661,166,1.661,167,1.339,168,1.661,169,1.661,170,1.204,171,1.661,172,1.339,173,1.661,174,1.661,175,1.339,176,0.97,177,2.264,178,1.339,179,2.076,180,1.339,181,2.076,182,1.339,183,1.661,184,1.339,185,1.661,186,1.339,187,1.023,188,1.27,189,1.279,190,1.27,191,1.339,192,1.339,193,1.339,194,1.413,195,1.661,196,1.661]],["title/modules/AppModule.html",[197,2.753,198,2.288]],["body/modules/AppModule.html",[0,0.009,3,0.197,4,0.174,5,0.174,23,0.021,35,3.571,45,0.197,52,0.04,53,0.04,83,0.656,84,1.023,85,0.374,134,0.615,135,1.908,157,1.139,159,1.833,167,1.881,170,1.691,172,1.833,175,1.881,176,0.853,178,1.881,180,1.881,182,1.881,184,1.881,186,1.881,187,0.741,188,1.784,189,1.033,190,1.784,191,1.881,192,1.881,193,0.969,194,1.426,198,4.733,199,1.833,200,2.968,201,2.883,202,2.883,203,2.883,204,2.883,205,2.883,206,3.724,207,2.857,208,2.24,209,2.561,210,2.321,211,3.371,212,4.7,213,2.968,214,4.019,215,3.571,216,3.371,217,3.571,218,2.561,219,2.968,220,4.7,221,5.411,222,1.271,223,4.019,224,3.371,225,1.969,226,4.019,227,2.561,228,5.411,229,3.371,230,4.7,231,3.371,232,1.271,233,4.7,234,3.371,235,3.371,236,4.7,237,3.371,238,4.7,239,2.561,240,5.411,241,3.371,242,4.7,243,3.371,244,2.561,245,4.7,246,3.371,247,4.7,248,3.371,249,4.7,250,3.371,251,4.7,252,3.371,253,4.7,254,3.371,255,4.7,256,3.371,257,4.7,258,3.371,259,4.7,260,3.371,261,1.424,262,4.7,263,1.713,264,1.713,265,4.7,266,2.561,267,4.7,268,3.371,269,4.7,270,3.371,271,2.883,272,3.371,273,2.561,274,3.371,275,3.371,276,2.561,277,4.7,278,5.854,279,2.561,280,4.7,281,3.371,282,3.371,283,3.371,284,2.883,285,4.819,286,3.371,287,3.371,288,2.561,289,2.561,290,2.561,291,5.411,292,4.7,293,2.321,294,2.321,295,4.7,296,2.561,297,3.371,298,2.561,299,3.371,300,2.561,301,3.371,302,3.371,303,3.371,304,1.833,305,2.883,306,3.371,307,3.371,308,4.089,309,4.7,310,1.511,311,5.87,312,3.371,313,3.371,314,2.746,315,4.7,316,3.371]],["title/modules/AppServerModule.html",[197,2.753,317,2.495]],["body/modules/AppServerModule.html",[0,0.015,3,0.314,4,0.278,5,0.278,23,0.021,45,0.314,52,0.054,53,0.054,69,0.834,83,0.621,85,0.595,135,1.989,198,4.562,199,2.919,200,4.009,208,3.025,209,4.08,210,3.697,214,5.428,215,4.822,217,4.08,219,4.009,271,4.593,317,5.022,318,4.593,319,5.37,320,5.37,321,5.37,322,6.347,323,6.347,324,5.37,325,2.559,326,5.37,327,5.37,328,5.37]],["title/guards/AuthGuard.html",[285,2.495,329,2.288]],["body/guards/AuthGuard.html",[0,0.016,3,0.268,4,0.237,5,0.237,7,0.736,9,0.237,17,0.502,20,0.686,22,0.686,23,0.021,24,0.638,25,0.337,26,0.686,45,0.268,52,0.049,53,0.049,54,1.132,58,1.009,60,0.756,69,0.894,71,0.802,72,2.016,83,0.576,85,0.507,88,1.248,90,1.633,91,1.546,92,0.894,97,1.091,98,0.626,99,1.197,134,0.502,150,3.015,153,2.054,157,1.546,159,3.837,176,0.964,207,3.163,225,2.675,285,3.965,311,5.825,329,2.892,330,4.579,331,3.915,332,3.915,333,4.579,334,4.924,335,2.581,336,4.551,337,2.492,338,3.13,339,4.579,340,6.61,341,6.953,342,6.61,343,4.579,344,2.432,345,3.637,346,4.175,347,2.926,348,4.375,349,6.61,350,2.016,351,3.637,352,2.374,353,1.747,354,4.337,355,2.792,356,2.296,357,5.759,358,5.759,359,6.3,360,2.182,361,3.478,362,1.183,363,4.579,364,4.579,365,3.915,366,4.579]],["title/interfaces/AuthResponse.html",[367,1.159,368,2.117]],["body/interfaces/AuthResponse.html",[0,0.015,3,0.231,4,0.205,5,0.205,9,0.205,10,0.764,17,0.316,19,0.869,23,0.021,25,0.344,28,1.03,31,2.801,32,0.735,44,1.578,45,0.344,52,0.044,53,0.044,60,1.104,66,1.578,69,0.614,74,1.976,77,1.023,83,0.595,84,1.2,85,0.439,92,0.912,97,1.104,98,0.541,123,0.625,126,0.912,134,0.545,142,1.138,143,1.079,144,1.138,150,2.642,153,2.231,157,1.337,159,3.635,170,1.023,176,0.857,207,2.804,222,1.492,225,2.312,310,1.774,335,1.774,336,2.725,337,2.215,338,2.151,344,1.672,345,2.499,346,3.951,350,1.266,351,2.499,352,1.492,353,1.898,354,2.725,355,1.672,356,1.578,362,1.023,367,1.677,368,3.433,369,2.312,370,2.725,371,4.753,372,4.753,373,1.677,374,2.499,375,3.101,376,1.672,377,2.349,378,2.358,379,1.266,380,2.214,381,1.672,382,3.007,383,1.2,384,3.007,385,2.725,386,2.725,387,3.007,388,1.492,389,2.498,390,4.465,391,3.982,392,2.151,393,3.007,394,3.007,395,3.007,396,3.007,397,2.151,398,2.499,399,2.151,400,2.151,401,1.672,402,2.663,403,2.499,404,3.608,405,3.007,406,1.578,407,1.411,408,2.499,409,3.007,410,3.31,411,3.007,412,1.266,413,1.2,414,3.007,415,3.433,416,3.982,417,2.214,418,3.007,419,4.465,420,3.007,421,3.007,422,3.007,423,1.411,424,3.007,425,3.007,426,1.411,427,3.007,428,3.007,429,3.007,430,3.007,431,3.007,432,1.869,433,3.007,434,3.007,435,2.849,436,3.982,437,3.007,438,3.007,439,2.725,440,3.007,441,3.007,442,3.007,443,3.007,444,3.007,445,3.982,446,3.007,447,3.007,448,3.007,449,3.007,450,1.578,451,1.492,452,1.266,453,1.774,454,2.011,455,1.672,456,1.578,457,1.2,458,1.411,459,1.578,460,2.499,461,3.062,462,1.774,463,2.499,464,3.007]],["title/injectables/AuthService.html",[54,0.712,207,1.624]],["body/injectables/AuthService.html",[0,0.01,3,0.208,4,0.184,5,0.184,7,0.765,9,0.184,10,0.711,17,0.444,19,0.663,20,0.805,22,0.748,23,0.021,24,0.695,25,0.325,26,0.663,32,1.311,45,0.208,52,0.041,53,0.041,54,0.958,56,1.501,58,0.854,60,1.069,61,2.323,62,1.592,63,2.442,65,2.364,66,1.943,67,2.323,68,2.323,69,0.974,71,0.854,72,1.56,73,2.184,74,2.364,76,2.184,77,1.81,78,2.184,79,2.184,80,2.184,81,1.943,82,2.493,83,0.522,84,1.078,85,0.394,86,1.592,87,2.184,88,0.969,90,1.267,91,1.2,92,0.757,93,0.87,95,0.87,97,1.069,98,0.485,99,1.304,102,1.592,103,2.184,104,0.781,105,1.501,106,1.501,107,1.592,108,2.184,109,1.501,110,1.592,111,2.184,112,2.184,113,2.184,114,1.592,115,2.184,116,1.943,117,2.803,118,1.592,119,1.592,120,1.592,121,1.592,122,1.592,123,0.748,124,1.501,125,1.078,126,0.811,134,0.425,153,2.135,155,2.364,156,2.64,159,2.649,176,0.711,207,2.184,284,3.038,329,3.078,334,4.168,344,2.855,345,3.078,346,4.33,347,2.476,348,3.703,350,1.56,351,3.078,352,2.256,353,1.478,356,1.943,368,2.076,392,3.674,404,2.446,432,1.984,435,2.649,465,3.038,466,2.816,467,5.563,468,5.563,469,5.563,470,5.675,471,5.563,472,4.874,473,4.874,474,3.553,475,4.874,476,3.553,477,4.874,478,4.874,479,4.874,480,4.874,481,4.168,482,6.273,483,3.553,484,2.184,485,3.553,486,4.874,487,3.553,488,3.078,489,5.563,490,5.987,491,4.874,492,3.553,493,4.874,494,5.563,495,3.553,496,3.553,497,5.563,498,3.553,499,3.553,500,3.553,501,3.553,502,3.553,503,1.501,504,3.553,505,3.553,506,3.553,507,3.553,508,3.553,509,3.553,510,3.553,511,3.553,512,3.553,513,3.553]],["title/components/LandingPageComponent.html",[134,0.316,167,1.042]],["body/components/LandingPageComponent.html",[0,0.006,3,0.27,4,0.108,5,0.108,7,0.267,9,0.239,10,0.48,17,0.167,19,0.728,20,0.6,22,0.393,23,0.021,24,0.513,25,0.294,26,0.393,28,0.801,31,2.665,45,0.122,52,0.028,53,0.028,58,0.577,60,0.882,71,0.577,83,0.355,85,0.232,92,0.511,97,0.345,98,0.286,104,1.51,117,1.392,123,0.486,134,0.355,135,0.57,136,1.113,137,0.746,138,0.746,139,0.746,141,0.746,142,1.924,143,1.838,144,0.947,146,3.66,160,0.746,161,1.054,162,1.175,163,0.746,164,1.403,165,0.746,166,0.746,167,1.33,168,2.29,169,0.746,170,0.541,171,0.746,172,0.601,173,0.746,174,0.746,175,0.601,176,0.674,177,1.454,178,0.601,179,1.175,180,0.601,181,1.175,182,0.601,183,0.746,184,0.601,185,0.746,186,0.601,187,0.46,188,0.57,189,0.724,190,0.57,191,0.601,192,0.601,193,0.601,194,0.634,195,0.746,196,0.746,300,4.06,337,1.242,353,1.236,361,4.249,362,0.852,373,1.304,378,1.743,379,0.669,383,0.999,397,1.791,398,2.081,399,1.791,400,2.216,401,0.883,402,2.35,403,2.574,407,2.067,408,1.321,410,2.081,412,1.48,413,1.236,423,1.794,450,2.378,451,1.743,452,2.173,455,0.883,456,1.844,457,2.105,458,2.387,460,2.081,461,3.122,462,1.477,463,2.081,503,0.883,514,0.788,515,4.57,516,1.788,517,3.295,518,3.295,519,4.076,520,3.295,521,2.503,522,1.788,523,3.295,524,2.091,525,2.091,526,1.44,527,2.091,528,2.091,529,1.788,530,1.788,531,1.788,532,5.795,533,2.091,534,3.295,535,2.091,536,2.682,537,3.08,538,3.514,539,2.707,540,2.74,541,2.806,542,2.395,543,1.57,544,2.665,545,2.398,546,3.486,547,2.091,548,3.295,549,2.091,550,2.519,551,2.362,552,1.722,553,2.216,554,3.955,555,5.099,556,2.519,557,3.68,558,2.712,559,2.629,560,3.097,561,4.956,562,2.524,563,2.56,564,2.091,565,2.574,566,2.35,567,3.955,568,2.091,569,2.091,570,4.076,571,3.295,572,2.592,573,3.68,574,2.507,575,1.788,576,1.625,577,3.636,578,3.184,579,2.627,580,1.791,581,3.486,582,2.081,583,3.375,584,2.503,585,1.589,586,1.222,587,1.589,588,3.823,589,3.955,590,3.464,591,5.032,592,3.68,593,2.503,594,1.137,595,1.589,596,3.295,597,3.464,598,3.295,599,2.817,600,3.295,601,2.091,602,4.076,603,2.091,604,3.295,605,2.091,606,2.091,607,4.076,608,2.091,609,2.091,610,3.486,611,3.486,612,2.091,613,3.66,614,1.827,615,1.589,616,3.295,617,2.817,618,4.076,619,3.99,620,4.076,621,5.032,622,3.955,623,3.295,624,4.303,625,3.295,626,2.091,627,4.625,628,2.091,629,3.295,630,2.817,631,2.091,632,2.091,633,2.091,634,2.091,635,2.091,636,2.091,637,2.091,638,2.091,639,2.091,640,2.091,641,2.091,642,3.295,643,3.295,644,2.091,645,2.091,646,2.091,647,2.091,648,2.091,649,2.091,650,2.091,651,3.514,652,2.091,653,4.076,654,3.486,655,2.597,656,3.097,657,2.091,658,2.398,659,2.091,660,2.091,661,3.295,662,2.081,663,2.081,664,2.091,665,3.486,666,2.091,667,2.091,668,2.091,669,2.091,670,2.091,671,2.091,672,2.091,673,2.091,674,3.295,675,3.295,676,2.091,677,2.091,678,2.091,679,3.295,680,2.091,681,4.303,682,2.362,683,4.625,684,2.091,685,2.091,686,4.076,687,2.091,688,2.091,689,2.091,690,2.35,691,1.788,692,2.091,693,2.091,694,2.091,695,1.791,696,2.091,697,2.091,698,2.091,699,2.091,700,1.589,701,2.091,702,4.076,703,2.091,704,4.076,705,2.091,706,1.44,707,2.503,708,2.817,709,5.099,710,3.295,711,2.091,712,2.091,713,6.104,714,4.076,715,2.091,716,0.834,717,2.817,718,2.071,719,2.091,720,2.091,721,5.412,722,4.076,723,6.225,724,5.032,725,4.625,726,2.091,727,1.222,728,3.295,729,4.076,730,2.817,731,4.076,732,2.091,733,2.091,734,2.091,735,2.091,736,3.295,737,2.091,738,4.625,739,1.788,740,2.091,741,3.486,742,2.091,743,2.091,744,2.091,745,2.091,746,1.321,747,2.091,748,2.091,749,2.091,750,1.321,751,2.091,752,2.091,753,2.091,754,1.242,755,2.091,756,2.091,757,2.091,758,3.295,759,1.788,760,2.091,761,2.091,762,2.091,763,0.997,764,3.486,765,2.091,766,3.295,767,2.091,768,2.091]],["title/components/LoginComponent.html",[134,0.316,170,0.936]],["body/components/LoginComponent.html",[0,0.011,3,0.147,4,0.13,5,0.13,7,0.584,9,0.13,10,0.552,17,0.364,19,0.818,20,0.75,22,0.544,23,0.021,24,0.606,25,0.368,26,0.544,28,0.898,31,2.74,32,0.465,44,1.511,45,0.267,52,0.032,53,0.032,58,0.664,60,1.09,66,1.511,69,0.588,71,0.8,74,1.428,77,1.543,83,0.521,84,0.76,85,0.278,92,0.893,97,0.949,98,0.342,123,0.607,126,0.742,134,0.501,135,0.683,136,1.28,137,0.894,138,0.894,139,0.894,141,0.894,142,1.973,143,1.87,144,1.089,146,1.583,150,2.597,153,1.629,157,0.846,159,3.729,160,0.894,161,1.212,162,1.629,163,0.894,164,1.544,165,0.894,166,0.894,167,0.721,168,0.894,169,0.894,170,1.316,171,0.894,172,0.721,173,0.894,174,0.894,175,0.721,176,0.935,177,1.629,178,0.721,179,1.351,180,0.721,181,1.351,182,0.721,183,0.894,184,0.721,185,0.894,186,0.721,187,0.551,188,0.683,189,0.832,190,0.683,191,0.721,192,0.721,193,0.721,194,0.76,195,0.894,196,0.894,207,2.676,222,0.945,225,1.464,244,2.878,261,1.929,304,2.483,310,1.698,332,2.143,335,1.698,336,2.608,337,2.167,338,2.059,344,1.6,345,2.393,346,1.583,350,0.802,351,2.393,352,0.945,353,1.811,354,1.725,355,1.6,356,1.511,362,0.979,367,1.212,368,2.213,370,1.725,371,1.904,372,1.904,373,1.462,374,1.583,375,2.999,376,1.059,377,2.282,378,2.317,379,0.802,380,1.6,381,1.059,382,2.878,383,1.149,384,3.47,385,1.725,386,2.608,387,3.47,388,1.919,389,2.177,390,4.153,391,4.153,392,1.362,393,1.904,394,1.904,395,3.47,396,3.47,397,2.059,398,2.393,399,2.059,400,2.483,401,2.522,402,2.587,403,2.885,404,3.505,405,2.878,406,1.511,407,1.351,408,1.583,409,1.904,410,2.393,411,1.904,412,1.629,413,1.544,414,1.904,415,3.747,416,2.878,417,1.6,418,1.904,419,4.671,420,1.904,421,1.904,422,2.878,423,1.629,424,2.878,425,2.878,426,1.351,427,2.878,428,2.878,429,2.878,430,2.878,431,2.878,432,1.351,433,1.904,434,1.904,435,2.059,436,2.878,437,1.904,438,1.904,439,1.725,440,1.904,441,1.904,442,1.904,443,1.904,444,1.904,445,2.878,446,1.904,447,1.904,448,1.904,449,1.904,450,0.999,451,2.317,452,2.195,453,1.123,454,1.273,455,1.059,456,1.511,457,1.865,458,2.244,459,2.03,460,2.393,461,3.194,462,2.45,463,2.393,464,1.904,514,0.945,521,2.878,526,1.725,536,2.372,537,2.96,538,1.904,539,2.558,540,2.771,542,1.123,543,2.177,544,1.194,545,1.194,550,2.658,551,2.309,552,1.059,553,1.362,556,2.522,557,2.608,558,2.597,559,2.709,562,1.821,563,2.18,565,2.885,566,1.273,572,2.634,574,1.123,576,2.558,577,2.213,578,1.725,579,2.317,582,1.583,583,2.393,584,2.878,585,1.904,586,1.464,587,1.904,592,2.608,593,2.878,597,2.608,613,2.885,614,2.45,655,1.123,658,1.194,690,2.587,706,4.111,716,0.999,718,1.273,739,2.143,746,1.583,750,1.583,763,2.177,769,3.789,770,3.789,771,2.506,772,2.506,773,2.506,774,2.506,775,2.506,776,2.506,777,2.506,778,2.506,779,1.194,780,2.878,781,5.467,782,5.091,783,3.789,784,2.608,785,3.24,786,2.506,787,3.906,788,2.506,789,2.393,790,2.608,791,3.145,792,2.608,793,3.145,794,1.725,795,2.506,796,2.506,797,1.904,798,1.362,799,2.483,800,2.506,801,1.583,802,2.506,803,2.506,804,1.904,805,1.725,806,2.506,807,1.194,808,5.467]],["title/interfaces/MostUsedTransportResponse.html",[367,1.159,809,2.495]],["body/interfaces/MostUsedTransportResponse.html",[0,0.015,3,0.25,4,0.221,5,0.221,9,0.221,10,0.803,17,0.341,19,0.727,23,0.021,25,0.357,32,1.29,38,1.665,45,0.25,52,0.047,53,0.047,54,1.083,60,0.705,63,2.077,65,2.077,69,0.663,72,1.763,73,1.915,74,2.299,76,1.915,77,1.796,78,1.915,79,1.915,80,1.915,81,1.704,82,2.47,83,0.582,84,1.296,85,0.474,86,1.915,87,2.47,88,1.165,90,1.524,91,1.443,92,0.663,93,1.047,94,1.104,95,1.047,97,0.909,98,0.584,99,1.524,100,4.07,102,3.061,103,2.47,104,0.939,105,1.805,106,1.805,107,1.915,108,2.47,109,1.805,110,1.915,111,2.47,112,2.47,113,2.47,114,1.915,115,2.47,116,2.197,117,2.327,118,1.915,119,1.915,120,1.915,121,1.915,122,1.915,123,0.657,124,1.805,125,1.296,126,0.803,127,2.036,128,2.036,129,2.036,130,2.036,131,2.036,132,2.036,133,2.036,193,1.754,310,2.47,367,1.367,369,2.496,402,2.8,526,3.794,754,1.61,809,3.794,810,3.246,811,4.896,812,2.8,813,2.171,814,3.654,815,1.915,816,3.654,817,2.496,818,4.712,819,3.99,820,3.219,821,3.274,822,3.654,823,3.654,824,4.712,825,3.654,826,3.654,827,4.712,828,3.654,829,3.654,830,4.712,831,3.246,832,3.654,833,3.654,834,3.246,835,2.323,836,3.654,837,3.654,838,2.995,839,3.654,840,3.246,841,3.246,842,2.941,843,3.654,844,3.654,845,3.654]],["title/components/NavMenuComponent.html",[134,0.316,172,1.042]],["body/components/NavMenuComponent.html",[0,0.013,3,0.193,4,0.17,5,0.17,7,0.591,9,0.17,10,0.674,17,0.426,19,0.831,20,0.775,22,0.637,23,0.021,24,0.677,25,0.38,26,0.551,28,1.051,31,3.098,32,0.859,45,0.193,52,0.039,53,0.039,58,0.81,60,1.073,71,0.81,83,0.505,85,0.365,92,0.9,97,0.763,98,0.45,123,0.637,134,0.552,135,0.898,136,1.562,137,1.175,138,1.175,139,1.175,141,1.175,142,2.066,143,1.95,144,1.33,160,1.175,161,1.855,162,1.65,163,1.175,164,1.758,165,1.175,166,1.175,167,0.947,168,1.175,169,1.175,170,0.851,171,1.175,172,1.666,173,2.486,174,1.175,175,0.947,176,0.845,177,1.906,178,0.947,179,1.65,180,0.947,181,1.65,182,0.947,183,1.175,184,0.947,185,1.175,186,0.947,187,0.724,188,0.898,189,1.016,190,0.898,191,0.947,192,0.947,193,0.947,194,1.852,195,1.175,196,1.175,207,2.913,225,1.925,273,5.04,337,1.743,338,1.791,344,1.954,361,3.514,378,2.45,379,1.054,383,1.403,397,2.514,398,3.66,399,2.514,400,2.905,401,1.392,402,2.945,403,3.375,407,2.405,408,2.081,410,2.921,413,1.403,415,2.702,423,1.175,435,2.905,452,1.71,457,1.758,458,1.906,460,2.921,461,3.566,462,2.597,463,2.921,466,2.524,470,5.558,503,1.954,514,1.242,521,3.514,522,2.817,526,2.268,529,2.817,530,2.817,531,2.817,536,1.743,537,2.736,539,2.131,540,2.311,541,2.268,542,1.477,550,1.954,551,1.954,552,2.257,553,1.791,554,3.955,556,1.392,558,2.257,559,1.954,562,2.131,563,2.434,572,1.844,574,1.477,576,1.314,577,3.122,578,2.268,579,1.743,582,2.081,583,2.921,584,3.514,585,2.503,586,1.925,587,2.503,588,2.503,594,1.791,595,2.503,614,1.477,700,2.503,716,1.314,717,4.57,718,1.674,721,2.817,741,3.955,750,2.081,763,1.57,804,2.503,846,5.673,847,2.817,848,4.625,849,5.344,850,4.625,851,6.104,852,5.344,853,4.625,854,3.295,855,3.295,856,3.295,857,3.295,858,3.295,859,4.625,860,4.625,861,3.184,862,3.184,863,3.295,864,3.295,865,3.295,866,3.295,867,3.295,868,3.295,869,3.295,870,3.295,871,3.295,872,3.295,873,3.295,874,3.295,875,3.295,876,4.625,877,3.295,878,4.57,879,4.625,880,3.295,881,3.295,882,3.295,883,2.817,884,1.925,885,3.295,886,3.295,887,3.295,888,3.295,889,3.295]],["title/classes/Route.html",[0,0.01,176,0.528]],["body/classes/Route.html",[0,0.018,1,3.764,2,1.95,3,0.239,4,0.212,5,0.212,7,0.523,8,2.136,9,0.212,10,0.781,11,5.881,17,0.476,19,0.885,20,0.849,22,0.488,23,0.021,24,0.729,25,0.419,26,0.488,28,1.246,38,1.824,45,0.239,46,3.499,52,0.045,53,0.045,58,0.938,71,0.717,83,0.467,99,1.114,104,1.177,126,0.781,164,1.625,176,1.083,187,0.899,754,2.252,819,3.13,835,2.912,890,3.499,891,5.974,892,3.576,893,6.878,894,6.878,895,6.878,896,2.878,897,6.338,898,5.358,899,2.851,900,5.358,901,4.07,902,4.092,903,4.092,904,4.092,905,5.358,906,3.13,907,3.703,908,3.703,909,4.092,910,4.092,911,5.358,912,5.358,913,4.092,914,4.581,915,4.581,916,4.092,917,3.688,918,4.092,919,5.358,920,4.581,921,5.358,922,2.817,923,4.092,924,4.092,925,4.092,926,4.092,927,5.358,928,4.092,929,4.092,930,4.092,931,4.092,932,4.092,933,4.092,934,5.358,935,4.092,936,4.092,937,4.092]],["title/components/RouteCreateComponent.html",[134,0.316,175,1.042]],["body/components/RouteCreateComponent.html",[0,0.012,1,2.978,3,0.295,4,0.153,5,0.153,7,0.379,9,0.153,10,0.625,17,0.402,20,0.769,22,0.353,23,0.021,24,0.729,25,0.357,26,0.353,28,0.843,38,1.668,44,1.71,45,0.173,52,0.036,53,0.036,55,4.153,58,0.751,60,0.832,69,0.857,71,0.883,83,0.582,85,0.328,88,0.808,89,2.039,92,0.857,93,1.353,94,1.427,95,1.353,96,4.902,97,0.911,98,0.405,104,1.288,123,0.353,126,0.735,134,0.533,135,0.808,136,1.448,137,1.057,138,1.057,139,1.057,141,1.057,142,2.026,143,1.921,144,1.233,150,2.856,155,1.899,156,1.899,157,1,160,1.057,161,1.767,162,1.529,163,1.057,164,1.675,165,1.057,166,1.057,167,0.852,168,1.057,169,1.057,170,0.766,171,1.057,172,0.852,173,1.057,174,1.057,175,1.588,176,1.05,177,1.797,178,0.852,179,1.529,180,0.852,181,1.529,182,0.852,183,1.057,184,0.852,185,1.057,186,0.852,187,1.107,188,0.808,189,0.942,190,0.808,191,0.852,192,0.852,193,0.852,194,1.3,195,1.057,196,1.057,222,1.117,232,1.616,290,4.995,314,3.226,325,1.412,353,1.778,360,2.043,362,1.108,373,1.612,375,1.412,376,1.251,383,1.3,388,2.517,389,2.043,412,1.767,413,1.853,417,2.725,423,1.797,426,2.09,451,1.117,452,1.612,457,0.899,466,2.009,484,1.922,503,1.811,514,1.117,536,1.616,539,2.337,540,2.436,542,1.328,543,1.412,544,1.412,545,1.412,550,2.128,551,2.128,552,1.251,558,1.251,559,1.251,562,1.181,563,1.181,566,1.505,572,2.009,574,1.328,576,1.181,579,1.117,580,1.61,594,1.61,614,1.328,655,1.328,658,1.412,716,1.181,718,1.505,727,1.731,779,1.412,798,2.331,799,2.739,807,1.412,812,2.178,813,1.505,815,3.064,842,3.469,884,1.731,896,1.71,938,4.153,939,1.871,940,3.469,941,2.952,942,3.828,943,3.002,944,3.226,945,2.533,946,2.82,947,3.574,948,2.533,949,1.97,950,2.178,951,2.178,952,2.331,953,2.505,954,2.632,955,2.331,956,2.533,957,2.331,958,1.922,959,2.331,960,2.331,961,2.331,962,2.533,963,2.962,964,2.178,965,1.71,966,2.043,967,2.331,968,2.533,969,2.331,970,3.002,971,2.533,972,2.178,973,3.666,974,2.505,975,2.505,976,2.962,977,2.178,978,2.962,979,2.331,980,2.178,981,1.505,982,1.61,983,1.731,984,1.412,985,2.251,986,2.533,987,2.039,988,2.533,989,2.533,990,2.962,991,2.962,992,2.962,993,2.962,994,2.962,995,2.962,996,1.731,997,1.61,998,3.488,999,3.257,1000,3.666,1001,3.666,1002,1.871,1003,1.871,1004,2.251,1005,1.871,1006,1.61,1007,2.039,1008,1.871,1009,1.731,1010,1.731,1011,1.505,1012,3.488,1013,3.257,1014,1.871,1015,1.871]],["title/components/RouteDetailsComponent.html",[134,0.316,178,1.042]],["body/components/RouteDetailsComponent.html",[0,0.009,3,0.27,4,0.108,5,0.108,7,0.267,8,1.313,9,0.108,10,0.48,17,0.325,19,0.249,20,0.809,22,0.486,23,0.021,24,0.592,25,0.38,26,0.486,28,0.411,32,0.992,38,0.851,45,0.122,52,0.028,53,0.028,58,0.577,60,1.072,69,0.829,71,0.979,72,1.304,77,0.54,83,0.543,85,0.232,88,0.57,92,0.899,93,1.309,94,1.381,95,1.309,97,0.882,98,0.285,99,0.434,104,1.31,123,0.486,126,0.845,134,0.466,135,0.57,136,1.112,137,0.745,138,0.745,139,0.745,141,0.745,142,1.924,143,1.808,144,0.947,146,1.32,153,0.745,155,2.014,156,2.014,157,0.706,160,0.745,161,1.054,162,1.174,163,0.745,164,1.62,165,0.745,166,0.745,167,0.601,168,0.745,169,0.745,170,0.54,171,0.745,172,0.601,173,0.745,174,0.745,175,0.601,176,1.05,177,1.453,178,1.329,179,1.174,180,0.601,181,1.174,182,0.601,183,0.745,184,0.601,185,0.745,186,0.601,187,1.31,188,0.57,189,1.481,190,0.57,191,0.601,192,0.601,193,0.601,194,0.634,195,0.745,196,0.745,208,2.397,226,5.098,227,1.587,232,2.184,261,2.257,263,1.062,264,1.062,289,5.19,308,1.923,325,3.213,337,1.742,350,1.991,352,2.014,353,1.236,355,1.391,356,1.313,360,1.569,362,0.851,373,1.304,377,2.254,383,0.999,401,1.391,412,1.479,413,1.62,423,0.745,432,1.453,452,1.953,457,0.634,466,2.523,484,1.476,514,0.788,536,2.014,537,1.476,538,1.587,539,2.377,540,2.31,542,1.826,544,1.941,545,0.996,550,1.953,551,1.953,552,1.391,553,1.79,558,2.124,559,2.124,562,0.833,563,0.833,566,1.062,567,3.484,572,0.833,579,1.536,580,1.136,581,2.815,590,1.438,594,1.79,610,2.815,611,1.787,651,1.587,655,0.936,658,0.996,662,1.32,663,1.32,681,1.787,682,1.391,690,1.062,716,1.313,718,1.673,746,1.32,754,0.788,763,0.996,784,1.438,797,1.587,798,1.79,799,2.215,821,2.714,896,2.229,899,2.257,906,1.923,907,1.221,908,1.221,917,2.267,938,4.314,946,2.518,950,1.673,952,1.79,966,2.203,967,2.513,972,1.673,981,1.062,984,0.996,1002,1.32,1006,1.79,1008,1.32,1009,1.221,1010,1.221,1011,1.062,1014,1.32,1016,1.587,1017,2.761,1018,3.484,1019,2.815,1020,2.573,1021,2.573,1022,2.573,1023,2.38,1024,3.765,1025,3.095,1026,3.095,1027,3.095,1028,2.919,1029,3.512,1030,3.292,1031,2.919,1032,2.919,1033,3.292,1034,1.438,1035,2.672,1036,2.672,1037,3.482,1038,3.292,1039,2.38,1040,3.266,1041,2.07,1042,3.292,1043,3.292,1044,3.292,1045,3.266,1046,3.659,1047,2.089,1048,2.079,1049,1.673,1050,2.079,1051,3.121,1052,2.079,1053,2.7,1054,2.089,1055,3.095,1056,3.292,1057,2.089,1058,2.089,1059,2.079,1060,1.79,1061,2.089,1062,2.089,1063,1.923,1064,2.079,1065,2.079,1066,2.079,1067,3.292,1068,2.089,1069,1.438,1070,1.923,1071,2.089,1072,1.923,1073,2.079,1074,2.079,1075,2.079,1076,2.089,1077,2.904,1078,2.079,1079,2.089,1080,1.79,1081,1.923,1082,2.079,1083,2.079,1084,1.923,1085,1.923,1086,1.923,1087,1.923,1088,1.923,1089,1.923,1090,1.923,1091,2.7,1092,2.089,1093,1.923,1094,1.787,1095,2.089,1096,1.923,1097,2.089,1098,2.089,1099,2.501,1100,2.919,1101,2.501,1102,2.815,1103,2.089,1104,2.089,1105,1.923,1106,1.79,1107,1.569,1108,0.996,1109,1.136,1110,1.136,1111,1.221,1112,1.136,1113,2.089,1114,2.089,1115,2.089,1116,2.089,1117,3.292,1118,2.089,1119,2.089,1120,2.089,1121,2.089,1122,2.089,1123,1.221,1124,1.787,1125,1.438,1126,1.438,1127,2.079,1128,2.079,1129,2.079,1130,2.919,1131,3.374,1132,2.079,1133,2.079,1134,2.089,1135,1.587,1136,1.587,1137,2.089,1138,1.587,1139,2.089,1140,2.089,1141,2.089,1142,1.32,1143,2.089,1144,3.953,1145,2.089,1146,2.089,1147,1.32,1148,1.32,1149,1.32,1150,1.587,1151,1.32,1152,2.089,1153,2.089,1154,1.221,1155,1.221,1156,2.079,1157,1.32,1158,1.221,1159,1.32,1160,1.32,1161,1.32,1162,1.32,1163,2.501,1164,1.587,1165,1.32,1166,1.32,1167,1.32,1168,1.32,1169,1.32,1170,1.32,1171,1.587,1172,1.587,1173,1.587,1174,1.587,1175,1.587,1176,1.587,1177,2.089,1178,3.292,1179,2.089,1180,3.292,1181,3.292,1182,3.484,1183,2.815,1184,3.292,1185,3.292,1186,3.292,1187,2.501,1188,1.391,1189,2.089,1190,1.787,1191,2.089,1192,2.089,1193,2.089,1194,3.095,1195,2.089,1196,2.089,1197,2.089,1198,3.292,1199,2.089,1200,3.484,1201,2.089]],["title/components/RouteEditComponent.html",[134,0.316,180,1.042]],["body/components/RouteEditComponent.html",[0,0.011,1,2.911,3,0.285,4,0.145,5,0.145,7,0.358,9,0.145,10,0.6,17,0.389,20,0.773,22,0.334,23,0.021,24,0.719,25,0.362,26,0.334,28,0.959,38,1.642,44,1.641,45,0.164,52,0.035,53,0.035,55,4.094,58,0.721,60,0.887,69,0.889,71,0.854,83,0.595,85,0.31,89,1.928,92,0.889,93,1.403,94,1.481,95,1.403,96,4.826,97,0.989,98,0.383,104,1.259,123,0.334,126,0.784,134,0.522,135,0.763,136,1.39,137,0.999,138,0.999,139,0.999,141,0.999,142,2.009,143,1.904,144,1.183,150,2.823,155,1.839,156,1.839,157,1.39,160,0.999,161,1.721,162,1.468,163,0.999,164,1.631,165,0.999,166,0.999,167,0.805,168,0.999,169,0.999,170,0.724,171,0.999,172,0.805,173,0.999,174,0.999,175,0.805,176,1.064,177,1.74,178,0.805,179,1.468,180,1.546,181,1.468,182,0.805,183,0.999,184,0.805,185,0.999,186,0.805,187,1.072,188,0.763,189,0.904,190,0.763,191,0.805,192,0.805,193,0.805,194,0.849,195,0.999,196,0.999,222,1.055,232,1.551,263,1.423,264,1.423,296,5.007,337,1.055,353,1.738,355,1.183,356,1.117,360,1.961,362,1.064,373,1.561,375,1.334,376,1.183,377,2.568,383,1.248,388,2.484,389,1.961,412,1.721,413,1.817,417,2.683,423,1.74,426,2.043,432,0.999,451,1.055,452,1.561,457,0.849,466,2.389,484,1.255,503,1.183,514,1.055,536,1.551,539,2.284,540,2.389,542,1.255,543,1.334,544,1.334,545,1.334,550,2.061,551,2.061,552,1.183,558,1.183,559,1.183,562,1.117,563,1.117,566,1.423,572,1.945,574,1.255,576,1.117,579,1.055,580,1.522,594,1.522,614,1.255,655,1.255,658,1.334,716,1.117,718,1.423,727,1.636,779,1.334,798,2.237,799,2.652,807,1.334,815,3.03,842,3.359,884,1.636,896,1.641,938,4.163,943,2.923,944,3.141,946,2.784,947,3.524,949,1.918,950,2.732,951,2.091,952,2.237,953,2.404,954,2.563,955,2.237,957,2.237,958,1.844,959,2.237,960,2.237,961,2.237,964,1.423,965,1.117,966,1.334,967,2.237,969,2.237,970,2.923,972,2.732,973,3.519,974,2.404,975,2.404,977,2.091,979,2.237,980,2.091,981,1.423,982,1.522,983,1.636,984,1.334,985,2.127,986,2.394,987,1.928,988,2.394,989,2.394,996,1.636,997,1.522,998,3.396,999,3.126,1000,3.519,1001,3.519,1003,1.768,1004,2.127,1005,1.768,1006,1.522,1007,1.928,1008,1.768,1009,1.636,1010,1.636,1011,1.423,1012,3.396,1013,3.126,1015,1.768,1017,2.325,1034,1.928,1035,1.255,1036,2.187,1037,1.636,1039,2.404,1041,1.423,1096,3.141,1109,1.522,1110,1.522,1112,1.522,1123,1.636,1124,2.394,1125,1.928,1127,1.768,1128,1.768,1129,1.768,1130,1.768,1131,1.768,1132,1.768,1133,1.768,1202,1.928,1203,3.706,1204,3.126,1205,3.706,1206,4.115,1207,2.8,1208,2.8,1209,2.8,1210,2.8,1211,2.8,1212,2.394,1213,2.8,1214,2.8,1215,2.8,1216,1.334,1217,1.636,1218,1.768,1219,2.8,1220,2.8,1221,2.8,1222,2.8,1223,2.8,1224,2.8,1225,2.8,1226,2.8,1227,2.8,1228,2.8,1229,2.8,1230,2.394,1231,2.394]],["title/components/RouteManagementComponent.html",[134,0.316,182,1.042]],["body/components/RouteManagementComponent.html",[0,0.011,1,2.388,3,0.154,4,0.243,5,0.136,7,0.502,9,0.203,10,0.572,17,0.375,19,0.468,20,0.795,22,0.468,23,0.021,24,0.691,25,0.373,26,0.468,32,0.968,38,1.612,45,0.154,52,0.033,53,0.044,58,0.688,60,0.434,69,0.809,71,0.977,77,0.679,83,0.574,85,0.291,89,1.809,92,0.809,93,1.277,94,1.347,95,1.277,97,0.775,98,0.359,99,0.816,123,0.313,126,0.76,134,0.51,135,0.716,136,1.326,137,0.937,138,0.937,139,0.937,141,0.937,142,1.988,143,1.885,144,1.129,153,0.937,155,1.965,156,1.965,160,0.937,161,1.668,162,1.4,163,0.937,164,1.692,165,0.937,166,0.937,167,0.756,168,0.937,169,0.937,170,0.679,171,0.937,172,0.756,173,0.937,174,0.937,175,0.756,176,1.035,177,1.676,178,0.756,179,1.4,180,0.756,181,1.4,182,1.499,183,0.937,184,0.756,185,0.937,186,0.756,187,0.577,188,0.716,189,0.863,190,0.716,191,0.756,192,0.756,193,0.756,194,1.998,195,0.937,196,0.937,232,1.965,239,1.996,261,1.985,266,1.996,279,5.124,304,2.555,338,1.428,353,0.797,360,3.316,362,1.015,373,1.504,383,1.191,388,1.771,401,1.658,407,0.937,412,1.668,413,1.692,423,1.676,426,1.859,432,1.859,457,1.191,458,2.163,459,1.874,462,2.106,466,1.874,514,0.99,536,1.965,537,1.759,560,1.996,562,1.048,563,1.048,572,1.565,574,1.178,576,1.874,577,2.293,579,1.48,583,1.659,594,1.428,662,1.659,663,1.659,682,1.11,695,2.134,716,1.565,718,1.335,750,1.659,754,0.99,763,1.252,779,1.252,789,2.479,790,2.703,791,3.235,792,2.703,793,3.589,794,1.809,805,1.809,807,1.252,815,2.623,820,2.293,835,2.134,883,2.247,896,1.048,899,1.11,920,4.458,938,4.26,945,2.247,946,2.634,949,1.4,951,1.995,954,1.871,977,1.995,979,2.134,980,1.995,981,1.335,984,1.252,985,1.996,1002,1.659,1011,1.335,1014,1.659,1017,2.484,1035,1.178,1036,2.857,1041,1.995,1069,4.03,1080,2.134,1100,3.697,1108,1.252,1109,1.428,1110,1.428,1112,1.428,1126,1.809,1128,2.479,1129,2.479,1130,3.292,1131,3.292,1132,2.479,1133,2.479,1182,5.005,1194,1.996,1200,5.005,1232,1.996,1233,4.019,1234,3.357,1235,4.019,1236,4.019,1237,4.771,1238,4.771,1239,3.357,1240,5.213,1241,4.458,1242,4.458,1243,3.925,1244,2.982,1245,1.871,1246,3.357,1247,3.357,1248,2.627,1249,3.357,1250,5.187,1251,3.357,1252,3.357,1253,2.627,1254,3.357,1255,3.357,1256,2.627,1257,3.357,1258,2.982,1259,4.458,1260,2.627,1261,2.627,1262,3.357,1263,3.357,1264,3.357,1265,4.019,1266,2.627,1267,4.608,1268,2.627,1269,3.357,1270,2.982,1271,4.019,1272,2.247,1273,3.357,1274,2.627,1275,3.357,1276,2.627,1277,2.982,1278,3.357,1279,2.627,1280,2.247,1281,2.247,1282,2.247,1283,2.627,1284,2.627,1285,3.925,1286,3.357,1287,3.925,1288,3.357,1289,3.357,1290,2.627,1291,3.925,1292,3.925,1293,2.627,1294,2.627,1295,2.627,1296,2.627,1297,2.627,1298,3.357,1299,2.247,1300,3.357,1301,2.247,1302,2.247,1303,2.247,1304,2.247,1305,2.247,1306,2.247,1307,2.247,1308,2.247,1309,2.247,1310,2.627,1311,2.247,1312,3.925,1313,3.925,1314,3.925,1315,3.925,1316,3.357,1317,2.627,1318,4.699,1319,2.627,1320,2.247,1321,2.627,1322,2.247]],["title/injectables/RouteService.html",[54,0.712,946,1.53]],["body/injectables/RouteService.html",[0,0.016,3,0.213,4,0.188,5,0.188,7,0.834,9,0.188,17,0.449,19,0.81,20,0.796,22,0.778,23,0.021,24,0.723,25,0.381,26,0.778,28,1.283,32,0.919,45,0.213,52,0.042,53,0.042,54,0.973,56,1.536,58,0.867,60,0.929,61,2.36,62,1.63,63,2.517,65,2.384,66,1.974,67,2.36,68,2.36,69,0.874,71,1.232,72,2.268,73,2.219,74,2.384,76,2.219,77,1.818,78,2.219,79,2.219,80,2.219,81,1.974,82,2.524,83,0.527,84,1.103,85,0.403,86,1.63,87,2.219,88,0.991,90,1.297,91,1.228,92,0.565,93,0.891,94,0.94,95,0.891,97,1.077,98,0.497,99,1.474,100,2.297,102,2.834,103,2.219,104,0.799,105,1.536,106,1.536,107,1.63,108,2.219,109,1.536,110,1.63,111,2.219,112,2.219,113,2.219,114,1.63,115,2.219,116,1.974,117,2.092,118,1.63,119,1.63,120,1.63,121,1.63,122,1.63,123,0.433,124,1.536,125,1.103,126,0.53,127,1.733,128,1.733,129,1.733,130,1.733,131,1.733,132,1.733,133,1.733,176,1.101,232,1.866,347,2.516,360,3.014,838,1.977,892,3.286,946,2.092,949,2.156,964,2.516,965,2.862,984,1.733,1245,2.36,1254,4.234,1323,3.11,1324,4.952,1325,4.952,1326,4.952,1327,4.952,1328,6.045,1329,3.636,1330,4.952,1331,3.636,1332,2.36,1333,4.952,1334,3.636,1335,4.121,1336,3.127,1337,4.952,1338,4.952,1339,3.636,1340,4.593,1341,4.234,1342,4.952,1343,3.636,1344,3.409,1345,4.162,1346,3.636,1347,3.636,1348,3.636,1349,4.952,1350,3.636,1351,4.952,1352,3.11,1353,2.297,1354,3.636,1355,3.11,1356,3.11,1357,2.763,1358,3.636]],["title/classes/Statistics.html",[0,0.01,310,1.624]],["body/classes/Statistics.html",[0,0.014,2,2.442,3,0.299,4,0.265,5,0.265,9,0.265,10,0.9,17,0.409,19,0.879,20,0.852,22,0.611,23,0.021,24,0.568,25,0.418,26,0.611,38,1.939,45,0.299,52,0.052,53,0.052,310,2.766,811,5.491,1359,4.381,1360,7.035,1361,6.18,1362,7.227,1363,6.18,1364,6.171,1365,6.171,1366,5.124,1367,5.124,1368,5.124,1369,5.124,1370,5.124,1371,4.381,1372,4.381,1373,5.124,1374,5.124]],["title/components/StatisticsComponent.html",[134,0.316,184,1.042]],["body/components/StatisticsComponent.html",[0,0.01,3,0.287,4,0.121,5,0.121,7,0.298,9,0.121,10,0.523,17,0.349,19,0.585,20,0.775,22,0.278,23,0.021,24,0.485,25,0.38,26,0.694,31,1.113,32,1.189,38,1.835,45,0.137,54,0.86,58,0.629,60,0.592,63,2.324,65,2.108,66,1.431,67,1.711,68,1.711,69,0.557,71,0.409,83,0.538,84,1.089,85,0.398,88,0.637,90,0.833,91,0.789,92,0.557,97,0.592,98,0.319,104,0.789,109,1.516,123,0.278,125,1.089,126,0.772,134,0.538,135,0.637,136,1.212,137,0.833,138,0.833,139,0.833,141,0.833,142,1.948,143,1.847,144,1.032,146,3.976,155,1.997,156,1.997,160,1.28,161,1.149,162,1.28,163,0.833,164,1.489,165,0.833,166,0.833,167,0.672,168,0.833,169,0.833,170,0.604,171,0.833,172,0.672,173,0.833,174,0.833,175,0.672,176,0.716,177,1.56,178,0.672,179,1.28,180,0.672,181,1.28,182,0.672,183,0.833,184,1.523,185,0.833,186,0.672,187,0.513,188,0.637,189,0.789,190,0.637,191,0.672,192,0.672,193,1.932,194,0.708,195,0.833,196,0.833,199,1.951,219,1.475,223,1.997,304,1.269,310,1.609,347,1.824,362,1.13,367,0.747,373,1.571,378,2.266,379,0.747,383,1.089,392,3.041,401,2.838,402,3.055,406,1.744,412,1.79,413,1.089,426,1.995,432,1.28,439,2.472,450,1.431,452,0.747,456,0.931,457,1.326,458,1.889,459,1.431,462,2.507,481,5.793,484,1.609,503,1.847,514,0.88,536,2.45,537,2.611,539,2.23,540,2.398,541,1.608,542,1.047,544,1.113,545,1.113,546,1.997,550,1.516,551,1.516,552,0.986,553,1.269,556,0.986,558,2.073,559,1.847,561,1.997,562,2.679,563,2.679,565,1.475,573,1.608,576,2.23,577,2.097,579,1.85,588,4.426,589,4.53,590,3.851,592,1.608,597,1.608,599,1.997,613,3.1,614,1.047,622,3.07,654,1.997,655,2.2,656,2.727,658,1.711,662,1.475,663,1.475,665,1.997,682,2.073,691,3.07,700,1.774,706,3.379,707,2.727,709,1.997,716,0.931,718,2.222,746,1.475,759,1.997,763,1.711,779,1.113,780,4.568,785,3.07,789,1.475,805,1.608,807,1.113,817,3.403,819,2.097,820,2.867,821,1.824,831,4.249,861,1.608,862,1.608,878,3.74,966,2.339,1063,2.097,1077,1.269,1107,2.084,1258,2.727,1340,2.727,1361,4.53,1363,4.53,1371,1.997,1372,1.997,1375,1.997,1376,4.373,1377,3.59,1378,5.298,1379,6.951,1380,5.298,1381,4.373,1382,4.373,1383,4.373,1384,2.335,1385,5.298,1386,3.59,1387,3.59,1388,2.335,1389,3.59,1390,3.59,1391,3.59,1392,4.53,1393,3.59,1394,4.908,1395,2.335,1396,5.055,1397,3.59,1398,3.59,1399,2.335,1400,3.59,1401,2.335,1402,4.373,1403,2.335,1404,2.335,1405,2.335,1406,2.335,1407,3.59,1408,3.59,1409,2.335,1410,2.335,1411,2.335,1412,2.335,1413,1.997,1414,2.335,1415,2.335,1416,2.335,1417,2.335,1418,2.335,1419,2.335,1420,2.335,1421,2.335,1422,2.335,1423,2.335,1424,2.335,1425,3.59,1426,2.335,1427,2.335,1428,2.335,1429,2.335,1430,2.335,1431,2.335,1432,2.335,1433,2.335,1434,2.335,1435,2.335,1436,5.298,1437,2.335,1438,3.59,1439,3.59,1440,4.373,1441,2.335,1442,2.335,1443,2.335,1444,2.335,1445,3.59,1446,4.908,1447,4.908,1448,3.59,1449,2.335,1450,2.335,1451,2.335,1452,2.335,1453,2.335,1454,2.335,1455,2.335,1456,3.59,1457,2.335,1458,2.335,1459,2.335,1460,3.59,1461,2.335,1462,2.335,1463,2.335,1464,2.335,1465,2.335,1466,2.335,1467,2.335,1468,2.335,1469,2.335,1470,2.335,1471,2.335,1472,3.59,1473,3.59,1474,2.335,1475,3.59,1476,2.335,1477,2.335,1478,2.335,1479,2.335,1480,2.335,1481,2.335,1482,2.335,1483,2.335,1484,2.335,1485,2.335,1486,4.373,1487,5.298,1488,2.335,1489,2.335,1490,2.335,1491,2.335,1492,2.335,1493,2.335,1494,2.335,1495,2.335,1496,2.335,1497,2.335,1498,2.335]],["title/injectables/StatisticsService.html",[54,0.712,817,2.117]],["body/injectables/StatisticsService.html",[0,0.016,3,0.221,4,0.196,5,0.196,7,0.484,9,0.196,17,0.458,19,0.804,20,0.818,22,0.733,23,0.021,24,0.681,25,0.359,26,0.733,32,1.34,38,1.744,45,0.221,52,0.043,53,0.043,54,1.001,56,1.6,58,0.892,60,0.949,61,2.426,62,1.698,63,2.317,65,2.167,69,0.588,71,1.182,72,1.629,73,2.282,74,2.417,76,2.282,77,1.831,78,2.282,79,2.282,80,2.282,81,2.03,82,2.577,83,0.559,84,1.149,85,0.42,86,1.698,87,2.282,88,1.033,90,1.351,91,1.28,92,0.588,93,0.928,94,0.979,95,0.928,97,0.84,98,0.518,99,1.501,100,3.883,102,2.96,103,2.282,104,0.832,105,1.6,106,1.6,107,1.698,108,2.282,109,1.6,110,1.698,111,2.282,112,2.282,113,2.282,114,1.698,115,2.282,116,2.03,117,2.15,118,1.698,119,1.698,120,1.698,121,1.698,122,1.698,123,0.685,124,1.6,125,1.149,126,0.838,127,1.805,128,1.805,129,1.805,130,1.805,131,1.805,132,1.805,133,1.805,193,1.899,310,2.282,367,1.212,402,3.124,754,1.919,809,2.608,810,2.878,811,2.878,812,2.587,813,1.925,814,3.24,815,1.698,816,3.24,817,2.974,818,5.648,819,4.168,820,3.591,821,3.485,822,3.24,823,3.24,824,5.648,825,3.24,826,3.24,827,5.648,828,3.24,829,3.24,830,5.648,831,3.868,832,3.24,833,3.24,834,4.671,835,2.767,836,4.353,837,3.24,838,2.767,839,3.24,840,4.671,841,3.868,842,3.505,843,4.353,844,3.24,845,3.24,1499,3.788,1500,3.788,1501,3.788,1502,3.788,1503,3.788,1504,3.788,1505,3.215,1506,3.788,1507,3.788]],["title/classes/Stop.html",[0,0.01,187,0.796]],["body/classes/Stop.html",[0,0.019,2,2.268,3,0.278,4,0.246,5,0.246,7,0.608,8,1.898,9,0.246,10,0.86,17,0.511,19,0.887,20,0.837,22,0.567,23,0.021,24,0.711,25,0.41,26,0.567,28,1.16,38,1.905,45,0.278,52,0.05,53,0.05,124,2.492,187,1.626,407,2.104,466,2.352,914,5.045,1508,4.07,1509,6.086,1510,4.025,1511,6.086,1512,6.086,1513,6.086,1514,5.899,1515,5.899,1516,4.759,1517,5.899,1518,5.899,1519,5.899,1520,5.899,1521,5.899,1522,4.759,1523,4.759,1524,5.045,1525,5.045,1526,4.759,1527,4.07,1528,4.759,1529,4.759,1530,4.759,1531,4.759]],["title/components/StopCreateComponent.html",[134,0.316,186,1.042]],["body/components/StopCreateComponent.html",[0,0.011,3,0.156,4,0.138,5,0.138,7,0.508,9,0.138,10,0.58,17,0.379,20,0.788,22,0.474,23,0.021,24,0.723,25,0.357,26,0.474,32,0.977,35,2.033,38,0.692,45,0.156,52,0.034,53,0.034,58,0.697,60,0.657,69,0.618,71,0.921,83,0.532,85,0.297,92,0.817,93,0.975,94,1.028,95,0.975,97,0.868,98,0.366,116,2.35,123,0.566,125,1.207,126,0.82,134,0.514,135,0.73,136,1.344,137,0.954,138,0.954,139,0.954,141,0.954,142,1.994,143,1.891,144,1.144,155,1.983,156,1.983,160,0.954,161,1.273,162,1.419,163,0.954,164,1.596,165,0.954,166,0.954,167,0.77,168,0.954,169,0.954,170,0.692,171,0.954,172,0.77,173,0.954,174,0.954,175,0.77,176,0.767,177,1.694,178,0.77,179,1.419,180,0.77,181,1.419,182,0.77,183,0.954,184,0.77,185,0.954,186,1.513,187,1.533,188,0.73,189,0.874,190,0.73,191,0.77,192,0.77,193,0.77,194,0.812,195,0.954,196,0.954,208,2.679,222,1.009,261,2.375,298,5.089,314,2.325,325,3.226,335,1.783,350,1.886,352,1.983,353,1.705,362,1.028,373,1.52,374,1.69,376,1.13,378,2.415,379,0.856,380,1.681,381,1.13,383,1.207,388,2.494,406,1.587,407,1.419,412,1.683,413,1.851,417,2.648,423,0.954,426,1.876,450,1.587,451,1.791,452,1.953,453,1.783,454,2.022,455,1.681,456,1.587,457,1.441,458,1.419,459,1.587,484,2.358,503,2.489,514,1.009,536,1.791,539,2.098,540,2.242,544,1.275,545,1.275,550,1.681,551,1.681,552,1.13,558,1.13,559,1.13,562,1.067,563,1.067,566,1.36,572,1.894,574,1.199,576,1.067,578,1.842,579,1.009,580,1.455,614,1.199,655,1.199,658,1.275,716,1.067,727,1.563,763,1.275,779,1.275,798,2.163,799,2.582,807,1.275,812,2.022,813,1.36,884,1.563,896,1.894,939,1.69,940,3.271,941,2.74,943,2.86,944,3.073,947,3.482,955,2.163,957,2.163,958,2.358,959,2.163,960,2.163,961,2.163,964,2.673,965,2.098,966,2.808,968,2.288,969,2.163,970,2.86,971,2.288,972,2.022,997,2.163,998,3.322,999,3.996,1003,1.69,1004,2.033,1005,1.69,1009,1.563,1010,1.563,1011,1.36,1012,3.322,1013,3.996,1015,1.69,1023,2.775,1045,2.775,1051,3.442,1053,3.663,1069,3.622,1070,3.073,1072,2.325,1077,3.317,1084,2.325,1085,2.325,1086,2.325,1087,2.325,1088,2.325,1089,2.325,1090,2.325,1091,2.325,1093,2.325,1102,3.403,1105,2.325,1106,2.163,1107,1.896,1108,1.275,1154,1.563,1155,1.563,1158,1.563,1216,3.107,1217,1.563,1332,1.896,1509,4.062,1511,4.062,1512,4.062,1513,4.062,1524,5.039,1525,5.039,1532,5.728,1533,4.751,1534,4.751,1535,3.979,1536,2.676,1537,2.676,1538,3.979,1539,5.26,1540,2.288,1541,3.979,1542,3.979,1543,3.979,1544,2.676,1545,2.288,1546,2.676,1547,3.979,1548,3.979,1549,3.979,1550,2.676,1551,2.676,1552,2.676,1553,2.676,1554,3.979,1555,2.676,1556,2.676,1557,2.676,1558,2.676,1559,2.676,1560,2.676,1561,2.676,1562,2.676,1563,2.676,1564,2.676,1565,2.676,1566,2.676,1567,2.676,1568,2.676,1569,2.676,1570,2.676,1571,2.513,1572,3.979,1573,2.676,1574,2.676,1575,2.676,1576,2.033,1577,2.676,1578,2.676]],["title/injectables/StopService.html",[54,0.712,1216,1.727]],["body/injectables/StopService.html",[0,0.017,3,0.249,4,0.22,5,0.22,7,0.778,9,0.22,17,0.485,20,0.767,22,0.725,23,0.021,24,0.674,25,0.356,26,0.725,32,1.02,45,0.249,52,0.047,53,0.047,54,1.08,56,1.796,58,0.962,60,1.004,61,2.618,62,1.906,63,2.616,65,2.51,66,2.19,67,2.618,68,2.618,69,0.945,71,1.166,72,2.183,73,2.462,74,2.51,76,2.462,77,1.865,78,2.462,79,2.462,80,2.462,81,2.19,82,2.727,83,0.561,84,1.29,85,0.471,86,1.906,87,2.462,88,1.159,90,1.516,91,1.436,92,0.66,93,1.041,94,1.099,95,1.041,97,1.004,98,0.581,99,1.418,100,2.685,102,2.462,103,2.462,104,0.934,105,1.796,106,1.796,107,1.906,108,2.462,109,1.796,110,1.906,111,2.462,112,2.462,113,2.462,114,1.906,115,2.462,116,2.19,117,2.32,118,1.906,119,1.906,120,1.906,121,1.906,122,1.906,123,0.507,124,1.796,125,1.29,126,0.62,127,2.026,128,2.026,129,2.026,130,2.026,131,2.026,132,2.026,133,2.026,176,0.801,187,1.603,232,2.07,347,2.791,896,2.655,949,1.959,954,2.618,965,2.19,1108,2.026,1216,2.618,1244,4.173,1245,2.618,1332,2.618,1353,2.685,1579,3.636,1580,3.469,1581,4.886,1582,4.252,1583,5.493,1584,4.252,1585,4.252,1586,4.252,1587,4.252,1588,5.493,1589,4.252]],["title/classes/StopTime.html",[0,0.01,899,1.53]],["body/classes/StopTime.html",[0,0.018,2,1.943,3,0.238,4,0.211,5,0.211,7,0.521,8,2.131,9,0.211,10,0.779,17,0.475,19,0.865,20,0.848,22,0.486,23,0.021,24,0.452,25,0.412,26,0.486,28,1.244,32,0.992,38,1.839,39,4.57,45,0.238,52,0.045,53,0.045,58,0.936,71,0.714,83,0.466,99,0.847,104,1.174,126,0.779,187,1.653,189,1.627,344,2.257,392,2.905,466,2.378,754,2.542,861,3.679,899,2.848,901,4.06,1060,2.905,1183,4.57,1188,3.005,1510,4.014,1527,3.486,1590,6.131,1591,3.486,1592,6.743,1593,5.123,1594,6.871,1595,6.871,1596,3.839,1597,6.329,1598,4.57,1599,5.344,1600,4.076,1601,5.344,1602,4.076,1603,5.344,1604,5.344,1605,5.344,1606,5.344,1607,5.344,1608,4.57,1609,5.344,1610,4.076,1611,4.076,1612,4.076,1613,4.076,1614,4.076,1615,4.076,1616,5.344,1617,5.344,1618,5.344,1619,3.486,1620,4.076,1621,4.076,1622,4.076,1623,4.076,1624,4.076,1625,4.076,1626,4.076,1627,4.076,1628,4.076,1629,4.076]],["title/injectables/StopTimeService.html",[54,0.712,1036,1.624]],["body/injectables/StopTimeService.html",[0,0.016,3,0.209,4,0.185,5,0.185,7,0.767,9,0.185,17,0.445,19,0.843,20,0.792,22,0.792,23,0.021,24,0.737,25,0.389,26,0.792,32,1.115,38,1.678,45,0.209,52,0.041,53,0.041,54,0.962,56,1.511,58,0.858,60,0.921,61,2.333,62,1.603,63,2.643,65,2.588,66,2.394,67,2.861,68,2.861,69,0.976,71,1.203,72,2.262,73,2.194,74,2.37,76,2.194,77,1.812,78,2.194,79,2.194,80,2.194,81,1.952,82,2.502,83,0.523,84,1.085,85,0.396,86,1.603,87,2.194,88,0.975,90,1.276,91,1.208,92,0.555,93,0.876,94,0.924,95,0.876,97,1.097,98,0.489,99,1.47,102,2.818,103,2.194,104,0.786,105,1.511,106,1.511,107,1.603,108,2.194,109,1.511,110,1.603,111,2.194,112,2.194,113,2.194,114,1.603,115,2.194,116,1.952,117,2.068,118,1.603,119,1.603,120,1.603,121,1.603,122,1.603,123,0.426,124,1.511,125,1.085,126,0.521,127,1.704,128,1.704,129,1.704,130,1.704,131,1.704,132,1.704,133,1.704,176,0.875,189,1.076,347,3.299,397,2.661,754,1.348,819,3.507,838,2.661,892,1.944,896,2.394,899,3.141,965,2.589,1036,2.194,1041,1.817,1108,1.704,1245,2.996,1332,2.333,1335,3.092,1353,2.259,1355,3.058,1357,2.717,1596,3.261,1630,5.788,1631,3.058,1632,4.896,1633,4.896,1634,4.896,1635,4.896,1636,4.896,1637,3.576,1638,4.896,1639,3.576,1640,7.013,1641,4.896,1642,6.493,1643,3.576,1644,6.003,1645,4.896,1646,3.576,1647,4.896,1648,3.576,1649,4.896,1650,3.576,1651,3.576,1652,4.187,1653,3.576,1654,3.576,1655,3.576,1656,3.576,1657,3.576,1658,4.896,1659,3.576]],["title/classes/Suspension.html",[0,0.01,1660,2.288]],["body/classes/Suspension.html",[0,0.019,2,2.234,3,0.274,4,0.242,5,0.242,7,0.599,8,1.869,9,0.242,10,0.852,17,0.508,19,0.886,20,0.845,22,0.559,23,0.021,24,0.52,25,0.415,26,0.559,28,1.421,45,0.274,52,0.049,53,0.049,123,0.696,153,2.446,801,3.691,1107,2.785,1188,3.13,1505,4.48,1660,4.695,1661,4.008,1662,6.066,1663,5.494,1664,5.494,1665,6.066,1666,4.997,1667,5.844,1668,4.687,1669,4.687,1670,4.023,1671,4.687,1672,4.687,1673,4.687,1674,4.008,1675,4.687,1676,4.687,1677,4.687,1678,4.687,1679,4.687]],["title/injectables/SuspensionService.html",[54,0.712,1680,2.288]],["body/injectables/SuspensionService.html",[0,0.016,3,0.217,4,0.192,5,0.192,7,0.813,9,0.192,17,0.453,19,0.862,20,0.759,22,0.759,23,0.021,24,0.706,25,0.372,26,0.759,28,1.29,32,1.131,45,0.217,52,0.042,53,0.042,54,0.986,56,1.565,58,0.878,60,0.938,61,2.39,62,1.66,63,2.529,65,2.399,66,1.999,67,2.39,68,2.39,69,0.882,71,1.115,72,1.949,73,2.247,74,2.399,76,2.247,77,1.824,78,2.247,79,2.247,80,2.247,81,1.999,82,2.548,83,0.555,84,1.124,85,0.411,86,1.66,87,2.247,88,1.01,90,1.321,91,1.251,92,0.575,93,0.907,94,0.957,95,0.907,97,1.141,98,0.506,99,1.419,102,2.548,103,2.247,104,0.814,105,1.565,106,1.565,107,1.66,108,2.247,109,1.565,110,1.66,111,2.247,112,2.247,113,2.247,114,1.66,115,2.247,116,1.999,117,2.118,118,1.66,119,1.66,120,1.66,121,1.66,122,1.66,123,0.853,124,1.565,125,1.124,126,0.829,127,1.765,128,1.765,129,1.765,130,1.765,131,1.765,132,1.765,133,1.765,153,2.173,232,1.89,344,2.118,801,3.167,812,2.548,813,1.882,838,2.726,949,1.788,965,1.999,1107,2.39,1188,3.003,1335,3.167,1344,3.452,1345,3.452,1353,2.34,1505,4.31,1660,4.368,1662,5.611,1663,5.185,1664,5.361,1665,5.611,1670,3.452,1680,3.167,1681,3.168,1682,5.015,1683,4.288,1684,3.81,1685,3.705,1686,5.015,1687,3.705,1688,4.836,1689,3.705,1690,5.015,1691,3.705,1692,4.288,1693,4.288,1694,4.288,1695,3.705,1696,4.628,1697,3.168,1698,3.705,1699,3.705,1700,3.705,1701,3.705,1702,5.015,1703,3.705,1704,3.705,1705,3.705]],["title/injectables/TranslocoHttpLoader.html",[54,0.712,1706,2.495]],["body/injectables/TranslocoHttpLoader.html",[0,0.017,3,0.295,4,0.261,5,0.261,9,0.261,17,0.403,19,0.785,20,0.729,22,0.729,23,0.021,24,0.678,25,0.358,26,0.729,31,2.408,45,0.358,52,0.052,53,0.052,54,1.203,56,2.134,58,1.072,62,2.264,63,2.579,65,2.306,71,0.885,83,0.574,84,1.532,85,0.56,90,1.802,91,1.706,98,0.69,99,1.05,206,2.951,213,3.191,219,3.865,350,1.617,362,1.306,379,1.617,399,2.746,400,2.746,406,2.014,461,2.951,488,3.191,582,3.865,586,2.951,862,3.478,1706,4.532,1707,5.001,1708,3.838,1709,6.119,1710,5.052,1711,5.233,1712,5.052,1713,5.233,1714,5.233,1715,5.233,1716,5.233,1717,5.233,1718,5.233,1719,4.32,1720,4.32,1721,4.649,1722,4.32,1723,4.32,1724,4.32,1725,4.32,1726,3.838,1727,4.32,1728,4.32,1729,4.32,1730,4.32]],["title/modules/TranslocoRootModule.html",[197,2.753,206,2.117]],["body/modules/TranslocoRootModule.html",[0,0.017,3,0.307,4,0.271,5,0.271,19,0.625,23,0.021,31,2.501,45,0.366,52,0.053,53,0.053,54,1.231,63,2.36,65,1.978,83,0.583,84,1.592,85,0.582,90,1.871,91,1.772,98,0.717,99,1.091,199,2.852,206,3.657,213,3.314,219,3.954,350,1.679,362,1.356,379,1.679,399,2.852,400,2.852,406,2.092,488,3.314,582,3.954,586,3.065,862,3.613,1706,4.31,1707,3.987,1708,3.987,1711,4.487,1713,5.353,1714,5.353,1715,5.353,1716,5.353,1717,5.353,1718,5.353,1719,4.487,1720,4.487,1721,4.756,1722,4.487,1723,4.487,1724,4.487,1725,4.487,1726,3.987,1727,4.487,1728,4.487,1729,4.487,1730,4.487]],["title/classes/Trip.html",[0,0.01,189,0.796]],["body/classes/Trip.html",[0,0.019,2,2.096,3,0.257,4,0.227,5,0.227,7,0.562,8,2.238,9,0.227,10,0.818,17,0.519,19,0.902,20,0.844,22,0.524,23,0.021,24,0.685,25,0.414,26,0.524,28,1.392,45,0.257,52,0.048,53,0.048,83,0.489,92,0.871,176,1.091,189,1.556,407,2.002,556,3.064,835,3.052,892,3.85,901,3.341,915,4.8,922,3.028,1127,2.777,1270,4.265,1596,3.931,1598,5.288,1608,4.8,1619,3.761,1731,3.761,1732,7.082,1733,7.082,1734,7.082,1735,4.086,1736,4.398,1737,4.398,1738,4.398,1739,4.398,1740,4.398,1741,4.398,1742,4.398,1743,5.614,1744,4.398,1745,2.777,1746,4.398,1747,4.398,1748,4.398,1749,4.398]],["title/components/TripCreateComponent.html",[134,0.316,188,0.988]],["body/components/TripCreateComponent.html",[0,0.008,3,0.212,4,0.091,5,0.091,7,0.366,8,1.142,9,0.187,10,0.417,17,0.289,19,0.498,20,0.813,22,0.341,23,0.021,24,0.578,25,0.364,26,0.341,28,0.822,32,0.917,38,1.347,44,1.142,45,0.103,52,0.024,53,0.024,58,0.501,60,1.029,69,0.844,71,0.952,72,1.16,77,0.454,83,0.563,85,0.195,88,0.479,92,0.937,93,1.331,94,1.405,95,1.331,97,0.954,98,0.24,99,0.365,104,0.797,123,0.432,125,0.868,126,0.88,134,0.431,135,0.479,136,0.967,137,0.626,138,0.626,139,0.626,141,0.626,142,1.838,143,1.743,144,0.823,150,2.5,155,2.276,156,2.276,157,0.593,160,0.626,161,1.338,162,1.021,163,0.626,164,1.581,165,0.626,166,0.626,167,0.505,168,0.626,169,0.626,170,0.454,171,0.626,172,0.505,173,0.626,174,0.626,175,0.505,176,1.025,177,1.293,178,0.505,179,1.021,180,0.505,181,1.021,182,0.505,183,0.626,184,0.505,185,0.626,186,0.505,187,1.492,188,1.14,189,1.404,190,0.479,191,0.505,192,0.505,193,0.505,194,0.868,195,0.626,196,0.626,208,2.196,222,0.662,232,1.863,261,2.087,263,0.892,264,0.892,293,4.72,308,1.672,314,2.691,325,2.877,335,1.283,337,0.662,350,1.85,352,1.863,353,1.795,355,0.741,356,0.7,360,1.364,362,0.74,367,0.916,373,1.16,375,1.993,376,0.741,377,2.065,378,2.119,379,0.562,380,1.209,381,0.741,383,0.868,388,2.497,389,1.364,401,0.741,406,1.142,407,1.021,412,1.338,413,1.795,417,1.767,423,1.762,426,1.643,432,1.492,450,1.142,451,1.863,452,1.85,453,1.283,454,1.455,455,1.209,456,1.142,457,1.1,458,1.021,459,1.142,484,1.874,488,1.109,503,1.209,514,0.662,536,1.736,537,0.787,539,2.167,540,2.36,542,0.787,543,1.364,544,0.837,545,0.837,550,2.087,551,2.087,552,1.531,553,1.556,556,1.531,557,1.208,558,1.531,559,1.209,562,0.7,563,0.7,565,1.109,566,0.892,572,1.97,574,0.787,576,0.7,579,0.662,580,1.556,614,0.787,619,1.208,655,0.787,658,0.837,682,1.946,690,1.455,695,1.556,716,0.7,727,1.025,754,0.662,779,0.837,798,1.556,799,1.971,807,0.837,812,1.455,813,0.892,815,1.874,821,2.511,884,1.025,892,1.971,896,2.6,899,1.946,906,1.672,907,1.025,908,1.025,922,1.971,939,1.109,940,2.496,941,1.971,942,2.754,943,2.274,944,2.443,946,2.375,947,3.056,948,1.501,949,1.762,950,1.455,951,1.455,952,2.686,953,1.672,954,2.355,955,1.556,956,1.501,957,1.556,958,1.283,959,1.556,960,1.556,961,1.556,962,1.501,964,1.455,965,1.142,966,2.355,967,2.274,969,1.971,970,1.556,972,1.455,974,1.672,975,1.672,977,1.455,979,1.556,980,1.455,981,0.892,982,2.274,983,1.672,984,0.837,987,1.208,996,1.025,997,0.954,998,1.808,1002,1.808,1003,1.109,1005,1.109,1006,1.971,1007,1.208,1008,1.109,1009,1.025,1010,1.025,1011,0.892,1012,1.808,1014,1.808,1015,1.109,1017,1.364,1020,2.29,1021,2.29,1022,2.29,1023,2.118,1024,3.551,1028,2.641,1031,2.641,1032,2.641,1034,1.208,1035,2.652,1036,2.52,1037,3.284,1039,1.672,1040,2.443,1041,1.455,1045,3.045,1046,3.738,1048,1.808,1049,1.455,1050,2.91,1051,2.887,1052,1.808,1053,2.443,1059,1.808,1060,1.556,1063,1.672,1064,1.808,1065,1.808,1066,1.808,1070,1.672,1072,1.672,1073,1.808,1074,1.808,1075,1.808,1077,2.686,1078,1.808,1080,1.556,1081,2.118,1082,1.808,1083,1.808,1084,1.672,1085,1.672,1086,1.672,1087,1.672,1088,1.672,1089,1.672,1090,1.672,1091,2.443,1093,1.672,1096,2.887,1105,1.672,1106,1.556,1107,1.728,1108,1.364,1109,0.954,1110,0.954,1111,1.025,1112,0.954,1123,1.025,1125,1.208,1126,1.208,1127,1.109,1128,1.109,1129,1.109,1130,1.109,1131,1.109,1132,1.109,1133,1.109,1135,1.334,1142,1.109,1147,1.109,1148,1.109,1149,1.109,1151,1.109,1154,1.025,1155,1.025,1156,1.808,1157,1.109,1158,1.025,1159,1.109,1160,1.109,1161,1.109,1162,1.109,1165,1.109,1166,1.109,1167,1.109,1168,1.109,1169,1.109,1170,1.109,1188,1.767,1216,2.679,1217,1.025,1218,1.109,1245,1.728,1332,1.364,1336,1.808,1510,1.672,1540,1.501,1545,1.501,1571,1.808,1576,1.334,1580,2.641,1581,1.334,1596,1.025,1735,2.887,1745,1.109,1750,4.33,1751,2.496,1752,3.1,1753,2.496,1754,2.448,1755,2.448,1756,1.755,1757,1.755,1758,1.755,1759,1.971,1760,1.755,1761,1.755,1762,1.755,1763,1.755,1764,1.971,1765,1.755,1766,1.971,1767,1.971,1768,1.755,1769,1.755,1770,1.755,1771,1.971,1772,1.971,1773,1.971,1774,1.755,1775,1.971,1776,1.755,1777,1.755,1778,1.755,1779,1.755,1780,1.755,1781,1.755,1782,1.971,1783,1.808,1784,1.755,1785,1.755,1786,1.501,1787,1.501,1788,1.501,1789,1.208,1790,1.208,1791,1.208,1792,1.208,1793,1.208,1794,1.208,1795,1.208,1796,1.208,1797,1.334,1798,1.208,1799,1.208,1800,1.208,1801,1.501,1802,1.501,1803,1.971,1804,2.274,1805,1.208,1806,1.208,1807,1.971,1808,1.208,1809,1.208,1810,2.448,1811,1.208,1812,1.501,1813,1.208,1814,1.208,1815,1.501,1816,1.501,1817,1.501,1818,1.501,1819,1.501,1820,1.501,1821,1.501,1822,2.496,1823,1.501,1824,1.501,1825,1.501,1826,1.501,1827,1.208,1828,1.208,1829,1.971,1830,1.971,1831,1.208,1832,2.448,1833,1.501,1834,1.501,1835,2.448,1836,1.501,1837,2.448,1838,1.755,1839,1.501,1840,1.501,1841,1.501,1842,1.501,1843,1.501,1844,1.501,1845,1.501]],["title/components/TripEditComponent.html",[134,0.316,190,0.988]],["body/components/TripEditComponent.html",[0,0.005,3,0.21,4,0.09,5,0.09,7,0.362,8,1.131,9,0.186,10,0.413,17,0.287,19,0.338,20,0.816,22,0.338,23,0.021,24,0.575,25,0.363,26,0.338,28,0.707,32,0.912,38,1.398,44,1.131,45,0.101,52,0.024,53,0.024,58,0.497,60,1.052,69,0.763,71,0.981,72,1.151,77,0.448,81,1.131,83,0.567,85,0.192,88,0.473,92,0.894,93,1.204,94,1.27,95,1.204,97,0.924,98,0.237,99,0.361,104,0.79,123,0.546,125,0.86,126,0.906,134,0.399,135,0.473,136,0.958,137,0.619,138,0.619,139,0.619,141,0.619,142,1.833,143,1.738,144,0.815,150,2.491,153,0.619,155,2.268,156,2.268,157,0.958,160,0.619,161,1.329,162,1.011,163,0.619,164,1.698,165,0.619,166,0.619,167,0.499,168,0.619,169,0.619,170,0.448,171,0.619,172,0.499,173,0.619,174,0.619,175,0.499,176,0.993,177,1.283,178,0.499,179,1.011,180,0.499,181,1.011,182,0.499,183,0.619,184,0.499,185,0.619,186,0.499,187,1.489,188,0.473,189,1.441,190,1.132,191,0.499,192,0.499,193,0.499,194,0.86,195,0.619,196,0.619,208,2.182,222,0.654,232,2.039,261,2.076,263,0.882,264,0.882,294,4.733,308,1.657,314,1.014,325,3.099,335,1.271,337,1.356,350,1.887,352,1.852,353,1.641,355,0.733,356,0.692,362,0.733,367,0.907,373,1.151,375,1.979,376,0.733,377,2.052,378,2.11,379,0.555,380,1.198,381,0.733,383,0.86,388,2.492,389,1.351,406,1.131,407,1.011,412,1.329,413,1.747,417,2.076,423,1.753,426,1.633,432,1.753,450,1.131,451,1.852,452,1.843,453,1.271,454,1.441,455,1.198,456,1.131,457,1.091,458,1.011,459,1.131,466,2.232,484,1.612,488,1.096,503,0.733,514,0.654,536,1.726,537,0.778,539,2.157,540,2.351,542,0.778,543,1.351,544,0.827,545,0.827,550,2.076,551,2.076,552,1.519,553,1.542,556,1.519,557,1.194,558,1.519,559,1.198,562,0.692,563,0.692,565,1.096,566,0.882,572,1.96,574,0.778,576,0.692,579,0.654,580,1.542,614,0.778,619,1.194,655,0.778,658,0.827,682,1.754,690,1.441,695,1.542,716,0.692,727,1.014,754,0.654,779,0.827,784,1.194,798,1.542,799,1.955,807,0.827,815,1.861,821,2.497,884,1.014,896,2.616,899,1.934,906,1.657,907,1.014,908,1.014,917,1.952,943,2.258,944,2.101,946,0.733,947,3.043,949,1.481,950,1.441,951,1.441,952,2.672,953,1.657,954,1.979,955,1.542,957,1.542,958,1.271,959,1.542,960,1.542,961,1.542,964,0.882,965,0.692,966,2.182,967,2.258,969,2.258,970,1.542,972,1.441,974,1.657,975,1.657,977,1.441,979,1.542,980,1.441,981,0.882,982,2.258,983,1.657,984,0.827,996,1.014,997,0.943,998,1.791,1002,1.096,1003,1.096,1005,1.096,1006,1.955,1007,1.194,1008,1.096,1009,1.014,1010,1.014,1011,0.882,1012,1.791,1014,1.096,1015,1.096,1017,1.351,1020,2.271,1021,2.271,1022,2.271,1023,2.101,1024,3.536,1025,2.732,1026,2.732,1027,2.732,1028,2.623,1029,3.155,1031,2.623,1032,2.623,1034,1.194,1035,2.581,1036,2.509,1037,3.271,1039,1.657,1040,2.426,1041,1.441,1045,3.03,1046,3.724,1048,1.791,1049,1.441,1050,2.271,1051,2.871,1052,1.791,1053,2.426,1055,2.732,1059,1.791,1060,1.542,1063,1.657,1064,1.791,1065,1.791,1066,1.791,1070,1.657,1072,1.657,1073,1.791,1074,1.791,1075,1.791,1077,2.672,1078,1.791,1080,1.542,1081,2.101,1082,1.791,1083,1.791,1084,1.657,1085,1.657,1086,1.657,1087,1.657,1088,1.657,1089,1.657,1090,1.657,1091,2.426,1093,1.657,1096,3.161,1099,2.154,1100,2.623,1101,2.154,1105,1.657,1106,1.542,1107,1.714,1108,1.351,1109,0.943,1110,0.943,1111,1.014,1112,0.943,1123,1.014,1136,1.318,1138,1.318,1142,1.791,1147,1.096,1148,1.096,1149,1.096,1150,1.318,1151,1.096,1154,1.014,1155,1.014,1156,1.791,1157,1.096,1158,1.014,1159,1.096,1160,1.096,1161,1.096,1162,1.096,1163,2.154,1164,1.318,1165,1.096,1166,1.096,1167,1.096,1168,1.096,1169,1.096,1170,1.096,1171,1.318,1172,1.318,1173,1.318,1174,1.318,1175,1.318,1176,1.318,1187,1.318,1188,1.754,1202,1.194,1203,2.732,1204,2.154,1205,2.732,1212,1.484,1216,2.668,1217,1.014,1218,1.096,1230,1.484,1231,1.484,1245,1.714,1332,1.351,1336,1.791,1510,2.101,1571,1.791,1576,1.318,1580,2.623,1581,1.318,1593,2.732,1735,2.871,1745,1.096,1750,4.341,1751,2.476,1753,2.476,1754,2.425,1755,2.425,1759,1.952,1764,1.952,1766,1.952,1767,1.952,1771,1.952,1772,1.952,1773,1.952,1775,1.952,1782,1.952,1783,1.791,1789,1.194,1790,1.194,1791,1.194,1792,1.194,1793,1.194,1794,1.194,1795,1.194,1796,1.194,1798,1.952,1799,1.952,1800,1.194,1803,1.952,1804,2.258,1805,1.194,1806,1.194,1807,2.476,1808,1.194,1809,1.194,1813,1.194,1814,1.194,1822,2.859,1827,1.194,1828,1.194,1829,1.952,1830,1.952,1831,1.194,1832,2.425,1833,1.484,1834,1.484,1835,2.425,1836,1.484,1837,2.425,1839,2.425,1840,1.484,1841,1.484,1842,1.484,1843,1.484,1844,1.484,1845,1.484,1846,2.836,1847,1.735,1848,1.735,1849,1.735,1850,1.735,1851,1.735,1852,1.735,1853,1.735,1854,1.735,1855,1.735,1856,1.735,1857,1.735,1858,1.735,1859,1.735,1860,1.735,1861,1.735,1862,1.735,1863,1.735,1864,1.735,1865,1.735,1866,1.735,1867,1.735,1868,1.735,1869,1.735,1870,1.484,1871,1.484,1872,1.484,1873,1.484,1874,1.484,1875,1.484,1876,1.484,1877,1.484,1878,1.484,1879,1.484,1880,1.484,1881,1.484,1882,1.484,1883,1.484,1884,1.484,1885,1.484,1886,1.484,1887,1.484,1888,1.484,1889,1.484,1890,1.484,1891,1.484,1892,1.484,1893,1.484,1894,1.484,1895,1.484,1896,1.484,1897,1.484,1898,1.484,1899,1.484,1900,1.484,1901,1.484,1902,1.484,1903,1.484]],["title/injectables/TripService.html",[54,0.712,1035,1.624]],["body/injectables/TripService.html",[0,0.016,3,0.22,4,0.195,5,0.195,7,0.818,9,0.195,17,0.457,19,0.803,20,0.786,22,0.786,23,0.021,24,0.731,25,0.386,26,0.786,28,1.206,32,1.065,45,0.22,52,0.043,53,0.043,54,0.998,56,1.593,58,0.889,60,0.947,61,2.419,62,1.691,63,2.617,65,2.541,66,2.288,67,2.734,68,2.734,69,0.953,71,1.2,72,2.245,73,2.275,74,2.414,76,2.275,77,1.829,78,2.275,79,2.275,80,2.275,81,2.024,82,2.571,83,0.535,84,1.144,85,0.418,86,1.691,87,2.275,88,1.028,90,1.345,91,1.274,92,0.586,93,0.924,94,0.975,95,0.924,97,1.089,98,0.515,99,1.459,102,2.75,103,2.275,104,0.829,105,1.593,106,1.593,107,1.691,108,2.275,109,1.593,110,1.691,111,2.275,112,2.275,113,2.275,114,1.691,115,2.275,116,2.024,117,2.144,118,1.691,119,1.691,120,1.691,121,1.691,122,1.691,123,0.45,124,1.593,125,1.144,126,0.55,127,1.798,128,1.798,129,1.798,130,1.798,131,1.798,132,1.798,133,1.798,176,0.895,189,1.652,347,2.579,819,2.965,838,2.759,892,2.05,949,1.81,964,2.579,965,2.732,1035,2.275,1040,3.352,1111,2.204,1245,2.419,1332,2.419,1335,3.876,1340,4.662,1341,4.341,1344,3.495,1345,3.495,1352,3.226,1353,2.382,1356,3.226,1357,2.866,1596,2.965,1652,4.341,1904,3.226,1905,5.076,1906,5.076,1907,5.076,1908,5.076,1909,3.772,1910,5.076,1911,3.772,1912,5.076,1913,3.772,1914,5.076,1915,3.772,1916,5.076,1917,3.772,1918,5.076,1919,3.772,1920,3.772,1921,3.772,1922,3.772,1923,3.772]],["title/classes/User.html",[0,0.01,123,0.432]],["body/classes/User.html",[0,0.019,2,2.094,3,0.257,4,0.227,5,0.227,7,0.561,8,2.237,9,0.227,10,0.818,17,0.493,19,0.899,20,0.852,22,0.524,23,0.021,24,0.685,25,0.418,26,0.524,28,1.375,38,1.739,44,2.237,45,0.257,52,0.047,53,0.047,83,0.383,123,0.887,126,0.641,415,4.177,583,3.543,586,2.567,958,2.918,1188,3.02,1666,4.797,1674,3.757,1924,3.757,1925,6.055,1926,6.18,1927,5.98,1928,6.114,1929,5.98,1930,5.313,1931,5.61,1932,4.393,1933,4.393,1934,4.393,1935,5.61,1936,4.393,1937,5.61,1938,4.797,1939,4.393,1940,4.393,1941,4.393,1942,5.61,1943,4.393,1944,3.338,1945,4.393,1946,4.393,1947,4.393,1948,4.393,1949,4.393,1950,4.393,1951,4.393,1952,4.393,1953,4.393,1954,4.393]],["title/components/UserDetailsComponent.html",[134,0.316,191,1.042]],["body/components/UserDetailsComponent.html",[0,0.009,3,0.395,4,0.105,5,0.105,7,0.411,9,0.105,10,0.469,17,0.319,19,0.736,20,0.805,22,0.384,23,0.021,24,0.504,25,0.367,26,0.591,28,0.895,32,0.743,44,1.815,45,0.119,52,0.027,53,0.027,58,0.564,60,0.751,69,0.707,71,1.1,77,1.176,83,0.528,85,0.225,92,0.707,93,1.115,94,1.176,95,1.115,97,0.751,98,0.278,99,1.032,104,1.298,106,0.858,123,0.862,125,0.616,126,0.9,134,0.46,135,0.554,136,1.088,137,0.725,138,0.725,139,0.725,141,0.725,142,1.897,143,1.798,144,0.926,153,1.883,155,1.214,156,1.87,157,0.686,160,0.725,161,1.031,162,1.427,163,0.725,164,1.381,165,0.725,166,0.725,167,0.584,168,0.725,169,0.725,170,0.525,171,0.725,172,0.584,173,0.725,174,0.725,175,0.584,176,0.861,177,1.427,178,0.584,179,1.149,180,0.584,181,1.149,182,0.584,183,0.725,184,0.584,185,0.725,186,0.584,187,0.446,188,0.554,189,0.708,190,0.554,191,1.309,192,0.584,193,1.15,194,0.616,195,0.725,196,0.725,222,0.766,244,1.544,261,2.096,276,5.166,304,2.174,337,1.99,344,1.36,347,1.636,348,2.447,350,1.031,353,0.616,355,1.36,356,1.284,362,0.832,373,1.28,374,2.526,376,0.858,377,2.224,378,2.085,379,0.65,380,1.36,381,0.858,383,0.977,385,1.399,388,2.227,401,1.69,412,1.456,413,1.792,417,1.36,423,2.203,426,1.149,432,1.149,450,1.815,451,1.87,452,1.456,453,1.793,455,1.69,456,1.815,457,1.74,458,2.241,459,2.105,462,1.793,466,2.768,514,0.766,536,1.99,539,1.595,540,1.815,541,2.217,542,0.911,550,0.858,551,1.36,552,1.69,555,2.754,556,0.858,558,0.858,559,0.858,572,2.413,573,2.217,574,2.224,575,1.737,576,2.356,577,1.881,579,1.214,590,1.399,592,3.95,593,1.544,595,2.447,597,2.217,613,1.283,614,0.911,615,1.544,619,1.399,624,1.737,651,2.447,655,0.911,656,1.544,682,0.858,690,1.636,706,3.133,707,1.544,730,2.754,746,1.283,754,2.085,763,0.968,787,5.176,789,1.283,790,2.217,791,2.754,792,2.217,793,2.754,794,1.399,797,1.544,801,2.034,817,3.231,820,1.881,834,3.039,835,2.697,840,3.458,841,3.458,861,2.217,949,1.973,950,1.636,958,1.443,982,1.751,1016,1.544,1017,1.906,1018,3.421,1019,2.754,1049,2.313,1081,1.881,1094,1.737,1144,3.892,1188,2.945,1257,2.754,1345,2.217,1413,1.737,1660,4.125,1663,4.202,1664,4.202,1670,3.133,1680,3.731,1683,2.754,1684,3.458,1688,4.962,1692,2.754,1693,3.892,1696,3.039,1697,1.737,1797,2.447,1811,2.217,1927,1.737,1955,5.815,1956,4.906,1957,4.961,1958,4,1959,4.961,1960,4,1961,4,1962,4.961,1963,4.551,1964,4.551,1965,4.551,1966,3.892,1967,4.551,1968,2.032,1969,3.731,1970,3.22,1971,2.032,1972,3.22,1973,3.22,1974,4.551,1975,5.279,1976,4.961,1977,4.551,1978,4,1979,2.032,1980,3.22,1981,3.22,1982,3.22,1983,3.22,1984,3.22,1985,3.22,1986,2.032,1987,3.22,1988,3.22,1989,2.032,1990,2.032,1991,2.032,1992,3.22,1993,2.032,1994,2.032,1995,3.22,1996,3.22,1997,2.032,1998,3.22,1999,2.032,2000,2.032,2001,2.032,2002,3.421,2003,2.032,2004,2.032,2005,3.22,2006,2.032,2007,3.22,2008,3.22,2009,2.032,2010,2.032,2011,3.22,2012,1.737,2013,1.544,2014,1.737,2015,2.032,2016,2.032,2017,2.032,2018,2.032,2019,2.032,2020,2.032,2021,2.032,2022,2.032,2023,2.032,2024,1.737,2025,2.032,2026,2.032,2027,4,2028,3.22,2029,3.22,2030,4,2031,3.22,2032,3.421,2033,3.421,2034,2.032,2035,3.421,2036,3.421,2037,4,2038,4,2039,1.737,2040,2.754,2041,2.032,2042,1.737,2043,2.032,2044,2.032,2045,2.032,2046,2.032,2047,2.032,2048,2.032,2049,2.032,2050,2.032,2051,2.032,2052,2.032,2053,2.032,2054,2.032,2055,2.032,2056,2.032,2057,4.551,2058,2.032,2059,2.032,2060,3.22,2061,2.032,2062,3.22,2063,2.032,2064,3.22,2065,5.279,2066,2.032,2067,2.032,2068,2.754,2069,3.22,2070,2.032,2071,2.032,2072,3.22,2073,2.032,2074,3.22,2075,1.737,2076,2.032,2077,2.032,2078,4.551,2079,3.22,2080,3.22,2081,2.032,2082,1.737,2083,2.754,2084,2.032,2085,2.032,2086,2.032,2087,2.032,2088,2.032,2089,1.737,2090,1.737,2091,2.032,2092,2.032,2093,2.032,2094,2.032,2095,2.032,2096,2.032,2097,2.032,2098,2.032,2099,2.754,2100,2.032,2101,2.032,2102,2.032,2103,1.737,2104,2.032,2105,2.032,2106,3.22,2107,2.032,2108,1.737]],["title/interfaces/UserForAuthentication.html",[367,1.159,435,1.97]],["body/interfaces/UserForAuthentication.html",[0,0.015,3,0.233,4,0.206,5,0.206,9,0.206,10,0.767,17,0.318,19,0.87,23,0.021,25,0.308,28,1.035,31,2.81,32,0.739,44,1.588,45,0.345,52,0.045,53,0.045,60,1.106,66,1.588,69,0.618,74,1.984,77,1.029,83,0.596,84,1.208,85,0.441,92,0.915,97,1.106,98,0.544,123,0.627,126,0.914,134,0.547,142,1.145,143,1.086,144,1.145,150,2.649,153,1.877,157,1.345,159,3.642,170,1.029,176,0.859,207,2.811,222,1.501,225,2.327,310,1.785,335,1.785,336,2.742,337,2.222,338,2.165,344,1.682,345,2.515,346,2.515,350,1.275,351,2.515,352,1.501,353,1.902,354,2.742,355,1.682,356,1.588,362,1.029,367,1.684,368,3.075,369,2.327,370,2.742,371,3.026,372,3.026,373,1.684,374,2.515,375,3.108,376,1.682,377,2.359,378,2.364,379,1.275,380,2.223,381,1.682,382,3.026,383,1.208,384,3.026,385,2.742,386,2.742,387,3.026,388,1.501,389,2.508,390,4.479,391,3.999,392,2.165,393,3.026,394,3.026,395,3.026,396,3.026,397,2.165,398,2.515,399,2.165,400,2.165,401,1.682,402,2.674,403,2.515,404,3.624,405,3.026,406,1.588,407,1.42,408,2.515,409,3.026,410,3.324,411,3.026,412,1.275,413,1.208,414,3.026,415,3.914,416,3.999,417,2.223,418,3.026,419,5.09,420,3.026,421,3.026,422,3.026,423,1.42,424,3.026,425,3.026,426,1.42,427,3.026,428,3.026,429,3.026,430,3.026,431,3.026,432,1.877,433,3.026,434,3.026,435,3.205,436,3.999,437,3.026,438,3.026,439,2.742,440,3.026,441,3.026,442,3.026,443,3.026,444,3.026,445,3.999,446,3.026,447,3.026,448,3.026,449,3.026,450,1.588,451,1.501,452,1.275,453,1.785,454,2.024,455,1.682,456,1.588,457,1.208,458,1.42,459,1.588,460,2.515,461,3.075,462,1.785,463,2.515,464,3.026]],["title/injectables/UserService.html",[54,0.712,1969,2.288]],["body/injectables/UserService.html",[0,0.017,3,0.241,4,0.213,5,0.213,7,0.766,9,0.213,17,0.478,19,0.821,20,0.786,22,0.758,23,0.021,24,0.705,25,0.372,26,0.758,28,1.25,32,1,45,0.241,52,0.046,53,0.046,54,1.059,56,1.743,58,0.944,60,0.99,61,2.567,62,1.849,63,2.598,65,2.486,66,2.148,67,2.567,68,2.567,69,0.931,71,1.185,72,2.237,73,2.415,74,2.486,76,2.415,77,1.857,78,2.415,79,2.415,80,2.415,81,2.148,82,2.688,83,0.554,84,1.252,85,0.457,86,1.849,87,2.415,88,1.125,90,1.472,91,1.394,92,0.641,93,1.011,94,1.067,95,1.011,97,0.99,98,0.564,99,1.453,102,2.688,103,2.415,104,0.907,105,1.743,106,1.743,107,1.849,108,2.415,109,1.743,110,1.849,111,2.415,112,2.415,113,2.415,114,1.849,115,2.415,116,2.148,117,2.276,118,1.849,119,1.849,120,1.849,121,1.849,122,1.849,123,0.806,124,1.743,125,1.252,126,0.602,127,1.967,128,1.967,129,1.967,130,1.967,131,1.967,132,1.967,133,1.967,193,1.897,415,2.411,838,3.261,949,2.268,965,2.787,1049,2.737,1335,4.016,1344,3.709,1505,3.402,1966,4.607,1969,3.402,2013,3.135,2109,3.529,2110,5.387,2111,6.359,2112,4.127,2113,5.387,2114,4.127,2115,5.387,2116,4.127,2117,4.127,2118,4.127,2119,4.127,2120,4.127,2121,4.127,2122,4.127,2123,4.127,2124,4.127]],["title/components/UsersManagementComponent.html",[134,0.316,192,1.042]],["body/components/UsersManagementComponent.html",[0,0.01,3,0.139,4,0.229,5,0.123,7,0.565,9,0.123,10,0.531,17,0.353,19,0.637,20,0.803,22,0.527,23,0.021,24,0.65,25,0.354,26,0.527,28,0.716,32,1.123,38,1.281,45,0.139,52,0.031,53,0.042,58,0.638,60,0.601,69,0.769,71,1.059,83,0.541,85,0.264,92,0.875,93,1.214,94,0.941,95,0.892,97,0.882,98,0.325,99,0.757,123,0.821,126,0.904,134,0.527,135,0.649,136,1.23,137,0.848,138,0.848,139,0.848,141,0.848,142,1.955,143,1.853,144,1.047,153,0.848,155,1.868,156,1.868,160,0.848,161,1.165,162,1.299,163,0.848,164,1.62,165,0.848,166,0.848,167,0.684,168,0.848,169,0.848,170,0.615,171,0.848,172,0.684,173,0.848,174,0.848,175,0.684,176,0.723,177,1.578,178,0.684,179,1.299,180,0.684,181,1.299,182,0.684,183,0.848,184,0.684,185,0.848,186,0.684,187,0.523,188,0.649,189,0.8,190,0.649,191,0.684,192,1.425,193,2.092,194,1.952,195,0.848,196,0.848,232,1.868,239,1.807,261,1.868,266,1.807,288,5.164,304,2.405,325,2.362,335,1.632,338,1.293,344,2.38,350,1.165,352,0.897,353,0.722,360,2.362,362,0.941,373,1.416,378,2.28,379,0.761,380,2.093,381,1.005,383,1.104,388,1.667,401,1.538,406,1.452,407,1.578,412,1.586,413,1.835,423,2.01,426,1.768,432,1.578,450,1.452,451,1.372,452,1.165,453,1.632,455,1.538,456,1.452,457,1.709,458,2.295,459,2.13,462,1.983,466,2.247,514,0.897,536,1.667,537,1.632,539,0.948,540,0.948,560,1.807,562,0.948,563,0.948,572,0.948,576,1.764,579,0.897,594,1.293,662,1.502,663,1.502,695,1.979,716,0.948,750,1.502,763,1.134,779,1.134,789,2.3,790,2.507,791,3.045,792,2.507,793,3.412,794,1.638,804,1.807,805,1.638,807,1.134,820,2.127,949,1.299,951,1.85,954,1.735,958,1.632,980,1.85,1011,1.209,1017,2.685,1049,1.85,1069,3.879,1080,1.979,1100,3.558,1188,1.868,1194,1.807,1232,1.807,1233,3.783,1234,3.114,1235,3.783,1236,3.783,1237,4.568,1238,4.568,1239,3.114,1241,4.238,1242,4.238,1244,4.281,1245,2.362,1246,3.114,1247,3.114,1249,3.114,1250,5.014,1251,3.114,1252,3.114,1255,3.114,1258,2.766,1259,4.238,1262,3.114,1263,3.114,1264,3.114,1265,3.783,1267,4.455,1269,3.114,1270,2.766,1271,3.783,1272,2.034,1273,3.114,1275,3.114,1277,2.766,1278,3.114,1280,2.034,1281,2.034,1282,2.034,1286,2.034,1288,2.034,1289,2.034,1298,3.114,1299,2.034,1300,3.114,1301,2.034,1302,2.034,1303,2.034,1304,2.034,1305,2.034,1306,2.034,1307,2.034,1308,2.034,1309,2.034,1311,2.034,1316,3.114,1320,2.034,1322,2.034,1505,2.3,1670,2.507,1680,3.82,1684,2.766,1688,2.766,1694,3.114,1696,3.361,1811,1.638,1925,3.114,1928,4.238,1929,3.114,1930,2.766,1944,2.766,1956,5.411,1969,3.703,2002,3.783,2012,2.034,2013,1.807,2014,2.034,2024,2.034,2032,3.114,2033,3.114,2035,3.114,2036,3.114,2039,2.034,2040,3.114,2042,2.034,2068,4.818,2075,2.034,2082,2.034,2083,2.034,2089,2.034,2090,2.034,2099,4.818,2103,2.034,2108,2.034,2125,5.813,2126,4.956,2127,5.634,2128,4.956,2129,2.379,2130,3.641,2131,3.641,2132,2.379,2133,2.379,2134,2.379,2135,2.379,2136,3.641,2137,3.641,2138,2.379,2139,2.379,2140,3.641,2141,2.379,2142,2.379,2143,4.956,2144,2.379,2145,2.379,2146,2.379,2147,2.379,2148,2.379,2149,2.379,2150,2.379,2151,2.379,2152,4.424,2153,2.379,2154,2.379,2155,2.034,2156,2.379,2157,2.379,2158,2.379,2159,2.379,2160,2.379,2161,4.424,2162,4.424,2163,4.424,2164,2.379,2165,2.379,2166,4.424,2167,2.379,2168,2.379,2169,2.379,2170,2.379,2171,2.379,2172,2.379,2173,2.379,2174,2.379,2175,3.641]],["title/coverage.html",[2176,4.224]],["body/coverage.html",[0,0.02,1,2.144,5,0.218,6,3.608,23,0.021,25,0.247,52,0.046,53,0.046,54,1.417,55,2.664,57,3.608,104,1.573,123,0.503,126,0.615,134,0.638,135,1.15,140,3.608,167,1.213,170,1.09,172,1.213,175,1.213,176,0.615,178,1.213,180,1.213,182,1.213,184,1.572,186,1.213,187,0.927,188,1.15,189,0.927,190,1.15,191,1.213,192,1.213,207,1.891,213,2.664,273,3.205,276,3.205,279,3.205,285,2.904,288,3.205,289,3.205,290,3.205,293,3.763,294,3.763,296,3.205,298,3.205,300,3.205,310,1.891,329,2.664,331,3.608,344,1.782,367,2.126,368,2.464,370,4.174,392,3.296,435,2.293,465,3.608,515,3.608,516,3.608,537,3.105,613,3.452,615,4.152,617,3.608,708,3.608,809,2.904,810,4.152,817,2.464,846,3.608,847,3.608,890,3.608,899,1.782,938,4.05,939,4.05,946,1.782,1016,4.152,1035,1.891,1036,1.891,1190,3.608,1202,4.174,1216,2.01,1232,4.152,1267,3.205,1323,3.608,1359,3.608,1375,4.674,1508,3.608,1532,3.608,1579,3.608,1590,3.608,1591,3.608,1630,3.608,1631,3.608,1660,2.664,1661,3.608,1680,2.664,1681,3.608,1706,2.904,1707,3.205,1708,3.205,1731,3.608,1750,4.05,1804,2.971,1904,3.608,1924,3.608,1955,3.608,1969,2.664,2109,3.608,2125,3.608,2176,3.608,2177,4.219,2178,4.219,2179,4.219,2180,4.219,2181,4.219,2182,4.219,2183,4.219,2184,5.465,2185,4.219,2186,4.219,2187,4.219,2188,4.219,2189,4.219,2190,4.219,2191,4.219,2192,4.219,2193,6.063,2194,5.465,2195,5.465,2196,4.219,2197,4.219,2198,5.465,2199,5.465,2200,6.063,2201,4.219,2202,4.219,2203,4.219,2204,4.219,2205,5.465,2206,4.219,2207,5.465,2208,5.465,2209,4.219,2210,4.219,2211,4.219,2212,4.219,2213,4.219,2214,5.465,2215,5.465,2216,5.465,2217,4.219,2218,4.219,2219,4.219,2220,4.219,2221,4.219,2222,4.219,2223,3.608,2224,4.674,2225,6.413,2226,3.608,2227,4.152,2228,3.205,2229,4.219]],["title/dependencies.html",[200,2.751,2230,2.301]],["body/dependencies.html",[23,0.021,52,0.054,53,0.054,69,0.829,85,0.592,88,1.455,105,2.254,157,1.803,200,3.371,215,4.055,217,5.12,218,4.805,222,2.012,227,4.055,263,2.712,264,2.712,379,1.708,380,2.254,381,2.254,812,2.712,813,2.712,1392,4.564,2231,5.338,2232,7.386,2233,5.338,2234,5.338,2235,5.338,2236,5.338,2237,5.338,2238,5.338,2239,5.338,2240,5.338,2241,5.338,2242,5.338,2243,5.338,2244,5.338,2245,5.338,2246,5.338,2247,5.338,2248,5.338,2249,4.564,2250,5.338,2251,5.338,2252,5.338,2253,5.338,2254,5.338,2255,5.338,2256,5.338,2257,5.338]],["title/miscellaneous/enumerations.html",[2258,1.769,2259,3.725]],["body/miscellaneous/enumerations.html",[9,0.289,23,0.018,25,0.38,52,0.055,53,0.055,123,0.667,176,0.948,556,2.365,815,2.915,835,3.043,977,3.493,1735,3.799,1930,4.941,1944,4.254,2155,4.788,2258,3.271,2259,4.788,2260,5.599,2261,6.504,2262,5.599,2263,6.504,2264,5.599,2265,6.504,2266,5.599,2267,5.599,2268,5.599,2269,5.599,2270,5.599,2271,5.599,2272,5.599,2273,5.599,2274,5.599,2275,5.599,2276,5.599,2277,5.599]],["title/interfaces/formStop.html",[367,1.159,1804,1.97]],["body/interfaces/formStop.html",[0,0.011,3,0.235,4,0.14,5,0.14,7,0.347,8,1.082,9,0.208,10,0.586,17,0.216,19,0.731,23,0.022,25,0.235,28,0.79,32,0.889,38,1.238,44,1.082,45,0.159,52,0.034,53,0.034,60,1.079,69,0.822,72,1.286,77,0.701,83,0.61,85,0.301,88,0.74,92,0.919,93,1.297,94,1.369,95,1.297,97,1.079,98,0.371,99,0.564,104,0.883,123,0.323,125,1.219,126,0.937,134,0.462,142,0.78,143,0.74,144,0.78,150,2.501,157,0.916,161,0.868,164,1.453,176,1.006,187,1.458,188,0.74,189,1.383,194,0.823,208,1.916,222,1.022,232,1.805,261,2.023,263,1.378,264,1.378,293,1.868,308,1.585,314,1.585,325,2.822,335,1.216,337,1.022,350,1.81,352,1.805,353,1.796,355,1.146,356,1.082,360,1.293,362,0.701,367,1.533,369,1.585,373,1.286,375,2.282,376,1.146,377,2.146,378,2.131,379,0.868,380,1.698,381,1.146,383,0.823,388,2.501,389,1.293,406,1.082,407,0.967,412,0.868,413,1.453,417,1.698,426,1.434,432,1.889,450,1.603,451,1.515,452,1.533,453,1.802,454,2.043,455,1.698,456,1.603,457,1.219,458,1.434,459,1.603,484,1.802,503,1.146,543,1.293,556,1.146,682,2.023,690,2.043,695,1.475,754,1.022,812,2.043,813,1.378,815,1.802,821,2.433,892,1.475,896,2.608,899,2.659,906,1.585,907,1.585,908,1.585,922,2.767,939,1.713,940,1.868,941,1.868,942,2.061,943,1.475,944,1.585,946,2.388,947,3.074,949,1.708,950,1.378,951,1.378,952,2.603,953,1.585,954,2.282,955,1.475,957,1.475,958,1.216,959,1.475,960,1.475,961,1.475,964,1.378,965,1.082,966,2.282,967,2.185,969,2.185,970,1.475,972,1.378,974,1.585,975,1.585,977,1.378,979,1.475,980,1.378,981,1.378,982,2.603,983,2.348,984,1.293,987,1.868,996,1.585,997,1.475,1006,1.475,1017,1.293,1020,1.713,1021,1.713,1022,1.713,1023,1.585,1024,3.345,1028,1.713,1031,1.713,1032,1.713,1035,2.654,1036,2.534,1037,3.303,1039,1.585,1040,2.348,1041,1.378,1045,2.798,1046,3.571,1048,1.713,1049,1.378,1050,2.539,1051,2.798,1052,1.713,1053,2.348,1059,1.713,1060,1.475,1063,1.585,1064,1.713,1065,1.713,1066,1.713,1070,1.585,1072,1.585,1073,1.713,1074,1.713,1075,1.713,1077,2.603,1078,1.713,1080,1.475,1081,2.348,1082,1.713,1083,1.713,1084,1.585,1085,1.585,1086,1.585,1087,1.585,1088,1.585,1089,1.585,1090,1.585,1091,2.348,1093,1.585,1096,3.094,1105,1.585,1106,1.475,1107,1.293,1108,1.916,1109,1.475,1110,1.475,1111,1.585,1112,1.475,1123,1.585,1125,1.868,1126,1.868,1127,1.713,1128,1.713,1129,1.713,1130,1.713,1131,1.713,1132,1.713,1133,1.713,1135,2.061,1142,1.713,1147,1.713,1148,1.713,1149,1.713,1151,1.713,1154,1.585,1155,1.585,1156,2.539,1157,1.713,1158,1.585,1159,1.713,1160,1.713,1161,1.713,1162,1.713,1165,1.713,1166,1.713,1167,1.713,1168,1.713,1169,1.713,1170,1.713,1188,2.237,1216,2.695,1217,1.585,1218,1.713,1332,1.293,1336,1.713,1510,3.303,1571,2.539,1580,1.713,1596,1.585,1735,2.798,1745,1.713,1750,1.713,1751,1.868,1752,2.32,1753,1.868,1759,1.868,1764,1.868,1766,1.868,1767,1.868,1771,1.868,1772,1.868,1773,1.868,1775,1.868,1782,1.868,1783,1.713,1786,2.32,1787,2.32,1788,2.32,1789,1.868,1790,1.868,1791,1.868,1792,1.868,1793,1.868,1794,1.868,1795,1.868,1796,1.868,1797,2.061,1798,1.868,1799,1.868,1800,1.868,1801,2.32,1802,2.32,1803,2.767,1804,3.074,1805,1.868,1806,1.868,1807,2.767,1808,1.868,1809,1.868,1810,3.438,1811,1.868,1812,2.32,1813,1.868,1814,1.868,1815,2.32,1816,2.32,1817,2.32,1818,2.32,1819,2.32,1820,2.32,1821,2.32,1822,3.297,1823,2.32,1824,2.32,1825,2.32,1826,2.32,1827,1.868,1828,1.868,1829,2.767,1830,2.767,1831,1.868]],["title/interfaces/formStop-1.html",[367,0.969,682,1.279,1804,1.646]],["body/interfaces/formStop-1.html",[0,0.008,3,0.233,4,0.139,5,0.139,7,0.343,8,1.071,9,0.206,10,0.582,17,0.214,19,0.703,23,0.022,25,0.233,28,0.784,32,0.884,38,1.362,44,1.071,45,0.157,52,0.034,53,0.034,60,1.077,69,0.739,72,1.277,77,0.694,81,1.591,83,0.612,85,0.298,88,0.732,92,0.874,93,1.166,94,1.231,95,1.166,97,1.058,98,0.367,99,0.558,104,0.877,123,0.476,125,1.21,126,0.951,134,0.415,142,0.772,143,0.732,144,0.772,150,2.492,153,0.958,157,1.348,161,0.86,164,1.708,176,0.965,187,1.455,189,1.409,190,0.732,194,0.815,208,1.902,222,1.012,232,1.986,261,2.011,263,1.365,264,1.365,294,1.849,308,1.569,325,3.056,335,1.204,337,1.504,350,1.888,352,1.795,353,1.599,355,1.134,356,1.071,362,0.694,367,1.524,369,1.569,373,1.277,375,2.269,376,1.134,377,2.134,378,2.122,379,0.86,380,1.685,381,1.134,383,0.815,388,2.496,389,1.28,406,1.071,407,0.958,412,0.86,413,1.21,417,2.226,426,1.423,432,2.105,450,1.591,451,1.504,452,1.524,453,1.788,454,2.028,455,1.685,456,1.591,457,1.21,458,1.423,459,1.591,466,1.898,484,1.204,543,1.28,556,1.134,682,1.685,690,2.028,695,1.46,754,1.012,784,1.849,815,1.788,821,2.419,896,2.602,899,2.226,906,1.569,907,1.569,908,1.569,917,1.849,943,1.46,946,1.134,947,3.061,949,1.423,950,1.365,951,1.365,952,2.588,953,1.569,954,1.902,955,1.46,957,1.46,958,1.204,959,1.46,960,1.46,961,1.46,966,1.902,967,2.169,969,2.588,970,1.46,972,1.365,974,1.569,975,1.569,977,1.365,979,1.46,980,1.365,981,1.365,982,2.588,983,2.331,984,1.28,996,1.569,997,1.46,1006,1.46,1017,1.28,1020,1.696,1021,1.696,1022,1.696,1023,1.569,1024,3.328,1025,2.041,1026,2.041,1027,2.041,1028,1.696,1029,2.041,1031,1.696,1032,1.696,1035,2.524,1036,2.524,1037,3.29,1039,1.569,1040,2.331,1041,1.365,1045,2.781,1046,3.556,1048,1.696,1049,1.365,1050,1.696,1051,2.781,1052,1.696,1053,2.331,1055,3.032,1059,1.696,1060,1.46,1063,1.569,1064,1.696,1065,1.696,1066,1.696,1070,1.569,1072,1.569,1073,1.696,1074,1.696,1075,1.696,1077,2.588,1078,1.696,1080,1.46,1081,2.331,1082,1.696,1083,1.696,1084,1.569,1085,1.569,1086,1.569,1087,1.569,1088,1.569,1089,1.569,1090,1.569,1091,2.331,1093,1.569,1096,3.079,1099,2.041,1100,2.52,1101,2.041,1105,1.569,1106,1.46,1107,1.28,1108,1.902,1109,1.46,1110,1.46,1111,1.569,1112,1.46,1123,1.569,1136,2.041,1138,2.041,1142,2.52,1147,1.696,1148,1.696,1149,1.696,1150,2.041,1151,1.696,1154,1.569,1155,1.569,1156,2.52,1157,1.696,1158,1.569,1159,1.696,1160,1.696,1161,1.696,1162,1.696,1163,3.032,1164,2.041,1165,1.696,1166,1.696,1167,1.696,1168,1.696,1169,1.696,1170,1.696,1171,2.041,1172,2.041,1173,2.041,1174,2.041,1175,2.041,1176,2.041,1187,2.041,1188,2.226,1202,1.849,1203,2.041,1204,2.041,1205,2.041,1216,2.684,1217,1.569,1218,1.696,1332,1.28,1336,1.696,1510,3.447,1571,2.52,1580,1.696,1593,4.483,1735,2.781,1745,1.696,1750,1.696,1751,1.849,1753,1.849,1759,1.849,1764,1.849,1766,1.849,1767,1.849,1771,1.849,1772,1.849,1773,1.849,1775,1.849,1782,1.849,1783,1.696,1789,1.849,1790,1.849,1791,1.849,1792,1.849,1793,1.849,1794,1.849,1795,1.849,1796,1.849,1798,2.747,1799,2.747,1800,1.849,1803,2.747,1804,3.061,1805,1.849,1806,1.849,1807,3.278,1808,1.849,1809,1.849,1813,1.849,1814,1.849,1822,3.628,1827,1.849,1828,1.849,1829,2.747,1830,2.747,1831,1.849,1870,2.297,1871,2.297,1872,2.297,1873,2.297,1874,2.297,1875,2.297,1876,2.297,1877,2.297,1878,2.297,1879,2.297,1880,2.297,1881,2.297,1882,2.297,1883,2.297,1884,2.297,1885,2.297,1886,2.297,1887,2.297,1888,2.297,1889,2.297,1890,2.297,1891,2.297,1892,2.297,1893,2.297,1894,2.297,1895,2.297,1896,2.297,1897,2.297,1898,2.297,1899,2.297,1900,2.297,1901,2.297,1902,2.297,1903,2.297]],["title/miscellaneous/functions.html",[2258,1.769,2278,3.725]],["body/miscellaneous/functions.html",[9,0.303,23,0.019,52,0.056,53,0.056,2227,4.448,2228,5.318,2258,3.42,2278,5.007,2279,5.007]],["title/index.html",[9,0.157,2280,3.028,2281,3.028]],["body/index.html",[4,0.27,23,0.017,24,0.578,52,0.053,53,0.053,69,0.968,116,2.08,126,0.76,134,0.582,143,1.422,210,3.591,304,3.943,305,5.707,362,1.348,365,4.46,386,3.591,462,2.338,764,4.46,780,5.07,801,4.531,1060,2.835,1106,3.628,1245,2.486,1277,4.739,1938,4.46,2230,3.963,2249,6.045,2282,5.216,2283,6.238,2284,5.216,2285,6.674,2286,4.46,2287,5.216,2288,5.216,2289,5.216,2290,5.216,2291,5.216,2292,5.216,2293,5.216,2294,5.216,2295,5.216,2296,6.674,2297,5.216,2298,6.915,2299,5.216,2300,5.216,2301,5.216,2302,6.238,2303,6.238,2304,6.915,2305,6.238,2306,5.216,2307,5.216,2308,5.216,2309,5.216,2310,5.216,2311,5.216,2312,5.216,2313,5.216,2314,5.216,2315,5.216,2316,5.216,2317,5.216]],["title/modules.html",[199,2.685]],["body/modules.html",[23,0.019,52,0.056,53,0.056,198,3.663,199,3.153,206,3.389,218,5.043,317,3.993,397,3.153,1726,5.043,2318,6.638,2319,6.974,2320,5.8]],["title/overview.html",[2321,4.224]],["body/overview.html",[2,2.372,23,0.021,52,0.051,53,0.051,56,2.102,135,1.991,136,1.681,167,1.881,170,1.69,172,1.881,175,1.881,178,1.881,180,1.881,182,1.881,184,1.881,186,1.881,188,1.783,190,1.783,191,1.881,192,1.881,198,4.825,199,2.705,200,3.83,201,4.256,202,4.256,203,4.256,204,4.256,205,4.256,206,3.82,207,2.931,208,2.89,209,3.781,210,3.426,317,4.804,318,4.256,329,3.143,369,2.907,543,2.372,573,3.426,630,4.256,682,2.102,1783,3.143,2321,4.256,2322,4.977]],["title/properties.html",[10,0.635,2230,2.301]],["body/properties.html",[10,0.858,23,0.02,52,0.057,53,0.057,2286,5.034,2323,5.887]],["title/miscellaneous/variables.html",[1396,3.31,2258,1.769]],["body/miscellaneous/variables.html",[9,0.286,23,0.021,25,0.4,52,0.055,53,0.055,155,2.579,156,2.579,213,4.08,350,1.771,352,2.086,503,2.729,1396,4.205,1721,4.205,2223,4.733,2224,6.029,2226,4.733,2227,4.205,2228,4.205,2258,3.233,2279,4.733,2324,5.535,2325,5.535,2326,6.46,2327,5.535,2328,5.535,2329,5.535]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":104,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["0.0",{"_index":1827,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["0.0.0",{"_index":2323,"title":{},"body":{"properties.html":{}}}],["0.11.6",{"_index":2257,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":547,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["0.2",{"_index":1478,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["0.25",{"_index":618,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["0.2em",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["0.3",{"_index":623,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["0.47",{"_index":737,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["0.5px",{"_index":569,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["0.9em",{"_index":1480,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["0/1",{"_index":2225,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2217,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2184,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2183,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2180,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2209,"title":{},"body":{"coverage.html":{}}}],["003f91",{"_index":459,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["01",{"_index":2040,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["0d172a",{"_index":661,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["0h2255v899h0z'/%3e%3ccircle",{"_index":639,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["0px",{"_index":619,"title":{},"body":{"components/LandingPageComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["1",{"_index":682,"title":{"interfaces/formStop-1.html":{}},"body":{"components/LandingPageComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["1).foreach((stoptime",{"_index":1175,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["1.0.9",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["1.11.5",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["1.125rem",{"_index":701,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1.16.0",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["1.1rem",{"_index":678,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1.5em",{"_index":1486,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["1.5rem",{"_index":659,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1.6rem",{"_index":684,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1.95px",{"_index":548,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1/3",{"_index":2199,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":593,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/UserDetailsComponent.html":{}}}],["10/10",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":2196,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":537,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["1000",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["100px",{"_index":2083,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["100vh",{"_index":609,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["10px",{"_index":718,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{}}}],["10s",{"_index":606,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["10vw",{"_index":596,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["11",{"_index":1783,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["11/11",{"_index":2208,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":2192,"title":{},"body":{"coverage.html":{}}}],["110",{"_index":650,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1160px",{"_index":1485,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["11px",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{}}}],["12.0.2",{"_index":2287,"title":{},"body":{"index.html":{}}}],["12/13",{"_index":2194,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":1577,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["12px",{"_index":621,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["13",{"_index":1554,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["13.3.9",{"_index":2234,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":2322,"title":{},"body":{"overview.html":{}}}],["14.0.3",{"_index":2232,"title":{},"body":{"dependencies.html":{}}}],["140px",{"_index":1008,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["14px",{"_index":750,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["15",{"_index":581,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteDetailsComponent.html":{}}}],["15/16",{"_index":2204,"title":{},"body":{"coverage.html":{}}}],["15/20",{"_index":2188,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":594,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["16px",{"_index":741,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{}}}],["171",{"_index":1465,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["175",{"_index":693,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["18",{"_index":2091,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["18/20",{"_index":2203,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":1010,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["195",{"_index":694,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1:checked",{"_index":722,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1].arrivaltime",{"_index":1146,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["1].arrivaltime).gettime",{"_index":933,"title":{},"body":{"classes/Route.html":{}}}],["1em",{"_index":1495,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["1px",{"_index":691,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{}}}],["1rem",{"_index":683,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1s",{"_index":687,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["2",{"_index":690,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["2)].lat",{"_index":1157,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["2)].lng",{"_index":1159,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["2.0.7",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":1489,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["2.6px",{"_index":549,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["2/3",{"_index":2206,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":2213,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":575,"title":{},"body":{"components/LandingPageComponent.html":{},"components/UserDetailsComponent.html":{}}}],["200",{"_index":564,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["200px",{"_index":1842,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["20px",{"_index":716,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["21.5px",{"_index":1841,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["226",{"_index":1464,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["23/25",{"_index":2197,"title":{},"body":{"coverage.html":{}}}],["23/26",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":751,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["25",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["25px",{"_index":1318,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["2992dc",{"_index":761,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["2:checked",{"_index":724,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["2em",{"_index":1473,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["2px",{"_index":622,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{}}}],["2rem",{"_index":702,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3",{"_index":573,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{},"overview.html":{}}}],["3.6.0",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":2181,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1476,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["30px",{"_index":578,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/StopCreateComponent.html":{}}}],["320px",{"_index":740,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["32px",{"_index":748,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["33",{"_index":2198,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["35px",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["36px",{"_index":744,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3:checked",{"_index":725,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3be2ab",{"_index":566,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["3d",{"_index":712,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3px",{"_index":624,"title":{},"body":{"components/LandingPageComponent.html":{},"components/UserDetailsComponent.html":{}}}],["3vw",{"_index":598,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["4",{"_index":730,"title":{},"body":{"components/LandingPageComponent.html":{},"components/UserDetailsComponent.html":{}}}],["4.2.0",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["4.5em",{"_index":1487,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["4/5",{"_index":2218,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2222,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":727,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["400",{"_index":604,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["403d40",{"_index":749,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["40px",{"_index":580,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["4560_0_1_a",{"_index":1820,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["45px",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/UsersManagementComponent.html":{}}}],["480px",{"_index":1494,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["481px",{"_index":1492,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["4em",{"_index":628,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["4s",{"_index":710,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["5",{"_index":543,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["5.1.3",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":2219,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":613,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["500",{"_index":757,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["500px",{"_index":1196,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["50px",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["514px",{"_index":1493,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["515px",{"_index":1490,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["5em",{"_index":1475,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["5px",{"_index":597,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["6",{"_index":600,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["6/10",{"_index":2182,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2221,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2185,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":708,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["600",{"_index":680,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["60000",{"_index":937,"title":{},"body":{"classes/Route.html":{}}}],["600px",{"_index":591,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["63",{"_index":1195,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["65",{"_index":715,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["66",{"_index":2205,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":620,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["7.5.5",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":2190,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2216,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2187,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2189,"title":{},"body":{"coverage.html":{}}}],["730px",{"_index":1576,"title":{},"body":{"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["75",{"_index":615,"title":{},"body":{"components/LandingPageComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["767px",{"_index":1491,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["768px",{"_index":700,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{}}}],["77",{"_index":2186,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":625,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["8",{"_index":630,"title":{},"body":{"components/LandingPageComponent.html":{},"overview.html":{}}}],["8.2.3",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2207,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2214,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1190,"title":{},"body":{"components/RouteDetailsComponent.html":{},"coverage.html":{}}}],["800px",{"_index":627,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["80px",{"_index":767,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["81",{"_index":736,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["83",{"_index":2195,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":2191,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2220,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2215,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2200,"title":{},"body":{"coverage.html":{}}}],["8em",{"_index":626,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["8px",{"_index":739,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["9/9",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["90deg",{"_index":603,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["92",{"_index":2193,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":617,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["960px",{"_index":1488,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["a.nav",{"_index":881,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["a.navbar",{"_index":873,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["a.startdate",{"_index":2021,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["a5a5a5",{"_index":756,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["absolute",{"_index":707,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["abstractcontrol",{"_index":982,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["accessors",{"_index":1755,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["accordingly",{"_index":109,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["account",{"_index":2143,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["action",{"_index":697,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["actions",{"_index":2086,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["actiontext",{"_index":453,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["activatedroute",{"_index":377,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["activatedroutesnapshot",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":402,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"interfaces/UserForAuthentication.html":{}}}],["activelang",{"_index":403,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["activeusers",{"_index":1378,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["activeuserscount",{"_index":1360,"title":{},"body":{"classes/Statistics.html":{}}}],["actroute",{"_index":1218,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["actual",{"_index":1603,"title":{},"body":{"classes/StopTime.html":{}}}],["actual_component",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["add",{"_index":1245,"title":{},"body":{"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UsersManagementComponent.html":{},"index.html":{}}}],["adding/removing",{"_index":1064,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["addmarkers",{"_index":1028,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["addroute",{"_index":1324,"title":{},"body":{"injectables/RouteService.html":{}}}],["addroute(route",{"_index":1330,"title":{},"body":{"injectables/RouteService.html":{}}}],["adds",{"_index":1332,"title":{},"body":{"injectables/RouteService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["addstop",{"_index":1580,"title":{},"body":{"injectables/StopService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["addstop(stop",{"_index":1583,"title":{},"body":{"injectables/StopService.html":{}}}],["addstopmarkerinmap",{"_index":1535,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["addstopmarkerinmap(event",{"_index":1538,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["addstoptime",{"_index":1632,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["addstoptime(stoptime",{"_index":1638,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["addtrip",{"_index":1905,"title":{},"body":{"injectables/TripService.html":{}}}],["addtrip(trip",{"_index":1910,"title":{},"body":{"injectables/TripService.html":{}}}],["addwaypoint",{"_index":1172,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["admin",{"_index":2155,"title":{},"body":{"components/UsersManagementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":1411,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["again",{"_index":132,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["agencies",{"_index":96,"title":{},"body":{"injectables/AgencyService.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["agency",{"_index":1,"title":{"classes/Agency.html":{}},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"coverage.html":{}}}],["agency.agencyname",{"_index":1001,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["agencyid",{"_index":11,"title":{},"body":{"classes/Agency.html":{},"classes/Route.html":{}}}],["agencylang",{"_index":12,"title":{},"body":{"classes/Agency.html":{}}}],["agencyname",{"_index":13,"title":{},"body":{"classes/Agency.html":{}}}],["agencyphone",{"_index":14,"title":{},"body":{"classes/Agency.html":{}}}],["agencyservice",{"_index":55,"title":{"injectables/AgencyService.html":{}},"body":{"injectables/AgencyService.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"coverage.html":{}}}],["agencytimezone",{"_index":15,"title":{},"body":{"classes/Agency.html":{}}}],["agencyurl",{"_index":16,"title":{},"body":{"classes/Agency.html":{}}}],["align",{"_index":558,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["allow",{"_index":1417,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["allstops",{"_index":1751,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["alltrips",{"_index":1752,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["along",{"_index":1606,"title":{},"body":{"classes/StopTime.html":{}}}],["amount",{"_index":905,"title":{},"body":{"classes/Route.html":{}}}],["angular",{"_index":2285,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2231,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1282,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["angular/cdk/layout",{"_index":1415,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["angular/common",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":84,"title":{},"body":{"injectables/AgencyService.html":{},"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2233,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":85,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["angular/forms",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["angular/google",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["angular/material",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["angular/material/progress",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["angular/material/tabs",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["animation",{"_index":605,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["api",{"_index":821,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["aplies",{"_index":1249,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["app",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["app.component",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.html",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":328,"title":{},"body":{"modules/AppServerModule.html":{}}}],["appcomponent",{"_index":135,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":399,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"interfaces/UserForAuthentication.html":{}}}],["applyfilter",{"_index":1239,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["applyfilter(event",{"_index":1247,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["appmodule",{"_index":198,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":317,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":762,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["around",{"_index":2088,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["array",{"_index":967,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["arrival",{"_index":1601,"title":{},"body":{"classes/StopTime.html":{}}}],["arrivaltime",{"_index":1592,"title":{},"body":{"classes/StopTime.html":{}}}],["artifacts",{"_index":2299,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1607,"title":{},"body":{"classes/StopTime.html":{}}}],["atob(token.split('.')[1",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["attribute",{"_index":1246,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["autenticated",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["authchagesub",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["authchanged",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["authchangesub",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["authchengesub",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":366,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":404,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["authguard",{"_index":285,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authresponse",{"_index":368,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{}}}],["authservice",{"_index":207,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":651,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["automatically",{"_index":2292,"title":{},"body":{"index.html":{}}}],["available",{"_index":397,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/StopTimeService.html":{},"interfaces/UserForAuthentication.html":{},"modules.html":{}}}],["availablelangs",{"_index":400,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"interfaces/UserForAuthentication.html":{}}}],["awesome",{"_index":381,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["b",{"_index":2020,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["b.startdate",{"_index":2022,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["b8f4e0",{"_index":570,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["back",{"_index":960,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["backend",{"_index":112,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["background",{"_index":457,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["backgroundcolor",{"_index":1462,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["bad",{"_index":128,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["ban",{"_index":2002,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["banned",{"_index":1956,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["banreason",{"_index":1957,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["banusers",{"_index":2126,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["bar",{"_index":759,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{}}}],["base_url",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":921,"title":{},"body":{"classes/Route.html":{}}}],["baseline",{"_index":1474,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["basier",{"_index":667,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["before",{"_index":1976,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["beforetoday",{"_index":2056,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["belonging",{"_index":917,"title":{},"body":{"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["between",{"_index":553,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["bezier(.4",{"_index":689,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["black",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{},"components/StatisticsComponent.html":{}}}],["block",{"_index":665,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{}}}],["blockquote",{"_index":703,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["body",{"_index":117,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["boolean",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop-1.html":{}}}],["bootstrap",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["border",{"_index":655,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["bottom",{"_index":451,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["box",{"_index":544,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["brand",{"_index":874,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["break",{"_index":876,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["breakpointobserver",{"_index":1385,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["breakpointobserver,private",{"_index":1418,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["breakpoints",{"_index":1414,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["breakpoints.small",{"_index":1421,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["breakpoints.xsmall",{"_index":1422,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["browse",{"_index":2319,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":2298,"title":{},"body":{"index.html":{}}}],["builds",{"_index":955,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["bus",{"_index":2270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["button",{"_index":423,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{}}}],["button:hover",{"_index":699,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["buttons",{"_index":1011,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["c6c5c6",{"_index":755,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["calc(100",{"_index":747,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["calculate",{"_index":919,"title":{},"body":{"classes/Route.html":{}}}],["calculaterouteduration",{"_index":897,"title":{},"body":{"classes/Route.html":{}}}],["call",{"_index":1082,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["called",{"_index":1389,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["canactivate",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":943,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["cancels",{"_index":957,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["canvas",{"_index":1454,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["canvas.getcontext('2d",{"_index":1457,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["capabilities",{"_index":2313,"title":{},"body":{"index.html":{}}}],["card",{"_index":706,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["cards",{"_index":713,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["caret",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{}}}],["carousel",{"_index":704,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["casts",{"_index":1782,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["catcherror",{"_index":86,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["center",{"_index":452,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["centered",{"_index":1072,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["cfcccc",{"_index":1009,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["change",{"_index":462,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"index.html":{}}}],["changelang",{"_index":521,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{}}}],["changelang(lang",{"_index":463,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["changes",{"_index":460,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["changing",{"_index":1727,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["chart",{"_index":1379,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["chart(ctx",{"_index":1459,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["chart.js",{"_index":1392,"title":{},"body":{"components/StatisticsComponent.html":{},"dependencies.html":{}}}],["chart.register(...registerables",{"_index":1419,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["check",{"_index":2316,"title":{},"body":{"index.html":{}}}],["checkbox",{"_index":1278,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["checked",{"_index":1255,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["checking",{"_index":1974,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["checks",{"_index":1257,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{}}}],["choice",{"_index":2309,"title":{},"body":{"index.html":{}}}],["circle",{"_index":668,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["clamp",{"_index":1191,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Agency.html":{},"classes/Route.html":{},"classes/Statistics.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"classes/Trip.html":{},"classes/User.html":{}},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Agency.html":{},"classes/Route.html":{},"classes/Statistics.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"classes/Trip.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":1264,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["cli",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["clickableicons",{"_index":1089,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["clicked",{"_index":1543,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["client",{"_index":105,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["clip",{"_index":653,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["close",{"_index":2078,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["clues",{"_index":119,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":318,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":320,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":319,"title":{},"body":{"modules/AppServerModule.html":{}}}],["code",{"_index":116,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["color",{"_index":458,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["column",{"_index":614,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["columns",{"_index":1269,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["command",{"_index":2310,"title":{},"body":{"index.html":{}}}],["communicate",{"_index":68,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["communicates",{"_index":93,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["company",{"_index":1313,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["component",{"_index":134,"title":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["component_template",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["components",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"overview.html":{}}}],["components/landing",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.component",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["components/nav",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["components/route",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["components/statistics/statistics.component",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["components/stop",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["components/trip",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["components/user",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["components/users",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["compstop.stopid",{"_index":1806,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["compstop.stoplon",{"_index":1809,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["comunicate",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["comunicates",{"_index":405,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["console",{"_index":81,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"interfaces/formStop-1.html":{}}}],["console.error",{"_index":122,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["console.error('an",{"_index":110,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["console.error(error",{"_index":1797,"title":{},"body":{"components/TripCreateComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{}}}],["console.log(error",{"_index":1886,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["console.log(this.tripstops",{"_index":1885,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["console.log(userid",{"_index":2173,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["const",{"_index":432,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["constructor(activeuserscount",{"_index":1364,"title":{},"body":{"classes/Statistics.html":{}}}],["constructor(agencyid",{"_index":18,"title":{},"body":{"classes/Agency.html":{}}}],["constructor(authservice",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["constructor(breakpointobserver",{"_index":1384,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["constructor(http",{"_index":62,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["constructor(id",{"_index":1666,"title":{},"body":{"classes/Suspension.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":98,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["constructor(route",{"_index":1968,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["constructor(routeid",{"_index":898,"title":{},"body":{"classes/Route.html":{}}}],["constructor(router",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(routeservice",{"_index":945,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteManagementComponent.html":{}}}],["constructor(service",{"_index":522,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{}}}],["constructor(stopid",{"_index":1514,"title":{},"body":{"classes/Stop.html":{}}}],["constructor(stopservice",{"_index":1536,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["constructor(tripid",{"_index":1598,"title":{},"body":{"classes/StopTime.html":{},"classes/Trip.html":{}}}],["constructor(urlroute",{"_index":1034,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["constructor(userservice",{"_index":2129,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["contain",{"_index":118,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["container",{"_index":456,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["container:hover",{"_index":1479,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["contains",{"_index":1542,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["content",{"_index":551,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["control",{"_index":2054,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["convert",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["converttoparammap",{"_index":1215,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["coordinates",{"_index":1053,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["correct",{"_index":427,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["correctly",{"_index":429,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["corresponding",{"_index":1052,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["cover",{"_index":720,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["coverage",{"_index":2176,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{}}}],["create'},{'name",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["create.component",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["create.component.css",{"_index":940,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["create.component.html",{"_index":941,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["create.component.ts",{"_index":939,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{}}}],["create.component.ts:100",{"_index":1756,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:120",{"_index":1762,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:127",{"_index":1544,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:146",{"_index":1758,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:159",{"_index":1765,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:167",{"_index":1785,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:174",{"_index":1781,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:179",{"_index":1768,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:187",{"_index":1757,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:205",{"_index":1761,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:217",{"_index":1763,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:22",{"_index":1553,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:24",{"_index":978,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["create.component.ts:270",{"_index":1760,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:28",{"_index":976,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["create.component.ts:31",{"_index":1777,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:32",{"_index":968,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{}}}],["create.component.ts:37",{"_index":971,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/StopCreateComponent.html":{}}}],["create.component.ts:41",{"_index":1550,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:42",{"_index":948,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/TripCreateComponent.html":{}}}],["create.component.ts:45",{"_index":1552,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:49",{"_index":1778,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:50",{"_index":1551,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:53",{"_index":1784,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:55",{"_index":1537,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:57",{"_index":962,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/TripCreateComponent.html":{}}}],["create.component.ts:61",{"_index":1779,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:64",{"_index":963,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["create.component.ts:65",{"_index":1545,"title":{},"body":{"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{}}}],["create.component.ts:70",{"_index":1780,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:74",{"_index":956,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/TripCreateComponent.html":{}}}],["create.component.ts:78",{"_index":1540,"title":{},"body":{"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{}}}],["create.component.ts:82",{"_index":1769,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:87",{"_index":1770,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:90",{"_index":1546,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["create.component.ts:91",{"_index":1776,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create.component.ts:96",{"_index":1774,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["create/:id",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["create/route",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"components/RouteCreateComponent.html":{},"coverage.html":{}}}],["create/stop",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"components/StopCreateComponent.html":{},"coverage.html":{}}}],["create/trip",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"components/TripCreateComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{}}}],["created",{"_index":347,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{}}}],["createrouteform",{"_index":942,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["creates",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["createstopform",{"_index":1533,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["createwaypoints",{"_index":1029,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["creating",{"_index":1555,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["creation",{"_index":958,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["creationdate",{"_index":1925,"title":{},"body":{"classes/User.html":{},"components/UsersManagementComponent.html":{}}}],["ctx",{"_index":1456,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["cubic",{"_index":688,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["current",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["currently",{"_index":1099,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["currentuser",{"_index":1958,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["currentuser.creationdate",{"_index":2064,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["currentuser.email",{"_index":2060,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["currentuser.rating",{"_index":2062,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["currentuser.username",{"_index":2057,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["cursor",{"_index":662,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["custom",{"_index":1972,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["cx='1215",{"_index":647,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cx='1777.5",{"_index":644,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cx='366",{"_index":640,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cy='207",{"_index":641,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cy='318.5",{"_index":645,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cy='737",{"_index":648,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["d='m0",{"_index":638,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dashboard",{"_index":361,"title":{},"body":{"guards/AuthGuard.html":{},"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{}}}],["data",{"_index":426,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["data.activeuserscount",{"_index":1428,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["data.mostusedtransport",{"_index":2045,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["data.newusers",{"_index":1432,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["data.timespent",{"_index":2048,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["data.totalusers",{"_index":1430,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["database",{"_index":965,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"injectables/RouteService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"interfaces/formStop.html":{}}}],["datasets",{"_index":1461,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["datasource",{"_index":1235,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["date",{"_index":1188,"title":{},"body":{"components/RouteDetailsComponent.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["date(\"2099",{"_index":2039,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["date(arrivaltime",{"_index":1621,"title":{},"body":{"classes/StopTime.html":{}}}],["date(control.value",{"_index":2055,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["date(creationdate",{"_index":1950,"title":{},"body":{"classes/User.html":{}}}],["date(departuretime",{"_index":1623,"title":{},"body":{"classes/StopTime.html":{}}}],["date(this.stops[0].arrivaltime).gettime",{"_index":935,"title":{},"body":{"classes/Route.html":{}}}],["date(this.stops[this.stops.length",{"_index":932,"title":{},"body":{"classes/Route.html":{}}}],["date(this.suspenddate.value",{"_index":2029,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["date.now",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["date.setutchours(number(stop.departuretime.substring(0",{"_index":1899,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["date.setutchours(number(stop.stoptime.substring(0",{"_index":1824,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["date.setutcminutes(number(stop.departuretime.substring(3",{"_index":1900,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["date.setutcminutes(number(stop.stoptime.substring(3",{"_index":1825,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["dateaftertodayvalidator",{"_index":1963,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["datepipe",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{}}}],["dates",{"_index":1044,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["dd/mm/yyyy",{"_index":2065,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["de",{"_index":1117,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["declarations",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["decode",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoration",{"_index":560,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["decorators",{"_index":1272,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["deep",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["deep.mat",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["default",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":1723,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["delete",{"_index":1336,"title":{},"body":{"injectables/RouteService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["delete_forever",{"_index":1837,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["deleted",{"_index":1337,"title":{},"body":{"injectables/RouteService.html":{}}}],["deleteroute",{"_index":1325,"title":{},"body":{"injectables/RouteService.html":{}}}],["deleteroute(routeid",{"_index":1333,"title":{},"body":{"injectables/RouteService.html":{}}}],["deleteroutes",{"_index":1240,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["deletes",{"_index":1254,"title":{},"body":{"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{}}}],["deletestoptime",{"_index":1633,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["deletestoptime(tripid",{"_index":1641,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["departure",{"_index":1183,"title":{},"body":{"components/RouteDetailsComponent.html":{},"classes/StopTime.html":{}}}],["departuretime",{"_index":1593,"title":{},"body":{"classes/StopTime.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["dependencies",{"_index":200,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["descending",{"_index":1988,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["design",{"_index":1484,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["destination",{"_index":908,"title":{},"body":{"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["details",{"_index":1017,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["details'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["details.component",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.css",{"_index":1018,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details.component.html",{"_index":1019,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details.component.ts",{"_index":1016,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:101",{"_index":1061,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:123",{"_index":1068,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:129",{"_index":1057,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:132",{"_index":1999,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:136",{"_index":1062,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:144",{"_index":1047,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:152",{"_index":1979,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:159",{"_index":1058,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:164",{"_index":1990,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:169",{"_index":1054,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:174",{"_index":1991,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:183",{"_index":1994,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:188",{"_index":1993,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:199",{"_index":1971,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":2003,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":1092,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":2009,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:33",{"_index":2000,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:37",{"_index":2001,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:38",{"_index":1076,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:41",{"_index":2006,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:45",{"_index":1094,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["details.component.ts:49",{"_index":2004,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:50",{"_index":1104,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:53",{"_index":1970,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:54",{"_index":1071,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:58",{"_index":1095,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:62",{"_index":1079,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:66",{"_index":1989,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:74",{"_index":1097,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:76",{"_index":1986,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:78",{"_index":1098,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:82",{"_index":1103,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:86",{"_index":1038,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:97",{"_index":1997,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.hide",{"_index":2036,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["details.user",{"_index":2033,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["details/:id",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["details/route",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{},"coverage.html":{}}}],["details/user",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["detalhada",{"_index":1116,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["dev",{"_index":2290,"title":{},"body":{"index.html":{}}}],["development",{"_index":2288,"title":{},"body":{"index.html":{}}}],["direction",{"_index":556,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["direction.ts",{"_index":2263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["directions",{"_index":1046,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["directionsoptions",{"_index":1020,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["directionsresults",{"_index":1021,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["directive",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["directives",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2297,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2301,"title":{},"body":{"index.html":{}}}],["disabledefaultui",{"_index":1087,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["disabledoubleclickzoom",{"_index":1090,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["display",{"_index":539,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["display:flex",{"_index":883,"title":{},"body":{"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{}}}],["displayed",{"_index":1270,"title":{},"body":{"components/RouteManagementComponent.html":{},"classes/Trip.html":{},"components/UsersManagementComponent.html":{}}}],["displayedcolumns",{"_index":1236,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["dist",{"_index":2300,"title":{},"body":{"index.html":{}}}],["distance",{"_index":1604,"title":{},"body":{"classes/StopTime.html":{}}}],["divider",{"_index":1007,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["document.getelementbyid('mychart",{"_index":1455,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["documentation",{"_index":2177,"title":{},"body":{"coverage.html":{}}}],["dodgerblue",{"_index":1320,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["doesn't",{"_index":1725,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["dom",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["done",{"_index":428,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["download",{"_index":534,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["draggable",{"_index":1091,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["duration",{"_index":920,"title":{},"body":{"classes/Route.html":{},"components/RouteManagementComponent.html":{}}}],["dynamic",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":2307,"title":{},"body":{"index.html":{}}}],["e2e8f0",{"_index":657,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["e9efff",{"_index":760,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["ease",{"_index":607,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["edit",{"_index":1096,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["edit'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["edit.component",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["edit.component.css",{"_index":1203,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["edit.component.html",{"_index":1204,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["edit.component.ts",{"_index":1202,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop-1.html":{}}}],["edit.component.ts:100",{"_index":1846,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:119",{"_index":1852,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:155",{"_index":1869,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:162",{"_index":1848,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:175",{"_index":1854,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:183",{"_index":1865,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:188",{"_index":1855,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:196",{"_index":1847,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:214",{"_index":1851,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:224",{"_index":1850,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:244",{"_index":1853,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:27",{"_index":1213,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:300",{"_index":1849,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:31",{"_index":1212,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{}}}],["edit.component.ts:35",{"_index":1210,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:40",{"_index":1211,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:42",{"_index":1859,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:49",{"_index":1862,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:50",{"_index":1206,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:53",{"_index":1868,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:57",{"_index":1857,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:61",{"_index":1863,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:65",{"_index":1860,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:66",{"_index":1208,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:70",{"_index":1866,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:74",{"_index":1856,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:78",{"_index":1858,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:83",{"_index":1861,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:84",{"_index":1209,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:92",{"_index":1864,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit.component.ts:94",{"_index":1207,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["edit.component.ts:96",{"_index":1867,"title":{},"body":{"components/TripEditComponent.html":{}}}],["edit/:id",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["edit/route",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"components/RouteEditComponent.html":{},"coverage.html":{}}}],["edit/trip",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop-1.html":{}}}],["edited",{"_index":1341,"title":{},"body":{"injectables/RouteService.html":{},"injectables/TripService.html":{}}}],["editing",{"_index":987,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["editroute",{"_index":1326,"title":{},"body":{"injectables/RouteService.html":{}}}],["editroute(route",{"_index":1338,"title":{},"body":{"injectables/RouteService.html":{}}}],["editrouteform",{"_index":1205,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["edits",{"_index":1644,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["editstoptime",{"_index":1634,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["editstoptime(tripid",{"_index":1645,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["edittrip",{"_index":1906,"title":{},"body":{"injectables/TripService.html":{}}}],["edittrip(trip",{"_index":1912,"title":{},"body":{"injectables/TripService.html":{}}}],["element",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["elements",{"_index":1258,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["email",{"_index":415,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/User.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{}}}],["emoji",{"_index":677,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["emoji\",\"segoe",{"_index":674,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["empty",{"_index":1831,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["en",{"_index":582,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["encapsulation",{"_index":517,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["end",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["enddate",{"_index":1662,"title":{},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{}}}],["entry.key.tripheadsign",{"_index":1180,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["enum",{"_index":977,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["enumerations",{"_index":2259,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/transport",{"_index":985,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{}}}],["enums/travel",{"_index":1745,"title":{},"body":{"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["enums/user",{"_index":1943,"title":{},"body":{"classes/User.html":{}}}],["environment",{"_index":2224,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":447,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["err.message",{"_index":449,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["error",{"_index":77,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["error('something",{"_index":127,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["error(error.error",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.error",{"_index":111,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["error.status",{"_index":103,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["errormessage",{"_index":371,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["evenly",{"_index":884,"title":{},"body":{"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["event",{"_index":1069,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/UsersManagementComponent.html":{}}}],["event.latlng?.lat",{"_index":1561,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["event.latlng?.lng",{"_index":1562,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["event.latlng?.tojson",{"_index":1560,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["event.target",{"_index":1306,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["event.value",{"_index":1139,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["execute",{"_index":2305,"title":{},"body":{"index.html":{}}}],["executed",{"_index":422,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["existent",{"_index":954,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/StopService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["existing",{"_index":1251,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["export",{"_index":45,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["exports",{"_index":1720,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["facing",{"_index":124,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["fafaf9",{"_index":878,"title":{},"body":{"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{}}}],["fails",{"_index":79,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["false",{"_index":352,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":666,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fancy",{"_index":631,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feedback",{"_index":394,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["ferry",{"_index":2271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fff",{"_index":654,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{}}}],["field",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["fields",{"_index":1004,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["files",{"_index":2294,"title":{},"body":{"index.html":{}}}],["fill='%23008060'/%3e%3c/g%3e%3c/svg%3e%0a",{"_index":649,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fill='%2300a080",{"_index":637,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fill='%2300fdcf'/%3e%3ccircle",{"_index":643,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fill='none",{"_index":635,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["filter",{"_index":1250,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["filtervalue",{"_index":1305,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":1309,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["finishtime",{"_index":931,"title":{},"body":{"classes/Route.html":{}}}],["first",{"_index":1060,"title":{},"body":{"components/RouteDetailsComponent.html":{},"classes/StopTime.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["fit",{"_index":719,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["flex",{"_index":540,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["float",{"_index":2087,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["flow",{"_index":1005,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["focused",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["font",{"_index":562,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["footer",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":388,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["formarray",{"_index":983,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["format",{"_index":1043,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["formated",{"_index":1935,"title":{},"body":{"classes/User.html":{}}}],["formateddate",{"_index":1926,"title":{},"body":{"classes/User.html":{}}}],["formbuilder",{"_index":947,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["formcontrol",{"_index":374,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["formcontrol(null",{"_index":416,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["formgroup",{"_index":375,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["forms",{"_index":1050,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["formsmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["formstop",{"_index":1804,"title":{"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["full",{"_index":35,"title":{},"body":{"classes/Agency.html":{},"modules/AppModule.html":{},"components/StopCreateComponent.html":{}}}],["function",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/StopTime.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["functions",{"_index":2278,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2314,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1194,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["generate",{"_index":2296,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2284,"title":{},"body":{"index.html":{}}}],["getactiveusers",{"_index":818,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["getagencies",{"_index":59,"title":{},"body":{"injectables/AgencyService.html":{}}}],["getbaseurl",{"_index":2228,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["geterrormessage",{"_index":1964,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["gethoursandminutesstring",{"_index":1597,"title":{},"body":{"classes/StopTime.html":{}}}],["getmostactivezones",{"_index":830,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["getnumberofnewusers",{"_index":827,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["getroute",{"_index":1327,"title":{},"body":{"injectables/RouteService.html":{}}}],["getroute(routeid",{"_index":1342,"title":{},"body":{"injectables/RouteService.html":{}}}],["getroutes",{"_index":1328,"title":{},"body":{"injectables/RouteService.html":{}}}],["gets",{"_index":949,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StopService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["getstops",{"_index":1581,"title":{},"body":{"injectables/StopService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["getstopsofroute",{"_index":1635,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["getstopsofroute(routeid",{"_index":1647,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["getstopsoftrip",{"_index":1636,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["getstopsoftrip(tripid",{"_index":1649,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["getsuspensions",{"_index":1965,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["getsuspensionsofuser",{"_index":1682,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["getsuspensionsofuser(userid",{"_index":1686,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["gettimeofstoptimelist",{"_index":1030,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["gettimeofstoptimelist(entry.value",{"_index":1181,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["gettimeofstoptimelist(stoptimes",{"_index":1056,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["getting",{"_index":2280,"title":{"index.html":{}},"body":{}}],["gettotalnumberofusers",{"_index":824,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["gettranslation",{"_index":1709,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{}}}],["gettranslation(lang",{"_index":1711,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["gettrip",{"_index":1907,"title":{},"body":{"injectables/TripService.html":{}}}],["gettrip(tripid",{"_index":1914,"title":{},"body":{"injectables/TripService.html":{}}}],["gettripsofroute",{"_index":1908,"title":{},"body":{"injectables/TripService.html":{}}}],["gettripsofroute(routeid",{"_index":1916,"title":{},"body":{"injectables/TripService.html":{}}}],["getuser",{"_index":1966,"title":{},"body":{"components/UserDetailsComponent.html":{},"injectables/UserService.html":{}}}],["getuser(userid",{"_index":2113,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserfromemail",{"_index":2110,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserfromemail(email",{"_index":2115,"title":{},"body":{"injectables/UserService.html":{}}}],["getusermostusedtransport",{"_index":834,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{},"components/UserDetailsComponent.html":{}}}],["getusermostusedtransport(userid",{"_index":836,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["getusers",{"_index":2111,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersinfo",{"_index":2127,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["getuserssuspensionpermanent",{"_index":2128,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["getusertimespent",{"_index":840,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{},"components/UserDetailsComponent.html":{}}}],["getusertimespent(userid",{"_index":843,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["give",{"_index":393,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["gives",{"_index":355,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["go",{"_index":365,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["google",{"_index":1045,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.directionsrendereroptions",{"_index":1073,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.directionsrequest",{"_index":1161,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.directionswaypoint",{"_index":1055,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.latlng(compstop.stoplat",{"_index":1808,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.latlng(stoptime.stop.stoplat",{"_index":1152,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["google.maps.latlngliteral",{"_index":1070,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.mapmouseevent",{"_index":1539,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["google.maps.mapoptions",{"_index":1084,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.markeroptions",{"_index":1093,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["google.maps.travelmode.driving",{"_index":1167,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["googlemapsmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["gradient",{"_index":602,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["graph",{"_index":2320,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{}}}],["grid",{"_index":1470,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["grow",{"_index":1840,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["guard",{"_index":329,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["guid",{"_index":812,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{}}}],["guid.create().tostring",{"_index":1816,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["handle",{"_index":82,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["handleerror",{"_index":61,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["handleerror(error",{"_index":73,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["handles",{"_index":76,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["happened",{"_index":129,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["header",{"_index":538,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{}}}],["height",{"_index":579,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["height='900",{"_index":634,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["help",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"index.html":{}}}],["helpmessage",{"_index":1114,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["hh:mm",{"_index":1144,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["hidden",{"_index":611,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteDetailsComponent.html":{}}}],["holds",{"_index":1080,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["horário",{"_index":1122,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["hours",{"_index":1616,"title":{},"body":{"classes/StopTime.html":{}}}],["html",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["htmlinputelement).value",{"_index":1307,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["http",{"_index":65,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":2291,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":63,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/StatisticsComponent.html":{}}}],["httperrorresponse",{"_index":74,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{}}}],["httprequest",{"_index":78,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["icon",{"_index":746,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["id",{"_index":28,"title":{},"body":{"classes/Agency.html":{},"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"injectables/RouteService.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["identifier",{"_index":2178,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":1517,"title":{},"body":{"classes/Stop.html":{}}}],["idx",{"_index":1822,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["ignore",{"_index":1113,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["image",{"_index":583,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"classes/User.html":{}}}],["image.round",{"_index":1317,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["image.tall",{"_index":1319,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["images",{"_index":629,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["img",{"_index":717,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{}}}],["implements",{"_index":362,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["import",{"_index":83,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["important",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["imports",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["inbound",{"_index":2275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":608,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["information",{"_index":356,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["informations",{"_index":2131,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["informação",{"_index":1115,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["inicializer",{"_index":2140,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["initialized",{"_index":1390,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["inject",{"_index":2010,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":56,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injects",{"_index":1387,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["inline",{"_index":664,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["input",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{},"components/UserDetailsComponent.html":{}}}],["input.value",{"_index":1316,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["input[type=radio",{"_index":705,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["inputs",{"_index":390,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["inserted",{"_index":1975,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["interface",{"_index":367,"title":{"interfaces/AuthResponse.html":{},"interfaces/MostUsedTransportResponse.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["interfaces",{"_index":369,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/MostUsedTransportResponse.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["interval",{"_index":1998,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["introduction",{"_index":571,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["isallselected",{"_index":1241,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["isauthenticated",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["isauthsuccessful",{"_index":372,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["isdevmode",{"_index":1718,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["islandingpage",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["isloading",{"_index":396,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["isloggedin",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin(token",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloginpageorlandingpage",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["isn't",{"_index":1985,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["it's",{"_index":349,"title":{},"body":{"guards/AuthGuard.html":{}}}],["item",{"_index":721,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{}}}],["items",{"_index":559,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["iterates",{"_index":1048,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["jquery",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["json.parse(payload",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":550,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["karma",{"_index":2306,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":612,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["keys",{"_index":1408,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["label",{"_index":401,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{}}}],["labels",{"_index":1460,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["labelsub",{"_index":1380,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["landing",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["landingpagecomponent",{"_index":167,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lang",{"_index":461,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"interfaces/UserForAuthentication.html":{}}}],["language",{"_index":31,"title":{},"body":{"classes/Agency.html":{},"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"interfaces/UserForAuthentication.html":{}}}],["languages",{"_index":398,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["languageselection",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{}}}],["last",{"_index":1006,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["lat",{"_index":1155,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["later",{"_index":133,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["latitude",{"_index":1524,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["left",{"_index":592,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["legend",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["lets",{"_index":1759,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["level",{"_index":1105,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["li",{"_index":882,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["li.nav",{"_index":880,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["library",{"_index":1400,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["lightcoral",{"_index":2089,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["lightgreen",{"_index":2090,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["lightsalmon",{"_index":2092,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["line",{"_index":681,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteDetailsComponent.html":{}}}],["linear",{"_index":601,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["link",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{}}}],["linkedstop",{"_index":1640,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["linking",{"_index":1065,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["linkmarkers",{"_index":1031,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["list",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StopService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["lista",{"_index":1120,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["literal",{"_index":526,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{}}}],["lng",{"_index":1158,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["loader",{"_index":327,"title":{},"body":{"modules/AppServerModule.html":{}}}],["loading",{"_index":395,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["local",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('useremail",{"_index":866,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["localstorage.removeitem(\"token",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(\"token",{"_index":441,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["localstorage.setitem(\"useremail",{"_index":443,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["located",{"_index":42,"title":{},"body":{"classes/Agency.html":{}}}],["location",{"_index":1547,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["locationid",{"_index":1549,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["locationservice",{"_index":1548,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["logged",{"_index":859,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["login",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["login'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["login.component.css",{"_index":384,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["login.component.html",{"_index":382,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["login.email",{"_index":436,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["login.password",{"_index":437,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["login/login.component",{"_index":863,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["loginbutton",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":170,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincredentials",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincredentials(loginform",{"_index":431,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["loginform",{"_index":391,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["loginform.value",{"_index":433,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["loginuser",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":554,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{}}}],["logout",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"components/NavMenuComponent.html":{}}}],["long",{"_index":911,"title":{},"body":{"classes/Route.html":{}}}],["longitude",{"_index":1525,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["made",{"_index":1083,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["main",{"_index":599,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{}}}],["makes",{"_index":1918,"title":{},"body":{"injectables/TripService.html":{}}}],["management",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["management'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["management.add",{"_index":1572,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["management.component",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["management.component.css",{"_index":1233,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["management.component.html",{"_index":1234,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["management.component.ts",{"_index":1232,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:104",{"_index":2134,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:111",{"_index":1248,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:119",{"_index":2133,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:141",{"_index":2142,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:161",{"_index":2132,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:23",{"_index":2147,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:25",{"_index":1274,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:27",{"_index":2148,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:29",{"_index":1268,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:31",{"_index":2144,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:33",{"_index":1266,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:35",{"_index":2146,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:37",{"_index":1276,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:39",{"_index":2145,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:41",{"_index":1279,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:43",{"_index":2130,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:45",{"_index":1243,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:55",{"_index":1260,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:58",{"_index":2139,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:65",{"_index":2138,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:74",{"_index":2141,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:76",{"_index":1253,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:85",{"_index":2135,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["management.component.ts:90",{"_index":1256,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.component.ts:99",{"_index":1261,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["management.create",{"_index":1829,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["management/route",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"components/RouteManagementComponent.html":{},"coverage.html":{}}}],["management/users",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["manipulation",{"_index":698,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["map",{"_index":325,"title":{},"body":{"modules/AppServerModule.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["mapdirectionsservice",{"_index":1037,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["mapoptions",{"_index":1022,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["mapping",{"_index":980,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["maps",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["maptypeid",{"_index":1085,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["margin",{"_index":572,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["marked",{"_index":1416,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["marker",{"_index":1051,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["markeroptions",{"_index":1023,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["markerpos",{"_index":1534,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["markers",{"_index":1024,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["mat",{"_index":576,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["matbuttonmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["matches",{"_index":951,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["matching",{"_index":53,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["math.floor((finishtime",{"_index":936,"title":{},"body":{"classes/Route.html":{}}}],["maticonmodule",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginator",{"_index":1271,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["matpaginatormodule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasource",{"_index":1265,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["mattabledatasource(this.routes",{"_index":1287,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["mattabledatasource(this.users",{"_index":2167,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["mattablemodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":590,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["max_waypoints",{"_index":1171,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["media",{"_index":588,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{}}}],["menu",{"_index":848,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu'},{'name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["menu.component",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["menu.component.css",{"_index":849,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.html",{"_index":850,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts",{"_index":847,"title":{},"body":{"components/NavMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:19",{"_index":857,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:23",{"_index":856,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:27",{"_index":858,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":853,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:45",{"_index":855,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:53",{"_index":854,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu/enlang.png",{"_index":585,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{}}}],["menu/nav",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"components/NavMenuComponent.html":{},"coverage.html":{}}}],["menu/ptlang.png",{"_index":587,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{}}}],["message",{"_index":125,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["messages",{"_index":1981,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["metadata",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["method",{"_index":819,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopTimeService.html":{},"injectables/TripService.html":{}}}],["methods",{"_index":58,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["metro",{"_index":2268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["min",{"_index":577,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["minutes",{"_index":1617,"title":{},"body":{"classes/StopTime.html":{}}}],["miscellaneous",{"_index":2258,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/agency",{"_index":89,"title":{},"body":{"injectables/AgencyService.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{}}}],["models/route",{"_index":984,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["models/statistics",{"_index":814,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["models/stop",{"_index":1108,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["models/suspension",{"_index":1697,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["models/trip",{"_index":1111,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["models/user",{"_index":2013,"title":{},"body":{"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["modify",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":197,"title":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/TranslocoRootModule.html":{}},"body":{}}],["modulemaploadermodule",{"_index":323,"title":{},"body":{"modules/AppServerModule.html":{}}}],["modules",{"_index":199,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/StatisticsComponent.html":{},"modules/TranslocoRootModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2315,"title":{},"body":{"index.html":{}}}],["mostactivezones",{"_index":1381,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["mostactivezonesdata",{"_index":1382,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["mostactivezoneskeys",{"_index":1383,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["mostusedtransport",{"_index":811,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"classes/Statistics.html":{},"injectables/StatisticsService.html":{}}}],["mostusedtransportresponse",{"_index":809,"title":{"interfaces/MostUsedTransportResponse.html":{}},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["mostusedtransporttype",{"_index":1959,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["mychart",{"_index":1481,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["name",{"_index":24,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"index.html":{}}}],["nav",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["navbar",{"_index":879,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["navigate",{"_index":386,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{},"index.html":{}}}],["navigator.geolocation.getcurrentposition((position",{"_index":1556,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["navmenu",{"_index":864,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["navmenucomponent",{"_index":172,"title":{"components/NavMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["need",{"_index":2311,"title":{},"body":{"index.html":{}}}],["network",{"_index":107,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["neue\",arial,\"noto",{"_index":671,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["new",{"_index":126,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["newusers",{"_index":1361,"title":{},"body":{"classes/Statistics.html":{},"components/StatisticsComponent.html":{}}}],["next",{"_index":354,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["ng",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"index.html":{}}}],["ngfactory",{"_index":326,"title":{},"body":{"modules/AppServerModule.html":{}}}],["ngmodule",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/StatisticsComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["ngneat/transloco",{"_index":379,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["ngoninit",{"_index":412,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["nguniversal/module",{"_index":324,"title":{},"body":{"modules/AppServerModule.html":{}}}],["none",{"_index":561,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{}}}],["normal",{"_index":595,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{},"components/UserDetailsComponent.html":{}}}],["normally",{"_index":1743,"title":{},"body":{"classes/Trip.html":{}}}],["null",{"_index":1811,"title":{},"body":{"components/TripCreateComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{}}}],["number",{"_index":38,"title":{},"body":{"classes/Agency.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["number(this.createrouteform.controls.transporttype.value",{"_index":994,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["number(this.createrouteform.controls.triptransportdirection.value",{"_index":1819,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["number(this.editrouteform.controls.triptransportdirection.value",{"_index":1895,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["number(v)).filter(v",{"_index":974,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["number.isfinite(v",{"_index":975,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["numrows",{"_index":1300,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["numselected",{"_index":1298,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["object",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"miscellaneous/variables.html":{}}}],["object.keys(data",{"_index":1435,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["object.keys(data).map(zone",{"_index":1437,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["object.keys(transporttype).map(v",{"_index":973,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["object.keys(traveldirection).map(v",{"_index":1775,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["object.values(data",{"_index":1441,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["observable",{"_index":72,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteDetailsComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["observe",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtain",{"_index":430,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["obtained",{"_index":1345,"title":{},"body":{"injectables/RouteService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{}}}],["occurred",{"_index":108,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["oidc",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["ondestroy",{"_index":1214,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["one",{"_index":952,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["oninit",{"_index":373,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["onsubmit",{"_index":944,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{}}}],["opacity",{"_index":729,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["operations",{"_index":95,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["option",{"_index":1724,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["optional",{"_index":26,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["options",{"_index":1077,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["order",{"_index":861,"title":{},"body":{"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"classes/StopTime.html":{},"components/UserDetailsComponent.html":{}}}],["orginal",{"_index":1407,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["orient",{"_index":1192,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["origin",{"_index":907,"title":{},"body":{"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["os",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["otherwise",{"_index":1263,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["out",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"index.html":{},"overview.html":{}}}],["outbound",{"_index":2274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["over",{"_index":2008,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["overflow",{"_index":610,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteDetailsComponent.html":{}}}],["overview",{"_index":2321,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":877,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["package",{"_index":2230,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":542,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["page",{"_index":353,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["page'},{'name",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["page.component",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.css",{"_index":519,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.html",{"_index":520,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":516,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:14",{"_index":527,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:18",{"_index":523,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:25",{"_index":525,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:32",{"_index":524,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/landing",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["paginator",{"_index":1237,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["paragens",{"_index":1121,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["param",{"_index":97,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["parameter",{"_index":1252,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["parsedpayload",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["parsedpayload.exp",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["part",{"_index":743,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["pass",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["passes",{"_index":953,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["password",{"_index":419,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["path",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["pathmatch",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["perform",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["perma",{"_index":2069,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["permanent",{"_index":1663,"title":{},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["permanent).subscribe(res",{"_index":2031,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["permant",{"_index":2137,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["pipe",{"_index":1042,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":102,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["placeholder",{"_index":2085,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["platform",{"_index":2308,"title":{},"body":{"index.html":{}}}],["play",{"_index":745,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["player",{"_index":738,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["please",{"_index":130,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["plugins",{"_index":1466,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["pointer",{"_index":663,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["popper.js",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":450,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["position.coords.latitude",{"_index":1557,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["position.coords.longitude",{"_index":1558,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["possible",{"_index":1980,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["post",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["preserve",{"_index":711,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["pressed",{"_index":424,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["previous",{"_index":961,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["primary",{"_index":30,"title":{},"body":{"classes/Agency.html":{}}}],["prints",{"_index":80,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["private",{"_index":60,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["prodmode",{"_index":1729,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["production",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1937,"title":{},"body":{"classes/User.html":{}}}],["profileimage",{"_index":1927,"title":{},"body":{"classes/User.html":{},"components/UserDetailsComponent.html":{}}}],["progress",{"_index":758,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["project",{"_index":2283,"title":{},"body":{"index.html":{}}}],["promise",{"_index":358,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/Agency.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"properties.html":{}}}],["provide",{"_index":1721,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1700,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["providedin",{"_index":90,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pt",{"_index":586,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/User.html":{}}}],["public",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop-1.html":{}}}],["put",{"_index":1618,"title":{},"body":{"classes/StopTime.html":{}}}],["puts",{"_index":1541,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["queries",{"_index":1482,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["r='366",{"_index":642,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["r='477.5",{"_index":646,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["radius",{"_index":658,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["rank",{"_index":1944,"title":{},"body":{"classes/User.html":{},"components/UsersManagementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["rank(privilege",{"_index":1942,"title":{},"body":{"classes/User.html":{}}}],["rank.ts",{"_index":2265,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rating",{"_index":1928,"title":{},"body":{"classes/User.html":{},"components/UsersManagementComponent.html":{}}}],["reactiveformsmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":2317,"title":{},"body":{"index.html":{}}}],["reason",{"_index":1664,"title":{},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["received",{"_index":357,"title":{},"body":{"guards/AuthGuard.html":{}}}],["record",{"_index":1609,"title":{},"body":{"classes/StopTime.html":{}}}],["redirect",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["redirects",{"_index":959,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["registerables",{"_index":1412,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["regular",{"_index":2277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["related",{"_index":1982,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["relative",{"_index":714,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["reload",{"_index":2293,"title":{},"body":{"index.html":{}}}],["remove",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["removes",{"_index":1766,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["removestop",{"_index":1754,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["removestop(stopindex",{"_index":1764,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["renderer",{"_index":1078,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["represents",{"_index":8,"title":{},"body":{"classes/Agency.html":{},"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"classes/Suspension.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["request",{"_index":1160,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["requests",{"_index":67,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["required",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["rerenderonlangchange",{"_index":1728,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["res",{"_index":440,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["res.foreach((suspension",{"_index":2153,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["res.token",{"_index":442,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["reset",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["resetforms",{"_index":1967,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["resets",{"_index":1995,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["response",{"_index":115,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["response.result",{"_index":1170,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["responsible",{"_index":1397,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["responsive",{"_index":1483,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["result",{"_index":1081,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["result.matches",{"_index":1424,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":1391,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["return",{"_index":99,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["returned",{"_index":113,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":71,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["returnurl",{"_index":387,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["reverse",{"_index":979,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["rgba(0",{"_index":546,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{}}}],["rgba(166",{"_index":692,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rgba(50",{"_index":616,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["rgba(59",{"_index":1463,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["rgba(81",{"_index":735,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["riders",{"_index":1518,"title":{},"body":{"classes/Stop.html":{}}}],["right",{"_index":574,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["ripple",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["roadmap",{"_index":1086,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["root",{"_index":91,"title":{},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["root.module",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["root.module.ts",{"_index":1708,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"coverage.html":{}}}],["root.module.ts:14",{"_index":1710,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{}}}],["root.module.ts:17",{"_index":1712,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{}}}],["rota",{"_index":1119,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["route",{"_index":176,"title":{"classes/Route.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["route(guid.create().tostring",{"_index":990,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["route(route.routeid",{"_index":1128,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["route(this.route.routeid",{"_index":1223,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["route.agency",{"_index":1133,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["route.agency.agencyname",{"_index":1314,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["route.agencyid",{"_index":1129,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["route.routeduration",{"_index":1315,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["route.routeid",{"_index":1292,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["route.routelongname",{"_index":1131,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["route.routeshortname",{"_index":1130,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["route.routetransporttype",{"_index":1132,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["routecreatecomponent",{"_index":175,"title":{"components/RouteCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routedetailscomponent",{"_index":178,"title":{"components/RouteDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routeduration",{"_index":891,"title":{},"body":{"classes/Route.html":{}}}],["routeeditcomponent",{"_index":180,"title":{"components/RouteEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["routeid",{"_index":892,"title":{},"body":{"classes/Route.html":{},"injectables/RouteService.html":{},"injectables/StopTimeService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{}}}],["routelongname",{"_index":893,"title":{},"body":{"classes/Route.html":{}}}],["routemanagementcomponent",{"_index":182,"title":{"components/RouteManagementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["router",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["routermodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":360,"title":{},"body":{"guards/AuthGuard.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/TripCreateComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{}}}],["routeservice",{"_index":946,"title":{"injectables/RouteService.html":{}},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["routeshortname",{"_index":894,"title":{},"body":{"classes/Route.html":{}}}],["routetodeleteid",{"_index":1291,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["routetransporttype",{"_index":895,"title":{},"body":{"classes/Route.html":{}}}],["row",{"_index":557,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["rows",{"_index":1259,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["rts.foreach((route",{"_index":1284,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["run",{"_index":2249,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["running",{"_index":2302,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":862,"title":{},"body":{"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["rxjs",{"_index":88,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["s",{"_index":1803,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["s.departuretime.length",{"_index":1890,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["s.stopid.length",{"_index":1814,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["s.stoptime.length",{"_index":1815,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["same",{"_index":1520,"title":{},"body":{"classes/Stop.html":{}}}],["sans\",sans",{"_index":672,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["saying",{"_index":912,"title":{},"body":{"classes/Route.html":{}}}],["scaffolding",{"_index":2295,"title":{},"body":{"index.html":{}}}],["scale(.8",{"_index":728,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["scale(1",{"_index":734,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["schedule",{"_index":1838,"title":{},"body":{"components/TripCreateComponent.html":{}}}],["scheduletitle",{"_index":1839,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["screen",{"_index":589,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{}}}],["script",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1344,"title":{},"body":{"injectables/RouteService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["section",{"_index":555,"title":{},"body":{"components/LandingPageComponent.html":{},"components/UserDetailsComponent.html":{}}}],["segoe",{"_index":669,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["select",{"_index":695,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["selected",{"_index":1100,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop-1.html":{}}}],["selectedtrip",{"_index":1025,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["selection",{"_index":1238,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["selectionmodel",{"_index":1281,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["selectionmodel(true",{"_index":1275,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["selector",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["selects",{"_index":1262,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["self",{"_index":565,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["send",{"_index":66,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{}}}],["sendauthstatechangenotification",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["sends",{"_index":964,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"injectables/RouteService.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{}}}],["sequence",{"_index":1642,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["serif,\"apple",{"_index":673,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["serve",{"_index":2289,"title":{},"body":{"index.html":{}}}],["server",{"_index":69,"title":{},"body":{"injectables/AgencyService.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["server.azurewebsites.net/api/agenciesapi",{"_index":101,"title":{},"body":{"injectables/AgencyService.html":{}}}],["server.azurewebsites.net/api/authapi/logindashboard",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["server.azurewebsites.net/api/routesapi",{"_index":1349,"title":{},"body":{"injectables/RouteService.html":{}}}],["server.azurewebsites.net/api/routesapi/${route.routeid",{"_index":1358,"title":{},"body":{"injectables/RouteService.html":{}}}],["server.azurewebsites.net/api/routesapi/${routeid",{"_index":1351,"title":{},"body":{"injectables/RouteService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/getactiveusers",{"_index":823,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/getmostactivezones",{"_index":833,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/getmostusedtransport/${userid",{"_index":839,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/gettimespent/${userid",{"_index":845,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/gettotalnumberofusers",{"_index":826,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/statisticsapi/gettotalofnewusers",{"_index":829,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["server.azurewebsites.net/api/stopsapi",{"_index":1588,"title":{},"body":{"injectables/StopService.html":{}}}],["server.azurewebsites.net/api/stoptimesapi",{"_index":1656,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["server.azurewebsites.net/api/stoptimesapi/${tripid}/${sequence",{"_index":1658,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["server.azurewebsites.net/api/stoptimesapi/route/${routeid",{"_index":1653,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["server.azurewebsites.net/api/stoptimesapi/trip/${tripid",{"_index":1654,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["server.azurewebsites.net/api/tripsapi",{"_index":1922,"title":{},"body":{"injectables/TripService.html":{}}}],["server.azurewebsites.net/api/tripsapi/${trip.tripid",{"_index":1923,"title":{},"body":{"injectables/TripService.html":{}}}],["server.azurewebsites.net/api/tripsapi/${tripid",{"_index":1921,"title":{},"body":{"injectables/TripService.html":{}}}],["server.azurewebsites.net/api/tripsapi/route/${routeid",{"_index":1920,"title":{},"body":{"injectables/TripService.html":{}}}],["server.azurewebsites.net/api/userapi",{"_index":2124,"title":{},"body":{"injectables/UserService.html":{}}}],["server.azurewebsites.net/api/userapi/${userid",{"_index":2120,"title":{},"body":{"injectables/UserService.html":{}}}],["server.azurewebsites.net/api/userapi/email/${email",{"_index":2122,"title":{},"body":{"injectables/UserService.html":{}}}],["server.azurewebsites.net/api/usersuspensionsapi",{"_index":1703,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["server.azurewebsites.net/api/usersuspensionsapi/unban/${userid",{"_index":1705,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["server.azurewebsites.net/api/usersuspensionsapi/user/${userid",{"_index":1699,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["servermodule",{"_index":322,"title":{},"body":{"modules/AppServerModule.html":{}}}],["serves",{"_index":425,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["service",{"_index":92,"title":{},"body":{"injectables/AgencyService.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["serviceid",{"_index":1732,"title":{},"body":{"classes/Trip.html":{}}}],["services/agency.service",{"_index":986,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["services/auth.service",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["services/route.service",{"_index":981,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["services/statistics.service",{"_index":1413,"title":{},"body":{"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["services/stop",{"_index":1109,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["services/stop.service",{"_index":1217,"title":{},"body":{"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["services/suspension.service",{"_index":2012,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["services/trip.service",{"_index":1112,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["services/user.service",{"_index":2014,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["shadow",{"_index":545,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["shape",{"_index":1608,"title":{},"body":{"classes/StopTime.html":{},"classes/Trip.html":{}}}],["shapedisttraveled",{"_index":1594,"title":{},"body":{"classes/StopTime.html":{}}}],["shapeid",{"_index":1733,"title":{},"body":{"classes/Trip.html":{}}}],["short",{"_index":914,"title":{},"body":{"classes/Route.html":{},"classes/Stop.html":{}}}],["show",{"_index":1398,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["shows",{"_index":1059,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["side",{"_index":106,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{}}}],["size",{"_index":563,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["sizing",{"_index":660,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["snackbar",{"_index":380,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["snackbar(this.translocoservice.translate('login.list",{"_index":448,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["snackbar(this.translocoservice.translate('route",{"_index":1571,"title":{},"body":{"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["snackbar(this.translocoservice.translate('user",{"_index":2032,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["solid",{"_index":656,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["song",{"_index":723,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sorts",{"_index":1987,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["space",{"_index":552,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{}}}],["specific",{"_index":1335,"title":{},"body":{"injectables/RouteService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["specifically",{"_index":1984,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["specified",{"_index":39,"title":{},"body":{"classes/Agency.html":{},"classes/StopTime.html":{}}}],["spent",{"_index":841,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{},"components/UserDetailsComponent.html":{}}}],["spinner",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/UserDetailsComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2279,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../transport",{"_index":2260,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../travel",{"_index":2262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":2264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.server.module.ts",{"_index":321,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/components/landing",{"_index":515,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":370,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:108",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:22",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:26",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:38",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:54",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:72",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/nav",{"_index":846,"title":{},"body":{"components/NavMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/route",{"_index":938,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"coverage.html":{}}}],["src/app/components/statistics/statistics.component.ts",{"_index":1375,"title":{},"body":{"components/StatisticsComponent.html":{},"coverage.html":{}}}],["src/app/components/statistics/statistics.component.ts:105",{"_index":1388,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:34",{"_index":1395,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:39",{"_index":1410,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:44",{"_index":1409,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:49",{"_index":1399,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:54",{"_index":1401,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:59",{"_index":1403,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:64",{"_index":1404,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:69",{"_index":1406,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:74",{"_index":1405,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/statistics/statistics.component.ts:79",{"_index":1386,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/components/stop",{"_index":1532,"title":{},"body":{"components/StopCreateComponent.html":{},"coverage.html":{}}}],["src/app/components/trip",{"_index":1750,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["src/app/components/user",{"_index":1955,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/users",{"_index":2125,"title":{},"body":{"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["src/app/enums/transport",{"_index":2266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/travel",{"_index":2272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/user",{"_index":2276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:13",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:29",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/models/agency.ts",{"_index":6,"title":{},"body":{"classes/Agency.html":{},"coverage.html":{}}}],["src/app/models/agency.ts:12",{"_index":34,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/agency.ts:16",{"_index":43,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/agency.ts:20",{"_index":40,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/agency.ts:24",{"_index":29,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/agency.ts:28",{"_index":21,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/agency.ts:8",{"_index":27,"title":{},"body":{"classes/Agency.html":{}}}],["src/app/models/route.ts",{"_index":890,"title":{},"body":{"classes/Route.html":{},"coverage.html":{}}}],["src/app/models/route.ts:11",{"_index":909,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:15",{"_index":903,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:19",{"_index":902,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:23",{"_index":913,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:27",{"_index":910,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:31",{"_index":916,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:35",{"_index":904,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:39",{"_index":900,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/route.ts:61",{"_index":918,"title":{},"body":{"classes/Route.html":{}}}],["src/app/models/statistics.ts",{"_index":1359,"title":{},"body":{"classes/Statistics.html":{},"coverage.html":{}}}],["src/app/models/statistics.ts:11",{"_index":1365,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/models/statistics.ts:3",{"_index":1366,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/models/statistics.ts:5",{"_index":1369,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/models/statistics.ts:7",{"_index":1368,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/models/statistics.ts:9",{"_index":1367,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/models/stop",{"_index":1590,"title":{},"body":{"classes/StopTime.html":{},"coverage.html":{}}}],["src/app/models/stop.ts",{"_index":1508,"title":{},"body":{"classes/Stop.html":{},"coverage.html":{}}}],["src/app/models/stop.ts:13",{"_index":1516,"title":{},"body":{"classes/Stop.html":{}}}],["src/app/models/stop.ts:17",{"_index":1526,"title":{},"body":{"classes/Stop.html":{}}}],["src/app/models/stop.ts:21",{"_index":1523,"title":{},"body":{"classes/Stop.html":{}}}],["src/app/models/stop.ts:25",{"_index":1515,"title":{},"body":{"classes/Stop.html":{}}}],["src/app/models/stop.ts:8",{"_index":1522,"title":{},"body":{"classes/Stop.html":{}}}],["src/app/models/suspension.ts",{"_index":1661,"title":{},"body":{"classes/Suspension.html":{},"coverage.html":{}}}],["src/app/models/suspension.ts:12",{"_index":1673,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/suspension.ts:16",{"_index":1672,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/suspension.ts:20",{"_index":1668,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/suspension.ts:24",{"_index":1671,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/suspension.ts:28",{"_index":1667,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/suspension.ts:8",{"_index":1669,"title":{},"body":{"classes/Suspension.html":{}}}],["src/app/models/trip.ts",{"_index":1731,"title":{},"body":{"classes/Trip.html":{},"coverage.html":{}}}],["src/app/models/trip.ts:11",{"_index":1744,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:15",{"_index":1742,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:19",{"_index":1739,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:23",{"_index":1738,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:27",{"_index":1740,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:31",{"_index":1737,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:35",{"_index":1741,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/trip.ts:41",{"_index":1736,"title":{},"body":{"classes/Trip.html":{}}}],["src/app/models/user.ts",{"_index":1924,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:10",{"_index":1936,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:14",{"_index":1941,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:18",{"_index":1940,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:22",{"_index":1939,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:26",{"_index":1932,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:30",{"_index":1933,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:34",{"_index":1934,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:38",{"_index":1931,"title":{},"body":{"classes/User.html":{}}}],["src/app/services/agency.service.ts",{"_index":57,"title":{},"body":{"injectables/AgencyService.html":{},"coverage.html":{}}}],["src/app/services/agency.service.ts:12",{"_index":64,"title":{},"body":{"injectables/AgencyService.html":{}}}],["src/app/services/agency.service.ts:20",{"_index":70,"title":{},"body":{"injectables/AgencyService.html":{}}}],["src/app/services/agency.service.ts:30",{"_index":75,"title":{},"body":{"injectables/AgencyService.html":{}}}],["src/app/services/auth.service.ts",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:20",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:50",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:61",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:68",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:78",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/route.service.ts",{"_index":1323,"title":{},"body":{"injectables/RouteService.html":{},"coverage.html":{}}}],["src/app/services/route.service.ts:13",{"_index":1329,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:25",{"_index":1346,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:36",{"_index":1343,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:47",{"_index":1331,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:58",{"_index":1334,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:69",{"_index":1339,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/route.service.ts:80",{"_index":1347,"title":{},"body":{"injectables/RouteService.html":{}}}],["src/app/services/statistics.service.ts",{"_index":810,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["src/app/services/statistics.service.ts:19",{"_index":1499,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:31",{"_index":1500,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:42",{"_index":1503,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:52",{"_index":1502,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:62",{"_index":1501,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:72",{"_index":1504,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:82",{"_index":1506,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:94",{"_index":1507,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/stop",{"_index":1630,"title":{},"body":{"injectables/StopTimeService.html":{},"coverage.html":{}}}],["src/app/services/stop.service.ts",{"_index":1579,"title":{},"body":{"injectables/StopService.html":{},"coverage.html":{}}}],["src/app/services/stop.service.ts:13",{"_index":1582,"title":{},"body":{"injectables/StopService.html":{}}}],["src/app/services/stop.service.ts:25",{"_index":1585,"title":{},"body":{"injectables/StopService.html":{}}}],["src/app/services/stop.service.ts:36",{"_index":1584,"title":{},"body":{"injectables/StopService.html":{}}}],["src/app/services/stop.service.ts:47",{"_index":1586,"title":{},"body":{"injectables/StopService.html":{}}}],["src/app/services/suspension.service.ts",{"_index":1681,"title":{},"body":{"injectables/SuspensionService.html":{},"coverage.html":{}}}],["src/app/services/suspension.service.ts:14",{"_index":1685,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["src/app/services/suspension.service.ts:27",{"_index":1687,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["src/app/services/suspension.service.ts:41",{"_index":1691,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["src/app/services/suspension.service.ts:54",{"_index":1695,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["src/app/services/suspension.service.ts:65",{"_index":1689,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["src/app/services/trip.service.ts",{"_index":1904,"title":{},"body":{"injectables/TripService.html":{},"coverage.html":{}}}],["src/app/services/trip.service.ts:12",{"_index":1909,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:24",{"_index":1917,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:35",{"_index":1915,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:46",{"_index":1911,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:57",{"_index":1913,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:68",{"_index":1919,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/user.service.ts",{"_index":2109,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:14",{"_index":2112,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":2114,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:33",{"_index":2116,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:43",{"_index":2117,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:54",{"_index":2118,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/transloco",{"_index":1707,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":2223,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2226,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":2227,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1107,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["startdate",{"_index":1665,"title":{},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{}}}],["started",{"_index":2281,"title":{"index.html":{}},"body":{}}],["starttime",{"_index":934,"title":{},"body":{"classes/Route.html":{}}}],["state",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2179,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":310,"title":{"classes/Statistics.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{}}}],["statistics'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["statistics.component.css",{"_index":1376,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.html",{"_index":1377,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statisticscomponent",{"_index":184,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statisticsservice",{"_index":817,"title":{"injectables/StatisticsService.html":{}},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["stats",{"_index":1472,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["stop",{"_index":187,"title":{"classes/Stop.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stop(guid.create().tostring",{"_index":1569,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["stop.arrivaltime",{"_index":1187,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop.departuretime",{"_index":1875,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop.error",{"_index":1574,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["stop.shapedisttraveled",{"_index":1877,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop.stop",{"_index":1879,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop.stop.stoplat",{"_index":1185,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["stop.stop.stoplon",{"_index":1186,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["stop.stop.stopname",{"_index":1184,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["stop.stopid",{"_index":1807,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stop.stopname",{"_index":1835,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["stop.stopsequence",{"_index":1876,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop.success",{"_index":1573,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["stop.trip",{"_index":1878,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stop_code",{"_index":1519,"title":{},"body":{"classes/Stop.html":{}}}],["stop_id",{"_index":1521,"title":{},"body":{"classes/Stop.html":{}}}],["stopcode",{"_index":1509,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["stopcreatecomponent",{"_index":186,"title":{"components/StopCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stopform",{"_index":1798,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stopid",{"_index":1510,"title":{},"body":{"classes/Stop.html":{},"classes/StopTime.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stopindex",{"_index":1767,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stoplat",{"_index":1511,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["stoplon",{"_index":1512,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["stopname",{"_index":1513,"title":{},"body":{"classes/Stop.html":{},"components/StopCreateComponent.html":{}}}],["stops",{"_index":896,"title":{},"body":{"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stops.every(s",{"_index":1813,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stops.foreach(stop",{"_index":1872,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stopsequence",{"_index":1595,"title":{},"body":{"classes/StopTime.html":{}}}],["stopservice",{"_index":1216,"title":{"injectables/StopService.html":{}},"body":{"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stoptime",{"_index":899,"title":{"classes/StopTime.html":{}},"body":{"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stoptime(stop.tripid",{"_index":1874,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stoptime(trip.tripid",{"_index":1901,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stoptime(tripid",{"_index":1826,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["stoptime).subscribe",{"_index":1903,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stoptime.gethoursandminutesstring",{"_index":1884,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stoptime.stop.stoplon",{"_index":1153,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["stoptime.stopid",{"_index":1883,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["stoptimes",{"_index":1041,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stoptimeservice",{"_index":1036,"title":{"injectables/StopTimeService.html":{}},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["storage",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"components/StatisticsComponent.html":{}}}],["stored",{"_index":1938,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["string",{"_index":19,"title":{},"body":{"classes/Agency.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["string(this.departuretime.gethours()).padstart(2",{"_index":1628,"title":{},"body":{"classes/StopTime.html":{}}}],["string(this.departuretime.getminutes()).padstart(2",{"_index":1629,"title":{},"body":{"classes/StopTime.html":{}}}],["string(this.urlroute.snapshot.parammap.get(\"id",{"_index":1123,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["stroke",{"_index":568,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["style",{"_index":455,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["styles",{"_index":514,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["styleurls",{"_index":383,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["sub",{"_index":752,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["subject",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe",{"_index":439,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["subscribe((route",{"_index":1125,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["subscribe((trip",{"_index":1871,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["subscribe(result",{"_index":1423,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["subscribes",{"_index":1393,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["subscription",{"_index":1402,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["subtitle",{"_index":753,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["succeed",{"_index":351,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["support",{"_index":1726,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"modules.html":{}}}],["suppressinfowindows",{"_index":1075,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["suppressmarkers",{"_index":1074,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["suspend",{"_index":1693,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["suspenddate",{"_index":1960,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspended",{"_index":2034,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspendreason",{"_index":1961,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspends",{"_index":1692,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["suspenduser",{"_index":1683,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{}}}],["suspenduser(permanent",{"_index":1996,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspenduser(userid",{"_index":1690,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["suspension",{"_index":1660,"title":{"classes/Suspension.html":{}},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["suspension(guid.create().tostring",{"_index":1702,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["suspension.enddate",{"_index":2074,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspension.permanent",{"_index":2024,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["suspension.reason",{"_index":2027,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspension.startdate",{"_index":2072,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["suspensions",{"_index":1688,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["suspensionservice",{"_index":1680,"title":{"injectables/SuspensionService.html":{}},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["svg",{"_index":2318,"title":{},"body":{"modules.html":{}}}],["symbol\",\"noto",{"_index":676,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["system",{"_index":1244,"title":{},"body":{"components/RouteManagementComponent.html":{},"injectables/StopService.html":{},"components/UsersManagementComponent.html":{}}}],["t('account",{"_index":2063,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('active",{"_index":1467,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t('ban",{"_index":2075,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t('cancel",{"_index":1003,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('create",{"_index":1002,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('delete",{"_index":1310,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["t('departure",{"_index":1836,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('edit",{"_index":1178,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t('email",{"_index":2059,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('error",{"_index":999,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{}}}],["t('filter",{"_index":1311,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t('hint",{"_index":2080,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('input",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["t('label",{"_index":998,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('list",{"_index":2070,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('loading",{"_index":1177,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t('login",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{}}}],["t('logout",{"_index":872,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t('mostusedtransport",{"_index":2066,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('new",{"_index":1469,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t('no",{"_index":1189,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t('rating",{"_index":2061,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('reason",{"_index":2081,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('route",{"_index":1182,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{}}}],["t('routes",{"_index":870,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t('schedules",{"_index":1833,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('since",{"_index":2071,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('stats",{"_index":869,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t('stop",{"_index":1834,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t('submit",{"_index":1575,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["t('subtitle",{"_index":533,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["t('suspend",{"_index":2076,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('suspension",{"_index":2077,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('timespend",{"_index":2067,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('title",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t('total",{"_index":1468,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t('trip",{"_index":1179,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t('unban",{"_index":2082,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t('until",{"_index":2073,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('update",{"_index":1230,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{}}}],["t('user",{"_index":2068,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t('username",{"_index":2058,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t('users",{"_index":871,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t('welcome",{"_index":868,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(\\'account",{"_index":2096,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'active",{"_index":1496,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t(\\'ban",{"_index":2103,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t(\\'cancel",{"_index":1015,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'create",{"_index":1014,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'delete",{"_index":1321,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["t(\\'departure",{"_index":1845,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'edit",{"_index":1198,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t(\\'email",{"_index":2094,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'error",{"_index":1013,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{}}}],["t(\\'filter",{"_index":1322,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t(\\'hint",{"_index":2106,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'input",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["t(\\'label",{"_index":1012,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'list",{"_index":2100,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'loading",{"_index":1197,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t(\\'login",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["t(\\'logout",{"_index":889,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(\\'mostusedtransport",{"_index":2097,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'new",{"_index":1498,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t(\\'no",{"_index":1201,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t(\\'rating",{"_index":2095,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'reason",{"_index":2107,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'route",{"_index":1200,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{}}}],["t(\\'routes",{"_index":887,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(\\'schedules",{"_index":1843,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'since",{"_index":2101,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'stats",{"_index":886,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(\\'stop",{"_index":1844,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'submit",{"_index":1578,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["t(\\'subtitle",{"_index":768,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["t(\\'suspend",{"_index":2104,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'suspension",{"_index":2105,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'timespend",{"_index":2098,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'title",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t(\\'total",{"_index":1497,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["t(\\'trip",{"_index":1199,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["t(\\'unban",{"_index":2108,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t(\\'until",{"_index":2102,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'update",{"_index":1231,"title":{},"body":{"components/RouteEditComponent.html":{},"components/TripEditComponent.html":{}}}],["t(\\'user",{"_index":2099,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["t(\\'username",{"_index":2093,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["t(\\'users",{"_index":888,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(\\'welcome",{"_index":885,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["t(geterrormessage",{"_index":2079,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["table",{"_index":1267,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2229,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":906,"title":{},"body":{"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["telephone",{"_index":37,"title":{},"body":{"classes/Agency.html":{}}}],["template",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["templateurl",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["test",{"_index":764,"title":{},"body":{"components/LandingPageComponent.html":{},"index.html":{}}}],["testing",{"_index":2312,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2304,"title":{},"body":{"index.html":{}}}],["text",{"_index":407,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteManagementComponent.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["textarea.mat",{"_index":2084,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["thickness",{"_index":685,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.activelang",{"_index":410,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.activeusers",{"_index":1427,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.activeuserscount",{"_index":1370,"title":{},"body":{"classes/Statistics.html":{}}}],["this.addmarkers",{"_index":1147,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.agencies",{"_index":989,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["this.agency",{"_index":926,"title":{},"body":{"classes/Route.html":{}}}],["this.agencyid",{"_index":46,"title":{},"body":{"classes/Agency.html":{},"classes/Route.html":{}}}],["this.agencylang",{"_index":50,"title":{},"body":{"classes/Agency.html":{}}}],["this.agencyname",{"_index":47,"title":{},"body":{"classes/Agency.html":{}}}],["this.agencyphone",{"_index":51,"title":{},"body":{"classes/Agency.html":{}}}],["this.agencyservice.getagencies().subscribe((agencies",{"_index":988,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["this.agencytimezone",{"_index":49,"title":{},"body":{"classes/Agency.html":{}}}],["this.agencyurl",{"_index":48,"title":{},"body":{"classes/Agency.html":{}}}],["this.allstops",{"_index":1796,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.allstops.foreach(compstop",{"_index":1805,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.alltrips!.push(new",{"_index":1788,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.arrivaltime",{"_index":1620,"title":{},"body":{"classes/StopTime.html":{}}}],["this.authchangesub.asobservable",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authchangesub.next(isauthenticated",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.isloggedin(localstorage.getitem('token')!.tostring",{"_index":363,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.loginuser(userforauth",{"_index":438,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.authservice.logout",{"_index":867,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.authservice.sendauthstatechangenotification(res.isauthsuccessful",{"_index":444,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.availablelangs",{"_index":408,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.banned",{"_index":2025,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.banned.set(user.id",{"_index":2152,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.banreason",{"_index":2026,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.breakpointobserver.observe",{"_index":1420,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.calculaterouteduration",{"_index":929,"title":{},"body":{"classes/Route.html":{}}}],["this.center",{"_index":1154,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.change",{"_index":1425,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart",{"_index":1458,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart.data.datasets[0].data",{"_index":1444,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart.data.datasets[0].data.length",{"_index":1442,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart.data.datasets[0].label",{"_index":1451,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart.data.labels",{"_index":1445,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.chart.update",{"_index":1446,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.createrouteform.controls.agency.value",{"_index":991,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["this.createrouteform.controls.name.value",{"_index":993,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["this.createrouteform.controls.number.value",{"_index":992,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["this.createrouteform.controls.tripname.value",{"_index":1818,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createrouteform.controls[\"stops",{"_index":1801,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createrouteform.value.stops",{"_index":1810,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createrouteform.value.stops!.foreach(s",{"_index":1823,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createrouteform.value.stops.length",{"_index":1812,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createrouteform.value.stops?.foreach(s",{"_index":1802,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.createstopform.controls.code.value",{"_index":1565,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createstopform.controls.latitude.patchvalue(event.latlng.lat",{"_index":1563,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createstopform.controls.latitude.value",{"_index":1567,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createstopform.controls.longitude.patchvalue(event.latlng.lng",{"_index":1564,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createstopform.controls.longitude.value",{"_index":1568,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createstopform.controls.name.value",{"_index":1566,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.createwaypoints",{"_index":1164,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.creationdate",{"_index":1949,"title":{},"body":{"classes/User.html":{}}}],["this.creationdate.tolocaledatestring('pt",{"_index":1953,"title":{},"body":{"classes/User.html":{}}}],["this.currentuser",{"_index":2016,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.datasource",{"_index":1286,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.datasource.data",{"_index":1296,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.datasource.data.length",{"_index":1301,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.datasource.filter",{"_index":1308,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.datasource.paginator",{"_index":1288,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.dateaftertodayvalidator",{"_index":2005,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.datepipe.transform(stoptimes[0].arrivaltime",{"_index":1143,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.datepipe.transform(stoptimes[stoptimes.length",{"_index":1145,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.departuretime",{"_index":1622,"title":{},"body":{"classes/StopTime.html":{}}}],["this.direction",{"_index":1748,"title":{},"body":{"classes/Trip.html":{}}}],["this.directionsresults",{"_index":1168,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.controls.agency.patchvalue(this.route.agencyid",{"_index":1222,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.agency.value",{"_index":1224,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.name.patchvalue(this.route.routelongname",{"_index":1220,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.name.value",{"_index":1226,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.number.patchvalue(this.route.routeshortname",{"_index":1219,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.number.value",{"_index":1225,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.stops.patchvalue(this.tripstops",{"_index":1882,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.controls.transporttype.patchvalue(this.route.routetransporttype",{"_index":1221,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.transporttype.value",{"_index":1227,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.editrouteform.controls.tripname.patchvalue(this.selectedtrip.tripheadsign",{"_index":1880,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.controls.tripname.value",{"_index":1892,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.controls.triptransportdirection.patchvalue(this.selectedtrip.direction",{"_index":1881,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.controls[\"stops",{"_index":1887,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.value.stops",{"_index":1889,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.value.stops.foreach(s",{"_index":1898,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.editrouteform.value.stops?.foreach(s",{"_index":1888,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.email",{"_index":1951,"title":{},"body":{"classes/User.html":{}}}],["this.enddate",{"_index":1677,"title":{},"body":{"classes/Suspension.html":{}}}],["this.formateddate",{"_index":1952,"title":{},"body":{"classes/User.html":{}}}],["this.formbuilder.array",{"_index":1773,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.formbuilder.control(null",{"_index":970,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.formbuilder.group",{"_index":969,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.getsuspensions",{"_index":2051,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.getuser",{"_index":2050,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.getusermostusedtransport",{"_index":2052,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.getusersinfo",{"_index":2149,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.getuserssuspensionpermanent",{"_index":2166,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.getusertimespent",{"_index":2053,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.http.delete(`api/routesapi/${routeid",{"_index":1354,"title":{},"body":{"injectables/RouteService.html":{}}}],["this.http.delete(`api/stoptimesapi/${stoptimeid",{"_index":1659,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["this.http.delete(`https://traveller",{"_index":1355,"title":{},"body":{"injectables/RouteService.html":{},"injectables/StopTimeService.html":{}}}],["this.http.get('api/routesapi",{"_index":1348,"title":{},"body":{"injectables/RouteService.html":{}}}],["this.http.get('api/statisticsapi/getactiveusers",{"_index":822,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get('api/statisticsapi/getmostactivezones",{"_index":832,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get('api/statisticsapi/gettotalnumberofusers",{"_index":825,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get('api/statisticsapi/gettotalofnewusers",{"_index":828,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get('api/stopsapi",{"_index":1587,"title":{},"body":{"injectables/StopService.html":{}}}],["this.http.get('https://traveller",{"_index":100,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{}}}],["this.http.get(`/assets/i18n/${lang}.json",{"_index":1719,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["this.http.get(`api/routesapi/${routeid",{"_index":1350,"title":{},"body":{"injectables/RouteService.html":{}}}],["this.http.get(`api/routesapi/stoptimes/${routeid}`).pipe(catcherror(this.handleerror",{"_index":1652,"title":{},"body":{"injectables/StopTimeService.html":{},"injectables/TripService.html":{}}}],["this.http.get(`api/statisticsapi/getmostusedtransport/${userid",{"_index":837,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get(`api/statisticsapi/gettimespent/${userid",{"_index":844,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["this.http.get(`api/userapi",{"_index":2123,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`api/userapi/${userid",{"_index":2119,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`api/userapi/email/${email",{"_index":2121,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`api/usersuspensionsapi/unban/${userid",{"_index":1704,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["this.http.get(`api/usersuspensionsapi/user/${userid",{"_index":1698,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["this.http.get(`https://traveller",{"_index":838,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["this.http.post('api/authapi/logindashboard",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('https://traveller",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`api/routesapi",{"_index":1352,"title":{},"body":{"injectables/RouteService.html":{},"injectables/TripService.html":{}}}],["this.http.post(`api/stopsapi",{"_index":1589,"title":{},"body":{"injectables/StopService.html":{}}}],["this.http.post(`api/stoptimesapi",{"_index":1655,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["this.http.post(`api/usersuspensionsapi",{"_index":1701,"title":{},"body":{"injectables/SuspensionService.html":{}}}],["this.http.post(`https://traveller",{"_index":1353,"title":{},"body":{"injectables/RouteService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{}}}],["this.http.put(`api/routesapi/${route.routeid",{"_index":1356,"title":{},"body":{"injectables/RouteService.html":{},"injectables/TripService.html":{}}}],["this.http.put(`api/stoptimesapi/${stoptime.id",{"_index":1657,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["this.http.put(`https://traveller",{"_index":1357,"title":{},"body":{"injectables/RouteService.html":{},"injectables/StopTimeService.html":{},"injectables/TripService.html":{}}}],["this.id",{"_index":1674,"title":{},"body":{"classes/Suspension.html":{},"classes/User.html":{}}}],["this.isallselected",{"_index":1302,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.isloading",{"_index":445,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.label",{"_index":1447,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.labelsub",{"_index":1449,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.linkmarkers",{"_index":1148,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.loginform",{"_index":414,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.mapdirectionsservice.route(request).pipe(map(response",{"_index":1169,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.markerpos",{"_index":1559,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.markers.push(new",{"_index":1151,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.markers.splice(0",{"_index":1149,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.markers[0",{"_index":1162,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.markers[math.floor(this.markers.length",{"_index":1156,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.markers[this.markers.length",{"_index":1165,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.mostactivezones",{"_index":1436,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.mostactivezonesdata",{"_index":1440,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.mostactivezonesdata.length",{"_index":1443,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.mostactivezoneskeys",{"_index":1434,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.mostactivezoneskeys.map(zone",{"_index":1453,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.mostusedtransport",{"_index":1373,"title":{},"body":{"classes/Statistics.html":{}}}],["this.mostusedtransporttype",{"_index":2044,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.newusers",{"_index":1372,"title":{},"body":{"classes/Statistics.html":{},"components/StatisticsComponent.html":{}}}],["this.ngoninit",{"_index":2038,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.paginator",{"_index":1289,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.permanent",{"_index":1679,"title":{},"body":{"classes/Suspension.html":{}}}],["this.profileimage",{"_index":1954,"title":{},"body":{"classes/User.html":{}}}],["this.rating",{"_index":1948,"title":{},"body":{"classes/User.html":{}}}],["this.reason",{"_index":1678,"title":{},"body":{"classes/Suspension.html":{}}}],["this.resetforms",{"_index":2037,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.returnurl",{"_index":420,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.route",{"_index":1127,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.route.routeid",{"_index":1229,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":421,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.routeduration",{"_index":928,"title":{},"body":{"classes/Route.html":{}}}],["this.routeid",{"_index":922,"title":{},"body":{"classes/Route.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.routelongname",{"_index":924,"title":{},"body":{"classes/Route.html":{}}}],["this.router.navigate",{"_index":996,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.router.navigate(['/api/authapi/logindashboard",{"_index":364,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/statistics",{"_index":446,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.router.url",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["this.routes",{"_index":1297,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routes.findindex((route",{"_index":1294,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routes.push(new",{"_index":1285,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routes.splice(index",{"_index":1295,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routeservice.addroute(route).subscribe",{"_index":995,"title":{},"body":{"components/RouteCreateComponent.html":{}}}],["this.routeservice.deleteroute(routetodeleteid).subscribe(result",{"_index":1293,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routeservice.editroute(route).subscribe",{"_index":1228,"title":{},"body":{"components/RouteEditComponent.html":{}}}],["this.routeservice.getroute(id",{"_index":1124,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{}}}],["this.routeservice.getroute(this.routeid",{"_index":1786,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.routeservice.getroutes().subscribe((rts",{"_index":1283,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.routeshortname",{"_index":923,"title":{},"body":{"classes/Route.html":{}}}],["this.routetransporttype",{"_index":925,"title":{},"body":{"classes/Route.html":{}}}],["this.selectedtrip",{"_index":1138,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.selectedtrip.routeid",{"_index":1893,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.selectedtrip.serviceid",{"_index":1894,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.selectedtrip.shapeid",{"_index":1896,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.selection.clear",{"_index":1303,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.selection.select(...this.datasource.data",{"_index":1304,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.selection.selected.foreach((route",{"_index":1290,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["this.selection.selected.foreach((user",{"_index":2168,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.selection.selected.length",{"_index":1299,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.sendauthstatechangenotification(false",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.service.getactivelang",{"_index":530,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{}}}],["this.service.getavailablelangs",{"_index":529,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{}}}],["this.service.setactivelang(lang",{"_index":531,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{}}}],["this.serviceid",{"_index":1747,"title":{},"body":{"classes/Trip.html":{}}}],["this.shapedisttraveled",{"_index":1625,"title":{},"body":{"classes/StopTime.html":{}}}],["this.shapeid",{"_index":1749,"title":{},"body":{"classes/Trip.html":{}}}],["this.startdate",{"_index":1676,"title":{},"body":{"classes/Suspension.html":{}}}],["this.statisticsservice.getactiveusers().subscribe(data",{"_index":1426,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.statisticsservice.getmostactivezones().subscribe(data",{"_index":1433,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.statisticsservice.getnumberofnewusers().subscribe(data",{"_index":1431,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.statisticsservice.gettotalnumberofusers().subscribe(data",{"_index":1429,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.statisticsservice.getusertimespent(this.route.snapshot.params.id).subscribe(data",{"_index":2046,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.stop",{"_index":1627,"title":{},"body":{"classes/StopTime.html":{}}}],["this.stopcode",{"_index":1528,"title":{},"body":{"classes/Stop.html":{}}}],["this.stopid",{"_index":1527,"title":{},"body":{"classes/Stop.html":{},"classes/StopTime.html":{}}}],["this.stoplat",{"_index":1530,"title":{},"body":{"classes/Stop.html":{}}}],["this.stoplon",{"_index":1531,"title":{},"body":{"classes/Stop.html":{}}}],["this.stopname",{"_index":1529,"title":{},"body":{"classes/Stop.html":{}}}],["this.stops",{"_index":927,"title":{},"body":{"classes/Route.html":{}}}],["this.stops.length",{"_index":930,"title":{},"body":{"classes/Route.html":{}}}],["this.stops.push(stopform",{"_index":1799,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.stops.removeat(stopindex",{"_index":1800,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.stopsequence",{"_index":1624,"title":{},"body":{"classes/StopTime.html":{}}}],["this.stopservice.addstop(stop).subscribe",{"_index":1570,"title":{},"body":{"components/StopCreateComponent.html":{}}}],["this.stopservice.getstops().subscribe(result",{"_index":1795,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.stoptimeservice.addstoptime(stoptime).subscribe",{"_index":1828,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.stoptimeservice.editstoptime(stoptime.tripid",{"_index":1902,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.stoptimeservice.getstopsofroute(route.routeid).subscribe((stops",{"_index":1126,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.stoptimeservice.getstopsoftrip(trip.tripid).subscribe((stops",{"_index":1136,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.suspenddate.reset",{"_index":2049,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspenddate.value",{"_index":2043,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspendreason",{"_index":2030,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensions",{"_index":2018,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensions.foreach((suspension",{"_index":2023,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensions.sort((a",{"_index":2019,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensionservice.getsuspensionsofuser(this.route.snapshot.params.id).subscribe(result",{"_index":2017,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensionservice.getsuspensionsofuser(user.id).subscribe(res",{"_index":2151,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.suspensionservice.suspenduser(this.currentuser.id",{"_index":2028,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensionservice.suspenduser(usertobanid",{"_index":2171,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.suspensionservice.unbanuser(this.currentuser.id).subscribe(res",{"_index":2041,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.suspensionservice.unbanuser(userid).subscribe(res",{"_index":2174,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.timespent",{"_index":1374,"title":{},"body":{"classes/Statistics.html":{}}}],["this.timespentintransport",{"_index":2047,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.totalusers",{"_index":1371,"title":{},"body":{"classes/Statistics.html":{},"components/StatisticsComponent.html":{}}}],["this.translation.langchanges$.subscribe",{"_index":1452,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.translation.selecttranslate('statistics.list.chart",{"_index":1448,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.translation.translate('statistics.list",{"_index":1438,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.translocoservice.getactivelang",{"_index":411,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.translocoservice.getavailablelangs",{"_index":409,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.translocoservice.setactivelang(lang",{"_index":464,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["this.translocoservice.translate('login.list.hide",{"_index":454,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.translocoservice.translate('user",{"_index":2035,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["this.trip",{"_index":1626,"title":{},"body":{"classes/StopTime.html":{}}}],["this.tripheadsign",{"_index":1746,"title":{},"body":{"classes/Trip.html":{}}}],["this.tripid",{"_index":1619,"title":{},"body":{"classes/StopTime.html":{},"classes/Trip.html":{}}}],["this.tripservice.addtrip(trip).subscribe",{"_index":1821,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.tripservice.edittrip(trip).subscribe",{"_index":1897,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.tripservice.gettrip(id",{"_index":1870,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.tripservice.gettripsofroute(this.route.routeid).subscribe((trips",{"_index":1134,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.tripservice.gettripsofroute(this.routeid).subscribe((trips",{"_index":1787,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["this.tripsstopsmap.get(event.value",{"_index":1141,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.tripsstopsmap.set(trip",{"_index":1137,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.tripstops",{"_index":1140,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["this.tripstops!.foreach(stoptime",{"_index":1150,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.tripstops!.push(new",{"_index":1873,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.tripstops.length",{"_index":1174,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.tripstops?.slice(1",{"_index":1173,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["this.updatemap",{"_index":1142,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["this.useremail",{"_index":865,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.userid",{"_index":1675,"title":{},"body":{"classes/Suspension.html":{}}}],["this.username",{"_index":1947,"title":{},"body":{"classes/User.html":{}}}],["this.userrank",{"_index":1945,"title":{},"body":{"classes/User.html":{}}}],["this.users",{"_index":2156,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.users.foreach((user",{"_index":2150,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.users.push(new",{"_index":2159,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["this.userservice.getuser(this.route.snapshot.params.id).subscribe(result",{"_index":2015,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.userservice.getusers().subscribe((usr",{"_index":2157,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["through",{"_index":1049,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["throwerror",{"_index":87,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["tile",{"_index":1471,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["time",{"_index":754,"title":{},"body":{"components/LandingPageComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/StatisticsService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["time.service",{"_index":1110,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["time.service.ts",{"_index":1631,"title":{},"body":{"injectables/StopTimeService.html":{},"coverage.html":{}}}],["time.service.ts:13",{"_index":1637,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:25",{"_index":1648,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:35",{"_index":1650,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:46",{"_index":1639,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:57",{"_index":1646,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:68",{"_index":1643,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.service.ts:79",{"_index":1651,"title":{},"body":{"injectables/StopTimeService.html":{}}}],["time.ts",{"_index":1591,"title":{},"body":{"classes/StopTime.html":{},"coverage.html":{}}}],["time.ts:11",{"_index":1614,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:15",{"_index":1613,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:19",{"_index":1600,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:23",{"_index":1602,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:27",{"_index":1611,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:31",{"_index":1610,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:35",{"_index":1612,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:39",{"_index":1599,"title":{},"body":{"classes/StopTime.html":{}}}],["time.ts:61",{"_index":1615,"title":{},"body":{"classes/StopTime.html":{}}}],["times",{"_index":1101,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["timespent",{"_index":1362,"title":{},"body":{"classes/Statistics.html":{}}}],["timespentintransport",{"_index":1962,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["timezone",{"_index":41,"title":{},"body":{"classes/Agency.html":{}}}],["title",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{}}}],["title').subscribe",{"_index":1450,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["today",{"_index":1977,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["toformgroup",{"_index":1753,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["together",{"_index":1066,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["toggle",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["toggleallrows",{"_index":1242,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["token",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["tooltip",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["top",{"_index":763,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["total",{"_index":820,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["totalcount",{"_index":816,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"injectables/StatisticsService.html":{}}}],["totalusers",{"_index":1363,"title":{},"body":{"classes/Statistics.html":{},"components/StatisticsComponent.html":{}}}],["touch",{"_index":696,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["train",{"_index":2269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tram",{"_index":2267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transform",{"_index":709,"title":{},"body":{"components/LandingPageComponent.html":{},"components/StatisticsComponent.html":{}}}],["transit",{"_index":33,"title":{},"body":{"classes/Agency.html":{}}}],["transition",{"_index":686,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["translate",{"_index":1477,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["translated",{"_index":1394,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["translatex",{"_index":726,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["translatex(0",{"_index":733,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["translatex(40",{"_index":732,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["translatey",{"_index":766,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["translatey(0",{"_index":765,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["translation",{"_index":406,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["transloco",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["transloco_config",{"_index":1715,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["transloco_loader",{"_index":1713,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["translococonfig",{"_index":1716,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["translocohttploader",{"_index":1706,"title":{"injectables/TranslocoHttpLoader.html":{}},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"coverage.html":{}}}],["translocoloader",{"_index":1714,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["translocomodule",{"_index":1717,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["translocorootmodule",{"_index":206,"title":{"modules/TranslocoRootModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"modules.html":{},"overview.html":{}}}],["translocoservice",{"_index":378,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["transparent",{"_index":652,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["transport",{"_index":835,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"classes/Route.html":{},"components/RouteManagementComponent.html":{},"injectables/StatisticsService.html":{},"classes/Trip.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transportation",{"_index":1992,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["transports",{"_index":842,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"injectables/StatisticsService.html":{}}}],["transporttype",{"_index":815,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/StatisticsService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["transporttype[route.routetransporttype",{"_index":1312,"title":{},"body":{"components/RouteManagementComponent.html":{}}}],["transporttype[transport",{"_index":1000,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{}}}],["travel",{"_index":2273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["traveldirection",{"_index":1735,"title":{},"body":{"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["traveldirection[direction",{"_index":1832,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{}}}],["traveled",{"_index":1605,"title":{},"body":{"classes/StopTime.html":{}}}],["traveller",{"_index":532,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["traveller_dashboard",{"_index":2282,"title":{},"body":{"index.html":{}}}],["travelmode",{"_index":1166,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["tree",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["trip",{"_index":189,"title":{"classes/Trip.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip(this.selectedtrip.tripid",{"_index":1891,"title":{},"body":{"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["trip(trip.tripid",{"_index":1789,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip(tripid",{"_index":1817,"title":{},"body":{"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["trip.direction",{"_index":1793,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip.error",{"_index":1830,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip.routeid",{"_index":1791,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip.serviceid",{"_index":1792,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip.shapeid",{"_index":1794,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trip.tripheadsign",{"_index":1790,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["tripcreatecomponent",{"_index":188,"title":{"components/TripCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop.html":{},"overview.html":{}}}],["tripeditcomponent",{"_index":190,"title":{"components/TripEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["tripheadsign",{"_index":1734,"title":{},"body":{"classes/Trip.html":{}}}],["tripid",{"_index":1596,"title":{},"body":{"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{}}}],["tripname",{"_index":1771,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trips",{"_index":1040,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["trips.foreach((trip",{"_index":1135,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"interfaces/formStop.html":{}}}],["tripservice",{"_index":1035,"title":{"injectables/TripService.html":{}},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"coverage.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["tripsstopsmap",{"_index":1026,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["tripstops",{"_index":1027,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["triptransportdirection",{"_index":1772,"title":{},"body":{"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["true",{"_index":350,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/variables.html":{}}}],["true).subscribe(res",{"_index":2172,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["try",{"_index":131,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["trying",{"_index":1983,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["tslib",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"classes/Stop.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/TranslocoHttpLoader.html":{},"classes/Trip.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":2261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typescript",{"_index":813,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"dependencies.html":{},"interfaces/formStop.html":{}}}],["ui",{"_index":675,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["ui\",roboto,\"helvetica",{"_index":670,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["uma",{"_index":1118,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["unban",{"_index":1696,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["unbanned",{"_index":2042,"title":{},"body":{"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["unbanuser",{"_index":1684,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["unbanuser(userid",{"_index":1694,"title":{},"body":{"injectables/SuspensionService.html":{},"components/UsersManagementComponent.html":{}}}],["undefined",{"_index":1102,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{}}}],["underline",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"components/RouteManagementComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["unit",{"_index":2303,"title":{},"body":{"index.html":{}}}],["universal",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["unsuccessful",{"_index":114,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["until",{"_index":2007,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["update",{"_index":1340,"title":{},"body":{"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/TripService.html":{}}}],["updatemap",{"_index":1032,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["updates",{"_index":1063,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StatisticsComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["updatestops",{"_index":1033,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["updatestops(event",{"_index":1067,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["upper",{"_index":742,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["url",{"_index":44,"title":{},"body":{"classes/Agency.html":{},"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["url(\"../../../assets/img/nav",{"_index":584,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{}}}],["url(\"data:image/svg+xml,%3csvg",{"_index":632,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=bebas+neue&display=swap",{"_index":535,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["urlroute",{"_index":1039,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["urltree",{"_index":359,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":1106,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"index.html":{}}}],["useclass",{"_index":1730,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["used",{"_index":32,"title":{},"body":{"classes/Agency.html":{},"injectables/AgencyService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"classes/StopTime.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["usefactory",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":123,"title":{"classes/User.html":{}},"body":{"injectables/AgencyService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"classes/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["user's",{"_index":860,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["user(user.id",{"_index":2160,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.creationdate",{"_index":2164,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.email",{"_index":2165,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.formateddate",{"_index":2175,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.id",{"_index":2170,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.rating",{"_index":2163,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.username",{"_index":2162,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.userrank",{"_index":2161,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user.userrank.tolowercase",{"_index":2154,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["user/:id",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["userdetailscomponent",{"_index":191,"title":{"components/UserDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["useremail",{"_index":851,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["userforauth",{"_index":434,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["userforauthentication",{"_index":435,"title":{"interfaces/UserForAuthentication.html":{}},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{}}}],["userid",{"_index":1505,"title":{},"body":{"injectables/StatisticsService.html":{},"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["userloggedin",{"_index":852,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["username",{"_index":1929,"title":{},"body":{"classes/User.html":{},"components/UsersManagementComponent.html":{}}}],["userrank",{"_index":1930,"title":{},"body":{"classes/User.html":{},"components/UsersManagementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["userrank[number(userrank",{"_index":1946,"title":{},"body":{"classes/User.html":{}}}],["users",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{}}}],["userservice",{"_index":1969,"title":{"injectables/UserService.html":{}},"body":{"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{}}}],["usersmanagementcomponent",{"_index":192,"title":{"components/UsersManagementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usertobanid",{"_index":2169,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["usevalue",{"_index":1722,"title":{},"body":{"injectables/TranslocoHttpLoader.html":{},"modules/TranslocoRootModule.html":{}}}],["using",{"_index":966,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["usr.foreach((user",{"_index":2158,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["usually",{"_index":915,"title":{},"body":{"classes/Route.html":{},"classes/Trip.html":{}}}],["valid",{"_index":348,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/UserDetailsComponent.html":{}}}],["validate",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["validation",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["validationerrors",{"_index":2011,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["validator",{"_index":1973,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["validatorfn",{"_index":1978,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["validators",{"_index":376,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["validators.email",{"_index":418,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["validators.required",{"_index":417,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["value",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":389,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/UserForAuthentication.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["var",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"classes/Route.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["variable",{"_index":392,"title":{},"body":{"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/StatisticsComponent.html":{},"classes/StopTime.html":{},"interfaces/UserForAuthentication.html":{},"coverage.html":{}}}],["variables",{"_index":1396,"title":{"miscellaneous/variables.html":{}},"body":{"components/StatisticsComponent.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":94,"title":{},"body":{"injectables/AgencyService.html":{},"interfaces/MostUsedTransportResponse.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"components/StopCreateComponent.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"injectables/TripService.html":{},"components/UserDetailsComponent.html":{},"injectables/UserService.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["verify",{"_index":2136,"title":{},"body":{"components/UsersManagementComponent.html":{}}}],["version",{"_index":2286,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1193,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["via",{"_index":1277,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{},"index.html":{}}}],["viewchild",{"_index":1280,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["viewchild(matpaginator",{"_index":1273,"title":{},"body":{"components/RouteManagementComponent.html":{},"components/UsersManagementComponent.html":{}}}],["viewed",{"_index":972,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["viewencapsulation",{"_index":528,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["viewencapsulation.none",{"_index":518,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["viewing",{"_index":385,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LoginComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{}}}],["voice",{"_index":36,"title":{},"body":{"classes/Agency.html":{}}}],["void",{"_index":413,"title":{},"body":{"interfaces/AuthResponse.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserForAuthentication.html":{},"components/UsersManagementComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["waypoints",{"_index":1163,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["waypoints.length",{"_index":1176,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop-1.html":{}}}],["webkit",{"_index":567,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RouteDetailsComponent.html":{}}}],["weight",{"_index":679,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["went",{"_index":120,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["whether",{"_index":1670,"title":{},"body":{"classes/Suspension.html":{},"injectables/SuspensionService.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["white",{"_index":541,"title":{},"body":{"components/LandingPageComponent.html":{},"components/NavMenuComponent.html":{},"components/StatisticsComponent.html":{},"components/UserDetailsComponent.html":{}}}],["whose",{"_index":950,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["width",{"_index":536,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavMenuComponent.html":{},"components/RouteCreateComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteEditComponent.html":{},"components/RouteManagementComponent.html":{},"components/StatisticsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"components/UserDetailsComponent.html":{},"components/UsersManagementComponent.html":{}}}],["width='2250",{"_index":633,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["window.history.back",{"_index":997,"title":{},"body":{"components/RouteCreateComponent.html":{},"components/RouteEditComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}],["word",{"_index":875,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["wrong",{"_index":121,"title":{},"body":{"injectables/AgencyService.html":{},"injectables/AuthService.html":{},"interfaces/MostUsedTransportResponse.html":{},"injectables/RouteService.html":{},"injectables/StatisticsService.html":{},"injectables/StopService.html":{},"injectables/StopTimeService.html":{},"injectables/SuspensionService.html":{},"injectables/TripService.html":{},"injectables/UserService.html":{}}}],["xmlns='http://www.w3.org/2000/svg'%3e%3cg%3e%3cpath",{"_index":636,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["yes",{"_index":901,"title":{},"body":{"classes/Route.html":{},"classes/StopTime.html":{},"classes/Trip.html":{}}}],["z",{"_index":731,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["zone",{"_index":1439,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["zone.js",{"_index":2256,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":831,"title":{},"body":{"interfaces/MostUsedTransportResponse.html":{},"components/StatisticsComponent.html":{},"injectables/StatisticsService.html":{}}}],["zoom",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{},"overview.html":{}}}],["zoomcontrol",{"_index":1088,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/StopCreateComponent.html":{},"components/TripCreateComponent.html":{},"components/TripEditComponent.html":{},"interfaces/formStop.html":{},"interfaces/formStop-1.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Agency.html":{"url":"classes/Agency.html","title":"class - Agency","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agency\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/agency.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a Agency.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agencyId\n                            \n                            \n                                agencyLang\n                            \n                            \n                                agencyName\n                            \n                            \n                                agencyPhone\n                            \n                            \n                                agencyTimezone\n                            \n                            \n                                agencyUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(agencyId: string, agencyName: string, agencyUrl: string, agencyTimezone: string, agencyLang: string, agencyPhone: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/agency.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        agencyId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyTimezone\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyLang\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyPhone\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agencyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:8\n                        \n                    \n\n            \n                \n                    Id of the Agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:24\n                        \n                    \n\n            \n                \n                    Primary language used by this transit agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:12\n                        \n                    \n\n            \n                \n                    Full name of the transit agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:28\n                        \n                    \n\n            \n                \n                    A voice telephone number for the specified agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyTimezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:20\n                        \n                    \n\n            \n                \n                    Timezone where the transit agency is located.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/agency.ts:16\n                        \n                    \n\n            \n                \n                    URL of the transit agency.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Agency {\n  /**\n   * Id of the Agency.\n   */\n  agencyId: string;\n  /**\n   * Full name of the transit agency.\n   */\n  agencyName: string;\n  /**\n   * URL of the transit agency.\n   */\n  agencyUrl: string;\n  /**\n   * Timezone where the transit agency is located.\n   */\n  agencyTimezone: string;\n  /**\n   * Primary language used by this transit agency.\n   */\n  agencyLang: string;\n  /**\n   * A voice telephone number for the specified agency.\n   */\n  agencyPhone: string;\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(agencyId: string, agencyName: string, agencyUrl: string,\n    agencyTimezone: string, agencyLang: string, agencyPhone: string) {\n    this.agencyId = agencyId;\n    this.agencyName = agencyName;\n    this.agencyUrl = agencyUrl;\n    this.agencyTimezone = agencyTimezone;\n    this.agencyLang = agencyLang;\n    this.agencyPhone = agencyPhone;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgencyService.html":{"url":"injectables/AgencyService.html","title":"injectable - AgencyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgencyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/agency.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAgencies\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/agency.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAgencies\n                        \n                    \n                \n            \n            \n                \ngetAgencies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/agency.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/agency.service.ts:30\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Agency } from '../models/agency';\n\n@Injectable({\n  providedIn: 'root'\n})\n  /**\n   * Service that communicates with the server and has various operations about Agencies.\n   */\nexport class AgencyService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient,) { }\n\n  getAgencies(): Observable {\n    return this.http.get('https://traveller-server.azurewebsites.net/api/AgenciesApi')\n      .pipe(catchError(this.handleError))\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isLandingPage\n                            \n                            \n                                isLoginPageOrLandingPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isLandingPage\n                        \n                    \n                \n            \n            \n                \nisLandingPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoginPageOrLandingPage\n                        \n                    \n                \n            \n            \n                \nisLoginPageOrLandingPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor(private router: Router) { }\n\n  isLoginPageOrLandingPage() {\n    return this.router.url === '/login' || this.router.url === \"/\";\n  }\n\n  isLandingPage() {\n    return this.router.url === \"/\";\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n   \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavMenuComponent\n\nNavMenuComponent\n\nAppModule -->\n\nNavMenuComponent->AppModule\n\n\n\n\n\nRouteCreateComponent\n\nRouteCreateComponent\n\nAppModule -->\n\nRouteCreateComponent->AppModule\n\n\n\n\n\nRouteDetailsComponent\n\nRouteDetailsComponent\n\nAppModule -->\n\nRouteDetailsComponent->AppModule\n\n\n\n\n\nRouteEditComponent\n\nRouteEditComponent\n\nAppModule -->\n\nRouteEditComponent->AppModule\n\n\n\n\n\nRouteManagementComponent\n\nRouteManagementComponent\n\nAppModule -->\n\nRouteManagementComponent->AppModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nAppModule -->\n\nStatisticsComponent->AppModule\n\n\n\n\n\nStopCreateComponent\n\nStopCreateComponent\n\nAppModule -->\n\nStopCreateComponent->AppModule\n\n\n\n\n\nTripCreateComponent\n\nTripCreateComponent\n\nAppModule -->\n\nTripCreateComponent->AppModule\n\n\n\n\n\nTripEditComponent\n\nTripEditComponent\n\nAppModule -->\n\nTripEditComponent->AppModule\n\n\n\n\n\nUserDetailsComponent\n\nUserDetailsComponent\n\nAppModule -->\n\nUserDetailsComponent->AppModule\n\n\n\n\n\nUsersManagementComponent\n\nUsersManagementComponent\n\nAppModule -->\n\nUsersManagementComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nTranslocoRootModule\n\nTranslocoRootModule\n\nAppModule -->\n\nTranslocoRootModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavMenuComponent\n                        \n                        \n                            RouteCreateComponent\n                        \n                        \n                            RouteDetailsComponent\n                        \n                        \n                            RouteEditComponent\n                        \n                        \n                            RouteManagementComponent\n                        \n                        \n                            StatisticsComponent\n                        \n                        \n                            StopCreateComponent\n                        \n                        \n                            TripCreateComponent\n                        \n                        \n                            TripEditComponent\n                        \n                        \n                            UserDetailsComponent\n                        \n                        \n                            UsersManagementComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TranslocoRootModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { Component, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { DatePipe } from '@angular/common';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './components/nav-menu/nav-menu.component';\nimport { UserDetailsComponent } from './components/user-details/user-details.component';\nimport { RouteManagementComponent } from './components/route-management/route-management.component';\nimport { StatisticsComponent } from './components/statistics/statistics.component';\nimport { TranslocoRootModule } from './transloco-root.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { UsersManagementComponent } from './components/users-management/users-management.component';\nimport { RouteDetailsComponent } from './components/route-details/route-details.component';\nimport { RouteCreateComponent } from './components/route-create/route-create.component';\nimport { TripCreateComponent } from './components/trip-create/trip-create.component';\nimport { TripEditComponent } from './components/trip-edit/trip-edit.component';\nimport { RouteEditComponent } from './components/route-edit/route-edit.component';\nimport { StopCreateComponent } from './components/stop-create/stop-create.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    UserDetailsComponent,\n    RouteManagementComponent,\n    StatisticsComponent,\n    LoginComponent,\n    UsersManagementComponent,\n    RouteDetailsComponent,\n    RouteCreateComponent,\n    RouteEditComponent,\n    StopCreateComponent,\n    TripCreateComponent,\n    TripEditComponent,\n    LandingPageComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatChipsModule,\n    MatDividerModule,\n    MatIconModule,\n    MatTableModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatSelectModule,\n    GoogleMapsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatGridListModule,\n    RouterModule.forRoot([\n      { path: '', component: LandingPageComponent, pathMatch: 'full' },\n      { path: 'login', component: LoginComponent, pathMatch: 'full' },\n      { path: 'statistics', component: StatisticsComponent, canActivate: [AuthGuard] },\n      { path: 'route-management', component: RouteManagementComponent, canActivate: [AuthGuard] },\n      { path: 'user/:id', component: UserDetailsComponent, canActivate: [AuthGuard] },\n      { path: 'users-management', component: UsersManagementComponent, canActivate: [AuthGuard] },\n      { path: 'route-details/:id', component: RouteDetailsComponent, canActivate: [AuthGuard] },\n      { path: 'route-create', component: RouteCreateComponent, canActivate: [AuthGuard] },\n      { path: 'route-edit/:id', component: RouteEditComponent, canActivate: [AuthGuard] },\n      { path: 'trip-edit/:id', component: TripEditComponent, canActivate: [AuthGuard] },\n      { path: 'trip-create/:id', component: TripCreateComponent, canActivate: [AuthGuard] },\n      { path: 'stop-create', component: StopCreateComponent, canActivate: [AuthGuard] },\n    ]),\n    TranslocoRootModule\n  ],\n  providers: [AuthService, AuthGuard, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\nimport { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\n\n@NgModule({\n    imports: [AppModule, ServerModule, ModuleMapLoaderModule],\n    bootstrap: [AppComponent]\n})\nexport class AppServerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to comunicate with the server to perform the login.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Redirect the current link.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:29\n                \n            \n\n\n            \n                \n                    Function that will validate if the token created is valid if it's true login succeed, it's false redirect to login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Gives information about the current route.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Gives the state of the route after received the token.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Class for the Guard Routes of the dashboard.\n */\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Constructor for the component.\n   * \n   * @param authService Service to comunicate with the server to perform the login.\n   * @param router Redirect the current link.\n   */\n  constructor(private authService: AuthService, private router: Router) { };\n\n  /**\n   * Function that will validate if the token created is valid if it's true login succeed, it's false redirect to login page.\n   * \n   * @param next Gives information about the current route.\n   * @param state Gives the state of the route after received the token.\n   */\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n\n    if (!this.authService.isLoggedIn(localStorage.getItem('token')!.toString())) {\n      this.router.navigate(['/api/AuthApi/LoginDashboard']); // go to login if not authenticated\n      return false;\n    }\n    return true;\n \n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/login/login.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                        \n                                            isAuthSuccessful\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthSuccessful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAuthSuccessful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslocoService } from '@ngneat/transloco';\nimport Snackbar from 'awesome-snackbar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n/**\n* Class for the component of the page of viewing Login Page.\n*/\nexport class LoginComponent implements OnInit {\n  /**\n   * Url to navigate to the statistics page.\n   */\n  private returnUrl!: string;\n  /*\n   * Form to have the values of the inputs.\n   */\n  loginForm!: FormGroup;\n  /*\n   * Variable used to give feedback to the user if the page is loading or not.\n   */\n  isLoading!: boolean;\n  /**\n   * All the available languages of the application.\n   */\n  private availableLangs: string[] | { id: string, label: string }[];\n  /**\n   * Current active language.\n   */\n  private activeLang: string;\n\n  /**\n   * Constructor for the component.\n   * \n   * @param authService Authentication service that comunicates with the server to validate the inputs of the user.\n   * @param router Redirect the current link after the login succeed.\n   * @param route Gives information about the current route.\n   * @param translocoService Service that perform the translation of the text.\n   */\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute, private translocoService: TranslocoService)\n  {\n    this.availableLangs = this.translocoService.getAvailableLangs();\n    this.activeLang = this.translocoService.getActiveLang();\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [Validators.required]),\n    })\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  /**\n   * Function that will be executed when the login button\n   * is pressed which serves to send the data to the authentication\n   * service if they are correct login was done correctly.\n   * \n   * @param loginForm FormGroup to obtain the values of the inputs\n   */\n  loginCredentials(loginForm: FormGroup) {\n    const login = loginForm.value;\n\n    const userForAuth: UserForAuthentication = {\n      email: login.email,\n      password: login.password\n    }\n\n    this.authService.loginUser(userForAuth)\n      .subscribe({\n        next: (res: AuthResponse) => {\n          localStorage.setItem(\"token\", res.token);\n          localStorage.setItem(\"userEmail\", login.email);\n          this.authService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n          this.isLoading = true;\n          this.router.navigate(['/statistics']);\n        },\n        error: (err: HttpErrorResponse) => {\n          this.isLoading = false;\n          new Snackbar(this.translocoService.translate('login.list.' + err.message), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      })\n  }\n\n  /**\n * Changes the active language.\n * @param {string} lang id of language to change to.\n */\n  changeLang(lang: string) {\n    this.translocoService.setActiveLang(lang);\n    this.activeLang = lang;\n  }\n}\n\nexport interface UserForAuthentication {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  isAuthSuccessful: boolean;\n  errorMessage: string;\n  token: string;\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authChanged\n                            \n                            \n                                    Private\n                                authChangeSub\n                            \n                            \n                                    Public\n                                loginUser\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                sendAuthStateChangeNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:78\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:34\n                \n            \n\n\n            \n                \n                    Function that validate if the token created is valid or not\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Used to pass the guard in the page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authChangeSub.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:20\n                        \n                    \n\n            \n                \n                    Variable used to observe the authChengeSub and store the value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authChangeSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n            \n                \n                    Variable that creates a Subject\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:50\n                        \n                    \n\n            \n                \n                    Function used to post the information to comunicate with the server.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    route\n                                            \n                                            \n                                                    body\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:68\n                        \n                    \n\n            \n                \n                    Function used to logout the user and remove the storage token and modify the autenticated value to false\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendAuthStateChangeNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:61\n                        \n                    \n\n            \n                \n                    Function used to modify the value of authChageSub variable.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    isAuthenticated\n                                                    \n                                                            a boolean variable that will be true if the login succeed and false if not or the user logout\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { AuthResponse, UserForAuthentication } from '../components/login/login.component';\nimport { catchError, Observable, throwError, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service that communicates with the server and has operations about Authentication Service.\n*/\nexport class AuthService {\n  /**\n   * Variable that creates a Subject\n   */\n  private authChangeSub = new Subject()\n  /**\n   * Variable used to observe the authChengeSub and store the value.\n   */\n  public authChanged = this.authChangeSub.asObservable();\n\n  /**\n   * Constructor for the component.\n   * \n   * @param http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Function that validate if the token created is valid or not \n   * \n   * @param token Used to pass the guard in the page\n   */\n  isLoggedIn(token: string) {\n    //const token = localStorage.getItem('token'); // get token from local storage\n\n    const payload = atob(token.split('.')[1]); // decode payload of token\n\n    const parsedPayload = JSON.parse(payload); // convert payload into an Object\n\n    return parsedPayload.exp > Date.now() / 1000;\n  }\n\n  /**\n   * Function used to post the information to comunicate with the server.\n   * \n   * @param route \n   * @param body \n   */\n  public loginUser = (body: UserForAuthentication) => {\n    //return this.http.post('api/AuthApi/LoginDashboard', body)\n    return this.http.post('https://traveller-server.azurewebsites.net/api/AuthApi/LoginDashboard', body)\n    .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Function used to modify the value of authChageSub variable.\n   * \n   * @param isAuthenticated a boolean variable that will be true if the login succeed and false if not or the user logout\n   */\n  public sendAuthStateChangeNotification = (isAuthenticated: boolean) => {\n    this.authChangeSub.next(isAuthenticated);\n  }\n\n  /**\n   * Function used to logout the user and remove the storage token and modify the autenticated value to false\n   */\n  public logout = () => {\n    localStorage.removeItem(\"token\");\n    this.sendAuthStateChangeNotification(false);\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was:`, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error(error.error));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing-page/landing-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeLang\n                            \n                            \n                                    Private\n                                availableLangs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing-page/landing-page.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLang\n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/landing-page/landing-page.component.ts:32\n                \n            \n\n\n            \n                \n                    Changes the active language.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of language to change to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/landing-page/landing-page.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/landing-page/landing-page.component.ts:18\n                        \n                    \n\n            \n                \n                    Current active language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        availableLangs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[] | literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/landing-page/landing-page.component.ts:14\n                        \n                    \n\n            \n                \n                    All the available languages of the application.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LandingPageComponent implements OnInit {\n  /**\n * All the available languages of the application.\n */\n  private availableLangs: string[] | { id: string, label: string }[];\n  /**\n   * Current active language.\n   */\n  private activeLang: string;\n\n  constructor(private service: TranslocoService) {\n    this.availableLangs = this.service.getAvailableLangs();\n    this.activeLang = this.service.getActiveLang();\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n * Changes the active language.\n * @param {string} lang id of language to change to.\n */\n  changeLang(lang: string) {\n    this.service.setActiveLang(lang);\n    this.activeLang = lang;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Traveller\n      \n\n      \n        \n          \n          \n        \n        \n           Dashboard \n        \n      \n\n    \n    \n      \n        \n          \n             Traveller \n          \n          \n            {{ t('subtitle') }}\n          \n          \n             Download \n          \n        \n\n        \n          \n            \n            \n            \n            \n            \n              \n                \n              \n              \n                \n              \n              \n                \n              \n            \n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./landing-page.component.css\n                \n                @import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap');\n\n.landing-page-body {\n    width: 100%;\n}\n\n.header {\n  display: flex;\n  background-color: white;\n  padding: 0% 5% 0% 5%;\n  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n  justify-content: space-between;\n}\n\n.logo-section {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.dashboard-section {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.logo-title {\n  text-decoration: none;\n  font-size: 200%;\n  align-items: center;\n  align-self: center;\n  color: #3BE2AB;\n  -webkit-text-stroke: 0.5px #B8F4E0;\n}\n\n.introduction-section {\n  margin-bottom: 3%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.right-header-section {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 20%;\n}\n\n.mat-button {\n  min-width: 30px;\n  min-height: 40px;\n}\n\n#language-selector-landing {\n  display: flex;\n  margin-right: 15%;\n}\n\n\n\n#en-lang-landing {\n  background-image: url(\"../../../assets/img/nav-menu/enLang.png\");\n  background-size: 100% 100%;\n  margin-right: 15%;\n}\n\n#pt-lang-landing {\n  background-image: url(\"../../../assets/img/nav-menu/ptLang.png\");\n  background-size: 100% 100%;\n  margin-right: 15%;\n}\n\n\n@media only screen and (max-width: 600px) {\n  #en-lang-landing {\n    margin-left: 10%;\n  }\n\n   .dashboard-section {\n       display: none;\n   }\n\n  .mat-button {\n    min-width: 15px;\n    min-height: 30px;\n  }\n\n   .header{\n       justify-content: normal;\n    }\n\n  .logo-image {\n    width: 10vw;\n    height: 10vw;\n    margin: 5px;\n  }\n\n  .right-header-section {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 10%;\n  }\n\n  .mat-button {\n    min-width: 5px;\n    min-height: 30px;\n  }\n}\n\n@media only screen and (min-width: 600px) {\n  .logo-image {\n    width: 3vw;\n    height: 3vw;\n    margin: 5px;\n  }\n}\n\nmain {\n  padding: 3% 6% 0% 6%\n}\n\nbody {\n  background: linear-gradient(-90deg, #3BE2AB, #B8F4E0, #B8F4E0, #3BE2AB);\n  background-size: 400% 400%;\n  animation: gradient 10s ease infinite;\n  height: 100vh;\n  overflow: hidden;\n}\n\n@keyframes gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n\n  50% {\n    background-position: 100% 50%;\n  }\n\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n.traveller-title-section {\n  justify-content: center;\n  justify-self: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white; \n  width: 75%;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n}\n\n.traveller-title {\n  font-size: 8em;\n}\n\n.title-container {\n  width: 50%;\n  height: 100%;\n  min-height: 800px;\n}\n\n\n@media only screen and (max-width: 600px) {\n  .traveller-title-section {\n    justify-content: center;\n    justify-self: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: white;\n    width: 100%;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n  }\n\n  .traveller-title {\n    font-size: 4em;\n  }\n\n  .introduction-section {\n    margin-bottom: 3%;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .title-container {\n    width: 100%;\n    height: 100%;\n    min-height: 800px;\n  }\n\n  .app-images {\n      display: none;\n  }\n}\n\n\n.main-image {\n  width: 8%;\n  height: 8%;\n}\n\n.fancy {\n    background-image: url(\"data:image/svg+xml,%3Csvg width='2250' height='900' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg%3E%3Cpath fill='%2300A080' d='M0 0h2255v899H0z'/%3E%3Ccircle cx='366' cy='207' r='366' fill='%2300FDCF'/%3E%3Ccircle cx='1777.5' cy='318.5' r='477.5' fill='%2300FDCF'/%3E%3Ccircle cx='1215' cy='737' r='366' fill='%23008060'/%3E%3C/g%3E%3C/svg%3E%0A\");\n    background-size: 110% auto;\n    background-position: center;\n    color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n}\n\n\n.dashboard-button {\n  background-color: #fff;\n  border: 0 solid #e2e8f0;\n  border-radius: 1.5rem;\n  box-sizing: border-box;\n  color: #0d172a;\n  cursor: pointer;\n  display: inline-block;\n  font-family: \"Basier circle\", \"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";\n  font-size: 1.1rem;\n  font-weight: 600;\n  line-height: 1;\n  padding: 1rem 1.6rem;\n  text-align: center;\n  text-decoration: none #0d172a solid;\n  text-decoration-thickness: auto;\n  transition: all .1s cubic-bezier(.4, 0, .2, 1);\n  box-shadow: 0px 1px 2px rgba(166, 175, 195, 0.25);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n}\n\n  .dashboard-button:hover {\n    background-color: #3BE2AB;\n    color: #fff;\n  }\n\n@media (min-width: 768px) {\n  .dashboard-button {\n    font-size: 1.125rem;\n    padding: 1rem 2rem;\n  }\n}\n\nblockquote {\n  border-left: 5px solid;\n  margin-left: 0;\n  padding: 1rem 0 1rem 2rem;\n  font-size: 2rem;\n  -webkit-background-clip: text;\n}\n\n/* Carousel */\n.app-images {\n    width: 50%;\n    height: 800px;\n}\n\ninput[type=radio] {\n  display: none;\n}\n\n.card {\n  position: absolute;\n  width: 60%;\n  height: 100%;\n  left: 0;\n  right: 0;\n  margin: auto;\n  transition: transform .4s ease;\n  cursor: pointer;\n}\n\n.carousel-container {\n  width: 100%;\n  max-width: 800px;\n  max-height: 600px;\n  height: 100%;\n  transform-style: preserve-3d;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n\n@media only screen and (max-width: 600px) {\n  .carousel-container {\n    display: none;\n  }\n}\n\n.cards {\n  position: relative;\n  width: 65%;\n  height: 100%;\n  margin-bottom: 20px;\n}\n\nimg {\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  object-fit: cover;\n}\n\n#item-1:checked ~ .cards #song-3, #item-2:checked ~ .cards #song-1, #item-3:checked ~ .cards #song-2 {\n  transform: translatex(-40%) scale(.8);\n  opacity: .4;\n  z-index: 0;\n}\n\n#item-1:checked ~ .cards #song-2, #item-2:checked ~ .cards #song-3, #item-3:checked ~ .cards #song-1 {\n  transform: translatex(40%) scale(.8);\n  opacity: .4;\n  z-index: 0;\n}\n\n#item-1:checked ~ .cards #song-1, #item-2:checked ~ .cards #song-2, #item-3:checked ~ .cards #song-3 {\n  transform: translatex(0) scale(1);\n  opacity: 1;\n  z-index: 1;\n  img\n\n{\n  box-shadow: 0px 0px 5px 0px rgba(81, 81, 81, 0.47);\n}\n\n}\n\n.player {\n  background-color: #fff;\n  border-radius: 8px;\n  min-width: 320px;\n  padding: 16px 10px;\n}\n\n.upper-part {\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n  height: 36px;\n  overflow: hidden;\n}\n\n.play-icon {\n  margin-right: 10px;\n}\n\n.song-info {\n  width: calc(100% - 32px);\n  display: block;\n}\n\n  .song-info .title {\n    color: #403d40;\n    font-size: 14px;\n    line-height: 24px;\n  }\n\n.sub-line {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.subtitle, .time {\n  font-size: 12px;\n  line-height: 16px;\n  color: #c6c5c6;\n}\n\n.time {\n  font-size: 12px;\n  line-height: 16px;\n  color: #a5a5a5;\n  font-weight: 500;\n  margin-left: auto;\n}\n\n.progress-bar {\n  height: 3px;\n  width: 100%;\n  background-color: #e9efff;\n  border-radius: 2px;\n  overflow: hidden;\n}\n\n.progress {\n  display: block;\n  position: relative;\n  width: 60%;\n  height: 100%;\n  background-color: #2992dc;\n  border-radius: 6px;\n}\n\n.info-area {\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 30px;\n  transition: transform .4s ease-in;\n}\n\n#item-2:checked ~ .player #test {\n  transform: translateY(0);\n}\n\n#item-2:checked ~ .player #test {\n  transform: translateY(-40px);\n}\n\n#item-3:checked ~ .player #test {\n  transform: translateY(-80px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Traveller                                                                   Dashboard                                                            Traveller                                 {{ t(\\'subtitle\\') }}                                 Download                                                                                                                                                                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeLang\n                            \n                            \n                                    Private\n                                availableLangs\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                loginCredentials\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, route: ActivatedRoute, translocoService: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authentication service that comunicates with the server to validate the inputs of the user.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Redirect the current link after the login succeed.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gives information about the current route.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that perform the translation of the text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLang\n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:108\n                \n            \n\n\n            \n                \n                    Changes the active language.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of language to change to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginCredentials\n                        \n                    \n                \n            \n            \n                \nloginCredentials(loginForm: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:72\n                \n            \n\n\n            \n                \n                    Function that will be executed when the login button\nis pressed which serves to send the data to the authentication\nservice if they are correct login was done correctly.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loginForm\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FormGroup to obtain the values of the inputs\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:38\n                        \n                    \n\n            \n                \n                    Current active language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        availableLangs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[] | literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:34\n                        \n                    \n\n            \n                \n                    All the available languages of the application.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:22\n                        \n                    \n\n            \n                \n                    Url to navigate to the statistics page.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslocoService } from '@ngneat/transloco';\nimport Snackbar from 'awesome-snackbar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n/**\n* Class for the component of the page of viewing Login Page.\n*/\nexport class LoginComponent implements OnInit {\n  /**\n   * Url to navigate to the statistics page.\n   */\n  private returnUrl!: string;\n  /*\n   * Form to have the values of the inputs.\n   */\n  loginForm!: FormGroup;\n  /*\n   * Variable used to give feedback to the user if the page is loading or not.\n   */\n  isLoading!: boolean;\n  /**\n   * All the available languages of the application.\n   */\n  private availableLangs: string[] | { id: string, label: string }[];\n  /**\n   * Current active language.\n   */\n  private activeLang: string;\n\n  /**\n   * Constructor for the component.\n   * \n   * @param authService Authentication service that comunicates with the server to validate the inputs of the user.\n   * @param router Redirect the current link after the login succeed.\n   * @param route Gives information about the current route.\n   * @param translocoService Service that perform the translation of the text.\n   */\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute, private translocoService: TranslocoService)\n  {\n    this.availableLangs = this.translocoService.getAvailableLangs();\n    this.activeLang = this.translocoService.getActiveLang();\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [Validators.required]),\n    })\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  /**\n   * Function that will be executed when the login button\n   * is pressed which serves to send the data to the authentication\n   * service if they are correct login was done correctly.\n   * \n   * @param loginForm FormGroup to obtain the values of the inputs\n   */\n  loginCredentials(loginForm: FormGroup) {\n    const login = loginForm.value;\n\n    const userForAuth: UserForAuthentication = {\n      email: login.email,\n      password: login.password\n    }\n\n    this.authService.loginUser(userForAuth)\n      .subscribe({\n        next: (res: AuthResponse) => {\n          localStorage.setItem(\"token\", res.token);\n          localStorage.setItem(\"userEmail\", login.email);\n          this.authService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n          this.isLoading = true;\n          this.router.navigate(['/statistics']);\n        },\n        error: (err: HttpErrorResponse) => {\n          this.isLoading = false;\n          new Snackbar(this.translocoService.translate('login.list.' + err.message), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      })\n  }\n\n  /**\n * Changes the active language.\n * @param {string} lang id of language to change to.\n */\n  changeLang(lang: string) {\n    this.translocoService.setActiveLang(lang);\n    this.activeLang = lang;\n  }\n}\n\nexport interface UserForAuthentication {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  isAuthSuccessful: boolean;\n  errorMessage: string;\n  token: string;\n}\n\n\n\n\n    \n\n    \n        \n  \n    {{t('login-page-loading')}}\n    \n  \n  \n    \n      \n        \n          {{t('title-card-login')}}\n          \n            help\n          \n        \n        \n\n          \n          \n            {{t('input-email-label')}}\n            \n            {{t('input-email-error-required')}}\n            {{t('input-email-error-validation')}}\n          \n\n          \n          \n            {{t('input-password-label')}}\n            \n            {{t('input-password-error-required')}}\n          \n\n          \n        \n        \n           Login \n        \n      \n      \n        \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                #container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  width: 100%;\n  height: 100%;\n}\n\n.login-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n}\n\nmat-card-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n  height: 25%;\n}\n\n.login-card-title {\n  color: black;\n  font-size: 35px;\n}\n\nmat-card-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  width: 100%;\n  height: 50%;\n  margin-top: 5%;\n  margin-bottom: 10%;\n}\n\n.input-email {\n  margin-top: 2%;\n  padding-bottom: 2%;\n  width: 100%;\n  height: 50%;\n  margin-bottom: 5%;\n}\n\n.input-password {\n  margin-bottom: 2%;\n  width: 100%;\n  height: 50%;\n}\n\n.mat-input-element {\n  caret-color: black;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n  /*change color of label*/\n  color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /*change color of underline*/\n  background-color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /*change color of underline when focused*/\n  background-color: #003F91 !important;\n}\n\nmat-card-footer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  margin-bottom: 5%;\n  width: 100%;\n  height: 25%;\n}\n\n#loginButton {\n  width: 100%;\n  height: 35%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em grey;\n  margin-bottom: 2%;\n  font-size: 20px;\n}\n\n.mat-icon {\n  display: flex;\n  align-self: flex-end;\n  margin-left: 8px;\n  margin-bottom: 11px;\n}\n\n#spinner {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nmat-spinner {\n  display: flex;\n  justify-self: center;\n  align-self: center;\n}\n\n#languageSelection {\n  display: flex;\n  flex-direction: row;\n  width: 10%;\n  margin-top: 10px;\n  justify-content: space-between;\n}\n\n.mat-button {\n  min-width: 45px;\n  min-height: 30px;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n#en-lang {\n  background-image: url(\"../../../assets/img/nav-menu/enLang.png\");\n  background-size: 100% 100%;\n}\n\n#pt-lang {\n  background-image: url(\"../../../assets/img/nav-menu/ptLang.png\");\n  background-size: 100% 100%;\n}\n\n/deep/ .mat-tooltip {\n  font-size: 14px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{t(\\'login-page-loading\\')}}                                    {{t(\\'title-card-login\\')}}                      help                                                          {{t(\\'input-email-label\\')}}                        {{t(\\'input-email-error-required\\')}}            {{t(\\'input-email-error-validation\\')}}                                          {{t(\\'input-password-label\\')}}                        {{t(\\'input-password-error-required\\')}}                                               Login                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MostUsedTransportResponse.html":{"url":"interfaces/MostUsedTransportResponse.html","title":"interface - MostUsedTransportResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MostUsedTransportResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/statistics.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mostUsedTransport\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mostUsedTransport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mostUsedTransport:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Statistics } from '../models/statistics';\n\ninterface MostUsedTransportResponse {\n  mostUsedTransport: { transportType: string, totalCount: number }[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n/**\n* Service that communicates with the server and has various operations about statistics.\n*/\nexport class StatisticsService {\n\n  /**\n   * Constructor for the class.\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n  * getActiveUsers method is used to get the total number of active users from the API\n  */\n\n  getActiveUsers() {\n    //return this.http.get('api/StatisticsApi/GetActiveUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetActiveUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n\n  /**\n   * getTotalNumberOfUsers method is used to get the total number of users from the API\n   */\n\n  getTotalNumberOfUsers() {\n    //return this.http.get('api/StatisticsApi/GetTotalNumberOfUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTotalNumberOfUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getNumberOfNewUsers method is used to get the number of new users from the API\n  */\n\n  getNumberOfNewUsers() {\n    //return this.http.get('api/StatisticsApi/GetTotalOfNewUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTotalOfNewUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getMostActiveZones method is used to get the most active zones from the API\n  */\n\n  getMostActiveZones() {\n    //return this.http.get('api/StatisticsApi/GetMostActiveZones')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetMostActiveZones')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getUserMostUsedTransport method is used to get the most used transport\n  */\n\n  getUserMostUsedTransport(userId: string) {\n    //return this.http.get(`api/StatisticsApi/GetMostUsedTransport/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StatisticsApi/GetMostUsedTransport/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getUserTimeSpent method is used to get the user time spent in transports\n  */\n\n  getUserTimeSpent(userId: string) {\n    //return this.http.get(`api/StatisticsApi/GetTimeSpent/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTimeSpent/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavMenuComponent.html":{"url":"components/NavMenuComponent.html","title":"component - NavMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/nav-menu/nav-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-menu\n            \n\n            \n                styleUrls\n                ./nav-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./nav-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeLang\n                            \n                            \n                                    Private\n                                availableLangs\n                            \n                            \n                                    Public\n                                userEmail\n                            \n                            \n                                    Public\n                                userLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: TranslocoService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/nav-menu/nav-menu.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLang\n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/nav-menu/nav-menu.component.ts:53\n                \n            \n\n\n            \n                \n                    Changes the active language.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of language to change to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/nav-menu/nav-menu.component.ts:45\n                \n            \n\n\n            \n                \n                    Function used to logout the user from the dashboard.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/nav-menu/nav-menu.component.ts:23\n                        \n                    \n\n            \n                \n                    Current active language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        availableLangs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[] | literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/nav-menu/nav-menu.component.ts:19\n                        \n                    \n\n            \n                \n                    All the available languages of the application.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/nav-menu/nav-menu.component.ts:27\n                        \n                    \n\n            \n                \n                    Logged in user's email\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserForAuthentication\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/nav-menu/nav-menu.component.ts:34\n                        \n                    \n\n            \n                \n                    Constructor for the component.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    service\n                                                    \n                                                            TranslocoService object in order to change languages at runtime.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n\n\n\n    \n        import { UserForAuthentication } from '../login/login.component';\nimport { Component } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\n\n/**\n * Class for the component of the NavMenu\n */\nexport class NavMenuComponent {\n  /**\n   * All the available languages of the application.\n   */\n  private availableLangs: string[] | { id: string, label: string }[];\n  /**\n   * Current active language.\n   */\n  private activeLang: string;\n  /**\n   * Logged in user's email\n   * */\n  public userEmail!: string;\n\n\n  /**\n   * Constructor for the component.\n   * @param {TranslocoService} service TranslocoService object in order to change languages at runtime.\n   */\n  public userLoggedIn!: UserForAuthentication;\n\n  constructor(private service: TranslocoService, private authService: AuthService) {\n    this.availableLangs = this.service.getAvailableLangs();\n    this.activeLang = this.service.getActiveLang();\n    this.userEmail = (localStorage.getItem('userEmail') || '{}');\n  }\n\n  /**\n   * Function used to logout the user from the dashboard.\n   */\n  logOut() {\n    this.authService.logout();\n  }\n\n  /**\n   * Changes the active language.\n   * @param {string} lang id of language to change to.\n   */\n  changeLang(lang: string) {\n    this.service.setActiveLang(lang);\n    this.activeLang = lang;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n        {{ t('welcome') }}, {{userEmail}}\n      \n    \n      \n      {{ t('stats-text') }}\n    \n    \n      \n      {{ t('routes-management-text') }}\n    \n    \n      \n      {{ t('users-management-text') }}\n    \n    \n      \n        \n        \n      \n    \n    \n    \n    \n      \n      {{ t('logout-text') }}\n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./nav-menu.component.css\n                \n                a.navbar-brand {\n  white-space: normal;\n  text-align: center;\n  word-break: break-all;\n}\n\nhtml {\n  font-size: 14px;\n}\n@media (min-width: 768px) {\n  html {\n    font-size: 16px;\n  }\n}\n\n.nav-logo-img {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.nav-logo-img p {\n    color: #FAFAF9;\n}\n\n.navbar-nav {\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  height: 100%;\n}\n\nli.nav-item {\n  display: flex;\n  align-items: center;\n}\n\na.nav-link {\n  color: #FAFAF9;\n}\n\n.navbar-nav li img {\n  margin-right: 10px;\n}\n\n#language-selector {\n    display:flex;\n    justify-content: space-evenly;\n    margin-top: 15px;\n}\n\n.mat-button {\n  min-width: 45px;\n  min-height: 30px;\n}\n\n#en-lang {\n  background-image: url(\"../../../assets/img/nav-menu/enLang.png\");\n  background-size: 100% 100%;\n}\n\n#pt-lang {\n  background-image: url(\"../../../assets/img/nav-menu/ptLang.png\");\n  background-size: 100% 100%;\n}\n\n#logout {\n  color: #FAFAF9;\n  font-size: 16px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ t(\\'welcome\\') }}, {{userEmail}}                      {{ t(\\'stats-text\\') }}                    {{ t(\\'routes-management-text\\') }}                    {{ t(\\'users-management-text\\') }}                                                                {{ t(\\'logout-text\\') }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Route.html":{"url":"classes/Route.html","title":"class - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a Route.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agency\n                            \n                            \n                                agencyId\n                            \n                            \n                                routeDuration\n                            \n                            \n                                routeId\n                            \n                            \n                                routeLongName\n                            \n                            \n                                routeShortName\n                            \n                            \n                                routeTransportType\n                            \n                            \n                                stops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateRouteDuration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routeId: string, agencyId: string, routeShortName: string, routeLongName: string, routeTransportType: number, agency?: Agency, stops?: StopTime[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/route.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routeId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agencyId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeShortName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeLongName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeTransportType\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agency\n                                                  \n                                                        \n                                                                        Agency\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        stops\n                                                  \n                                                        \n                                                                    StopTime[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Agency\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:19\n                        \n                    \n\n            \n                \n                    The agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agencyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:15\n                        \n                    \n\n            \n                \n                    Id of the agency.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeDuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:35\n                        \n                    \n\n            \n                \n                    The amount of time the route takes from origin to destination.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:11\n                        \n                    \n\n            \n                \n                    Id of the route.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeLongName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:27\n                        \n                    \n\n            \n                \n                    The long name of the route, saying the origin and destination.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeShortName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:23\n                        \n                    \n\n            \n                \n                    The short name of the route, usually the route number.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeTransportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:31\n                        \n                    \n\n            \n                \n                    The type of the transport of the route\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stops\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StopTime[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/route.ts:39\n                        \n                    \n\n            \n                \n                    The stops belonging to the route\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateRouteDuration\n                        \n                    \n                \n            \n            \n                \ncalculateRouteDuration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/route.ts:61\n                \n            \n\n\n            \n                \n                    Method to calculate the duration of the route based on the stops it has.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Agency } from \"./agency\";\nimport { StopTime } from \"./stop-time\";\n\n/**\n * Class that represents a Route.\n */\nexport class Route {\n  /**\n   * Id of the route.\n   */\n  routeId: string;\n  /**\n   * Id of the agency.\n   */\n  agencyId: string;\n  /**\n   * The agency.\n   */\n  agency!: Agency;\n  /**\n   * The short name of the route, usually the route number.\n   */\n  routeShortName: string;\n  /**\n   * The long name of the route, saying the origin and destination.\n   */\n  routeLongName: string;\n  /**\n   * The type of the transport of the route\n   */\n  routeTransportType: number;\n  /**\n   * The amount of time the route takes from origin to destination.\n   */\n  routeDuration: number;\n  /**\n   * The stops belonging to the route\n   */\n  stops!: StopTime[];\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(routeId: string, agencyId: string, routeShortName: string,\n    routeLongName: string, routeTransportType: number, agency?: Agency, stops?: StopTime[]) {\n    this.routeId = routeId;\n    this.agencyId = agencyId;\n    this.routeShortName = routeShortName;\n    this.routeLongName = routeLongName;\n    this.routeTransportType = routeTransportType;\n\n    if (agency) this.agency = agency;\n    if (stops) this.stops = stops;\n\n    this.routeDuration = this.calculateRouteDuration();\n  }\n\n  /**\n   * Method to calculate the duration of the route based on the stops it has.\n   */\n  calculateRouteDuration() {\n    if (this.stops && this.stops.length != 0) {\n      var finishTime = new Date(this.stops[this.stops.length - 1].arrivalTime).getTime();\n      var startTime = new Date(this.stops[0].arrivalTime).getTime();\n      return Math.floor((finishTime - startTime) / 60000);\n    }\n    return 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteCreateComponent.html":{"url":"components/RouteCreateComponent.html","title":"component - RouteCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RouteCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/route-create/route-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-create\n            \n\n            \n                styleUrls\n                ./route-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./route-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                agencies\n                            \n                            \n                                createRouteForm\n                            \n                            \n                                transports\n                            \n                            \n                                TransportType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(routeService: RouteService, agencyService: AgencyService, formBuilder: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/route-create/route-create.component.ts:42\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the route whose Id matches the one in the URL and passes its info to the form.\nAlso gets all the existent stops.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        routeService\n                                                  \n                                                        \n                                                                        RouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Routes.\n\n                                                        \n                                                \n                                                \n                                                        agencyService\n                                                  \n                                                        \n                                                                        AgencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Agencies.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Builds form data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-create/route-create.component.ts:74\n                \n            \n\n\n            \n                \n                    Cancels the creation of a new stop. Redirects back to the previous page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-create/route-create.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-create/route-create.component.ts:64\n                \n            \n\n\n            \n                \n                    Creates a route object and sends it to the database using the routeService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        agencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-create/route-create.component.ts:32\n                        \n                    \n\n            \n                \n                    List of all the existent agencies.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRouteForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    number: ['', Validators.required],\n    name: ['', Validators.required],\n    transportType: this.formBuilder.control(null, Validators.required),\n    agency: this.formBuilder.control(null, Validators.required),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-create/route-create.component.ts:37\n                        \n                    \n\n            \n                \n                    Form data to be viewed in the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(TransportType).map(v => Number(v)).filter(v => Number.isFinite(v))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-create/route-create.component.ts:28\n                        \n                    \n\n            \n                \n                    All the values of the TransportType enum.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TransportType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransportType\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-create/route-create.component.ts:24\n                        \n                    \n\n            \n                \n                    TransportType for reverse mapping in the html.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouteService } from '../../services/route.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route } from '../../models/route';\nimport { TransportType } from '../../enums/transport-type';\nimport { map } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Agency } from '../../models/agency';\nimport { AgencyService } from '../../services/agency.service';\nimport { Guid } from 'guid-typescript';\n\n@Component({\n  selector: 'app-route-create',\n  templateUrl: './route-create.component.html',\n  styleUrls: ['./route-create.component.css']\n})\n/**\n * Class for the component of the page of Route Editing\n */\nexport class RouteCreateComponent implements OnInit {\n  /**\n   * TransportType for reverse mapping in the html.\n   */\n  TransportType = TransportType;\n  /**\n   * All the values of the TransportType enum.\n   */\n  transports: number[] = Object.keys(TransportType).map(v => Number(v)).filter(v => Number.isFinite(v));\n  /**\n   * List of all the existent agencies.\n   */\n  public agencies!: Array;\n\n  /**\n   * Form data to be viewed in the page\n   */\n  createRouteForm = this.formBuilder.group({\n    number: ['', Validators.required],\n    name: ['', Validators.required],\n    transportType: this.formBuilder.control(null, Validators.required),\n    agency: this.formBuilder.control(null, Validators.required),\n  });\n\n  /**\n   * Constructor for the component.\n   * Gets the route whose Id matches the one in the URL and passes its info to the form.\n   * Also gets all the existent stops.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {AgencyService} agencyService Service that communicates with the server and has various operations about Agencies.\n   * @param {FormBuilder} formBuilder Builds form data.\n   * @param {Router} router Router.\n   */\n  constructor(private routeService: RouteService, private agencyService: AgencyService,\n    private formBuilder: FormBuilder, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.agencyService.getAgencies().subscribe((agencies) => { this.agencies = agencies; });\n  }\n\n  /**\n   * Creates a route object and sends it to the database using the routeService\n   */\n  onSubmit(): void {\n    let route: Route = new Route(Guid.create().toString(), this.createRouteForm.controls.agency.value!,\n      this.createRouteForm.controls.number.value!, this.createRouteForm.controls.name.value!,\n      Number(this.createRouteForm.controls.transportType.value!));\n    this.routeService.addRoute(route).subscribe(() => { this.router.navigate(['/', 'route-management']); });\n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n    \n\n    \n        \n  {{ t('title-create') }}\n\n  \n\n  \n    \n      \n        {{ t('label-number') }}\n        \n        {{ t('error-number') }}\n      \n      \n        {{ t('label-name') }}\n        \n        {{ t('error-name') }}\n      \n      \n        {{ t('label-type') }}\n        \n          {{ TransportType[transport] }}\n        \n      \n      \n        {{ t('label-agency') }}\n        \n          {{ agency.agencyName }}\n        \n      \n      \n        {{ t('create-button') }}\n        {{ t('cancel') }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./route-create.component.css\n                \n                #route-data {\n  display: flex;\n}\n\n#form-fields {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  margin-right: 50px;\n}\n\nform{\n    display: flex;\n    justify-content: center;\n}\n\n#last-form{\n    padding: 0 0 15px 0;\n}\n\nmat-divider {\n  margin: 0 10px 20px 0;\n}\n\n\n.button {\n  width: 140px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n#form-buttons {\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title-create\\') }}                      {{ t(\\'label-number\\') }}                {{ t(\\'error-number\\') }}                    {{ t(\\'label-name\\') }}                {{ t(\\'error-name\\') }}                    {{ t(\\'label-type\\') }}                  {{ TransportType[transport] }}                            {{ t(\\'label-agency\\') }}                  {{ agency.agencyName }}                            {{ t(\\'create-button\\') }}        {{ t(\\'cancel\\') }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouteCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteDetailsComponent.html":{"url":"components/RouteDetailsComponent.html","title":"component - RouteDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RouteDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/route-details/route-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-details\n            \n\n            \n                styleUrls\n                ./route-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./route-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                directionsOptions\n                            \n                            \n                                directionsResults$\n                            \n                            \n                                mapOptions\n                            \n                            \n                                markerOptions\n                            \n                            \n                                markers\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                selectedTrip\n                            \n                            \n                                    Public\n                                tripsStopsMap\n                            \n                            \n                                    Public\n                                tripStops\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addMarkers\n                            \n                            \n                                    Private\n                                createWaypoints\n                            \n                            \n                                getTimeOfStopTimeList\n                            \n                            \n                                    Private\n                                linkMarkers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateMap\n                            \n                            \n                                updateStops\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(urlRoute: ActivatedRoute, routeService: RouteService, tripService: TripService, stopTimeService: StopTimeService, datePipe: DatePipe, mapDirectionsService: MapDirectionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/route-details/route-details.component.ts:86\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        urlRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gives information about the current route.\n\n                                                        \n                                                \n                                                \n                                                        routeService\n                                                  \n                                                        \n                                                                        RouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Routes.\n\n                                                        \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Trips.\n\n                                                        \n                                                \n                                                \n                                                        stopTimeService\n                                                  \n                                                        \n                                                                        StopTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about StopTimes.\n\n                                                        \n                                                \n                                                \n                                                        datePipe\n                                                  \n                                                        \n                                                                        DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Pipe to format dates.\n\n                                                        \n                                                \n                                                \n                                                        mapDirectionsService\n                                                  \n                                                        \n                                                                    MapDirectionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Google service of the Directions API.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:144\n                \n            \n\n\n            \n                \n                    Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createWaypoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWaypoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     google.maps.DirectionsWaypoint[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTimeOfStopTimeList\n                        \n                    \n                \n            \n            \n                \ngetTimeOfStopTimeList(stopTimes: StopTime[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stopTimes\n                                    \n                                            StopTime[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        linkMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    linkMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:159\n                \n            \n\n\n            \n                \n                    Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMap\n                        \n                    \n                \n            \n            \n                \nupdateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:136\n                \n            \n\n\n            \n                \n                    Updates the map in the page by adding/removing markers and linking them together in one route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStops\n                        \n                    \n                \n            \n            \n                \nupdateStops(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-details/route-details.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:54\n                        \n                    \n\n            \n                \n                    Coordinates for the map to be centered on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.DirectionsRendererOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:38\n                        \n                    \n\n            \n                \n                    Options to be used by the Directions-Renderer field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:62\n                        \n                    \n\n            \n                \n                    Holds the result from the call of the Directions API made from the list of markers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MapOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:27\n                        \n                    \n\n            \n                \n                    Options to be used by the Google-Map field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MarkerOptions\n\n                    \n                \n                \n                    \n                        Default value : { draggable: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:45\n                        \n                    \n\n            \n                \n                    Options to be used by the Map-Marker field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:58\n                        \n                    \n\n            \n                \n                    List of markers that represents the stops of the route to edit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:74\n                        \n                    \n\n            \n                \n                    Route whose details are viewed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedTrip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:78\n                        \n                    \n\n            \n                \n                    The trip the user has currently selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tripsStopsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:86\n                        \n                    \n\n            \n                \n                    A map with the all the trips of the route, with a list of their stop times.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tripStops\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StopTime[] | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:82\n                        \n                    \n\n            \n                \n                    The stops belonging to the current selected trip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-details/route-details.component.ts:50\n                        \n                    \n\n            \n                \n                    Zoom level for the map to use at the start.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StopTime } from '../../models/stop-time';\nimport { Route } from '../../models/route';\nimport { RouteService } from '../../services/route.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport { Trip } from '../../models/trip';\nimport { TripService } from '../../services/trip.service';\nimport { DatePipe } from '@angular/common';\nimport { map, Observable } from 'rxjs';\nimport { MapDirectionsService } from '@angular/google-maps';\n\n@Component({\n  selector: 'app-route-details',\n  templateUrl: './route-details.component.html',\n  styleUrls: ['./route-details.component.css']\n})\n\n\n/**\n * Class for the component of the page of Route Details\n */\nexport class RouteDetailsComponent implements OnInit {\n  /**\n * Options to be used by the Google-Map field.\n */\n  mapOptions: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  };\n  /**\n   * Options to be used by the Directions-Renderer field.\n   */\n  directionsOptions: google.maps.DirectionsRendererOptions = {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field.\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n\n  /**\n   * Zoom level for the map to use at the start.\n   */\n  zoom = 15;\n  /**\n   * Coordinates for the map to be centered on.\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * List of markers that represents the stops of the route to edit.\n   */\n  markers: Array = new Array();\n  /**\n   * Holds the result from the call of the Directions API made from the list of markers.\n   */\n  directionsResults$!: Observable;\n\n  /**\n   * @ignore\n   */\n  helpMessage = `Informação detalhada de uma rota\n  Lista de paragens\n  Horário`;\n\n  /**\n   * Route whose details are viewed.\n   */\n  public route!: Route;\n  /**\n   * The trip the user has currently selected.\n   */\n  public selectedTrip!: Trip;\n  /**\n   * The stops belonging to the current selected trip.\n   */\n  public tripStops: StopTime[] | undefined;\n  /**\n   * A map with the all the trips of the route, with a list of their stop times.\n   */\n  public tripsStopsMap: Map = new Map();\n\n  /**\n   * Constructor for the component.\n   * @param {ActivatedRoute} urlRoute Gives information about the current route.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {TripService} tripService Service that communicates with the server and has various operations about Trips.\n   * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n   * @param {DatePipe} datePipe Pipe to format dates.\n   * @param {MapDirectionsService} mapDirectionsService Google service of the Directions API.\n   */\n  constructor(private urlRoute: ActivatedRoute, private routeService: RouteService,\n    private tripService: TripService, private stopTimeService: StopTimeService,\n    private datePipe: DatePipe, private mapDirectionsService: MapDirectionsService) { }\n\n  ngOnInit(): void {\n    const id = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.routeService.getRoute(id)\n      .subscribe((route) => {\n        this.stopTimeService.getStopsOfRoute(route.routeId).subscribe((stops) => {\n          this.route = new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, stops);\n        }, (error) => {\n          this.route = new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, []);\n        }, () => {\n          this.tripService.getTripsOfRoute(this.route.routeId).subscribe((trips) => {\n            trips.forEach((trip) => {\n              this.stopTimeService.getStopsOfTrip(trip.tripId).subscribe((stops) => {\n                this.tripsStopsMap.set(trip, stops);\n              });\n            });\n          });\n        });\n      });\n  }\n\n  updateStops(event: any) {\n    this.selectedTrip = event.value;\n    this.tripStops = this.tripsStopsMap.get(event.value);\n    this.updateMap();\n  }\n\n  getTimeOfStopTimeList(stopTimes: StopTime[]) {\n    return this.datePipe.transform(stopTimes[0].arrivalTime, 'HH:mm') + \" | \" + this.datePipe.transform(stopTimes[stopTimes.length - 1].arrivalTime, 'HH:mm');\n  }\n\n  /**\n   * Updates the map in the page by adding/removing markers and linking them together in one route.\n   */\n  updateMap() {\n    this.addMarkers();\n    this.linkMarkers();\n  }\n\n  /**\n   * Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n   */\n  private addMarkers() {\n    this.markers.splice(0);\n\n    this.tripStops!.forEach(stopTime => {\n      this.markers.push(new google.maps.LatLng(stopTime.stop.stopLat, stopTime.stop.stopLon));\n    });\n    this.center = {\n      lat: this.markers[Math.floor(this.markers.length / 2)].lat(),\n      lng: this.markers[Math.floor(this.markers.length / 2)].lng()\n    }\n  }\n\n  /**\n   * Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n   */\n  private linkMarkers() {\n    const request: google.maps.DirectionsRequest = {\n      origin: this.markers[0],\n      waypoints: this.createWaypoints(),\n      destination: this.markers[this.markers.length - 1],\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  private createWaypoints(): google.maps.DirectionsWaypoint[] {\n    var waypoints: google.maps.DirectionsWaypoint[] = [];\n    const MAX_WAYPOINTS: number = 25\n    var addWaypoint: boolean = true;\n    this.tripStops?.slice(1, this.tripStops.length - 1).forEach((stopTime) => {\n      if (waypoints.length \n    \n\n    \n        \n  {{ t('loading') }}\n  \n    \n      \n        {{ route.routeShortName }} - {{ route.routeLongName }}\n        {{ route.routeLongName }}\n        {{ t('edit') }}\n      \n      \n        info\n      \n    \n\n    \n\n    \n      \n        {{ t('trip') }}\n        \n          {{ entry.key.tripHeadsign }} - {{ getTimeOfStopTimeList(entry.value)}}\n        \n      \n      \n        {{ t('create-trip') }}\n        \n          {{ t('edit-trip') }}\n\n          {{ t('route-details') }}-->\n        \n      \n    \n\n    \n\n    \n      \n        \n          \n            \n              \n                {{ t('route-stop') }}\n                {{ t('route-departure') }}\n              \n            \n            \n              \n                {{ stop.stop.stopName }} - {{ stop.stop.stopLat }}, {{ stop.stop.stopLon }}\n                {{ stop.arrivalTime | date: 'HH:mm'}}\n              \n            \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n          {{t('no-trips')}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./route-details.component.css\n                \n                #route-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#route-label {\n  overflow: hidden;\n  width: 80%;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n}\n\n#route-name {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\n#trip{\n    display: flex;\n    align-items: center;\n\n}\n\n.button {\n  width: 140px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n.title {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.info-icon {\n  height: 20px;\n  cursor: pointer;\n}\n\n#trip-selector {\n  width: 100%;\n  margin-top: 15px;\n}\n\n#trip-buttons{\n    display: flex;\n    gap: 10px;\n    padding: 0 0 0 15px;\n}\n\n#trip-details {\n  padding: 10px 0 0 0;\n  display: flex;\n  gap: 2%;\n}\n\n#trip-stops {\n  width: 63%;\n  max-height: 500px;\n  overflow: auto;\n}\n\ngoogle-map {\n  width: 35%;\n}\n\n#no-trips-label{\n    display: flex;\n    justify-content: center;\n    padding: 50px 0 0 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'loading\\') }}                    {{ route.routeShortName }} - {{ route.routeLongName }}        {{ route.routeLongName }}        {{ t(\\'edit\\') }}                    info                                {{ t(\\'trip\\') }}                  {{ entry.key.tripHeadsign }} - {{ getTimeOfStopTimeList(entry.value)}}                            {{ t(\\'create-trip\\') }}                  {{ t(\\'edit-trip\\') }}          {{ t(\\'route-details\\') }}-->                                                                                            {{ t(\\'route-stop\\') }}                {{ t(\\'route-departure\\') }}                                                                    {{ stop.stop.stopName }} - {{ stop.stop.stopLat }}, {{ stop.stop.stopLon }}                {{ stop.arrivalTime | date: \\'HH:mm\\'}}                                                                                                                        {{t(\\'no-trips\\')}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouteDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteEditComponent.html":{"url":"components/RouteEditComponent.html","title":"component - RouteEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RouteEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/route-edit/route-edit.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-edit\n            \n\n            \n                styleUrls\n                ./route-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./route-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                agencies\n                            \n                            \n                                editRouteForm\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                transports\n                            \n                            \n                                TransportType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(urlRoute: ActivatedRoute, routeService: RouteService, formBuilder: FormBuilder, router: Router, agencyService: AgencyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/route-edit/route-edit.component.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the route whose Id matches the one in the URL and passes its info to the form.\nAlso gets all the existent stops.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        urlRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        routeService\n                                                  \n                                                        \n                                                                        RouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Routes.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Builds form data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router.\n\n                                                        \n                                                \n                                                \n                                                        agencyService\n                                                  \n                                                        \n                                                                        AgencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Agencies.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-edit/route-edit.component.ts:94\n                \n            \n\n\n            \n                \n                    Cancels the creation of a new stop. Redirects back to the previous page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-edit/route-edit.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-edit/route-edit.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        agencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-edit/route-edit.component.ts:35\n                        \n                    \n\n            \n                \n                    List of all the existent agencies.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editRouteForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    number: ['', Validators.required],\n    name: ['', Validators.required],\n    transportType: this.formBuilder.control(null, Validators.required),\n    agency: this.formBuilder.control(null, Validators.required),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-edit/route-edit.component.ts:40\n                        \n                    \n\n            \n                \n                    Form data to be viewed in the page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-edit/route-edit.component.ts:50\n                        \n                    \n\n            \n                \n                    Route whose details are viewed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(TransportType).map(v => Number(v)).filter(v => Number.isFinite(v))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-edit/route-edit.component.ts:31\n                        \n                    \n\n            \n                \n                    All the values of the TransportType enum.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TransportType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransportType\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-edit/route-edit.component.ts:27\n                        \n                    \n\n            \n                \n                    TransportType for reverse mapping in the html.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { RouteService } from '../../services/route.service';\nimport { ActivatedRoute, convertToParamMap } from '@angular/router';\nimport { TransportType } from '../../enums/transport-type';\nimport { StopService } from '../../services/stop.service';\nimport { MapDirectionsService } from '@angular/google-maps';\nimport { Router } from '@angular/router';\nimport { Agency } from '../../models/agency';\nimport { AgencyService } from '../../services/agency.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TripService } from '../../services/trip.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport { Route } from '../../models/route';\n\n@Component({\n  selector: 'app-route-edit',\n  templateUrl: './route-edit.component.html',\n  styleUrls: ['./route-edit.component.css']\n})\n/**\n * Class for the component of the page of Route Editing.\n */\nexport class RouteEditComponent implements OnInit {\n  /**\n    * TransportType for reverse mapping in the html.\n    */\n  TransportType = TransportType;\n  /**\n   * All the values of the TransportType enum.\n   */\n  transports: number[] = Object.keys(TransportType).map(v => Number(v)).filter(v => Number.isFinite(v));\n  /**\n   * List of all the existent agencies.\n   */\n  public agencies!: Array;\n\n  /**\n   * Form data to be viewed in the page.\n   */\n  editRouteForm = this.formBuilder.group({\n    number: ['', Validators.required],\n    name: ['', Validators.required],\n    transportType: this.formBuilder.control(null, Validators.required),\n    agency: this.formBuilder.control(null, Validators.required),\n  });\n\n  /**\n * Route whose details are viewed.\n */\n  public route!: Route;\n\n\n  /**\n   * Constructor for the component.\n   * Gets the route whose Id matches the one in the URL and passes its info to the form.\n   * Also gets all the existent stops.\n   * @param {ActivatedRoute} actRoute Gives information about the current route.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {FormBuilder} formBuilder Builds form data.\n   * @param {Router} router Router.\n   * @param {AgencyService} agencyService Service that communicates with the server and has various operations about Agencies.\n   * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n   */\n  constructor(private urlRoute: ActivatedRoute, private routeService: RouteService, private formBuilder: FormBuilder, private router: Router, private agencyService: AgencyService) { }\n\n  ngOnInit(): void {\n    const id = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.routeService.getRoute(id)\n      .subscribe((route) => {\n        this.route = new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName, route.routeTransportType, route.agency);\n\n          this.editRouteForm.controls.number.patchValue(this.route.routeShortName);\n          this.editRouteForm.controls.name.patchValue(this.route.routeLongName);\n          this.editRouteForm.controls.transportType.patchValue(this.route.routeTransportType);\n          this.editRouteForm.controls.agency.patchValue(this.route.agencyId);\n\n      });\n    this.agencyService.getAgencies().subscribe((agencies) => { this.agencies = agencies; });\n  }\n\n  ///**\n  // * Creates a route object and sends it to the database using the routeService.\n  // */\n  onSubmit(): void {\n    let route: Route = new Route(this.route.routeId, this.editRouteForm.controls.agency.value!, this.editRouteForm.controls.number.value!, this.editRouteForm.controls.name.value!,\n      this.editRouteForm.controls.transportType.value!);\n    this.routeService.editRoute(route).subscribe();\n    this.router.navigate(['/', 'route-details', this.route.routeId]);\n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n    \n\n    \n        \n  {{ t('title-edit') }}\n\n  \n\n  \n    \n      \n        {{ t('label-number') }}\n        \n        {{ t('error-number') }}\n      \n      \n        {{ t('label-name') }}\n        \n        {{ t('error-name') }}\n      \n      \n        {{ t('label-type') }}\n        \n          {{ TransportType[transport] }}\n        \n      \n      \n        {{ t('label-agency') }}\n        \n          {{ agency.agencyName }}\n        \n      \n      \n        {{ t('update-button') }}\n        {{ t('cancel') }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./route-edit.component.css\n                \n                #route-data {\n  display: flex;\n}\n\n#form-fields {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  margin-right: 50px;\n}\n\nform {\n  display: flex;\n  justify-content: center;\n}\n\n#last-form {\n  padding: 0 0 15px 0;\n}\n\nmat-divider {\n  margin: 0 10px 20px 0;\n}\n\n\n.button {\n  width: 140px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n#form-buttons {\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title-edit\\') }}                      {{ t(\\'label-number\\') }}                {{ t(\\'error-number\\') }}                    {{ t(\\'label-name\\') }}                {{ t(\\'error-name\\') }}                    {{ t(\\'label-type\\') }}                  {{ TransportType[transport] }}                            {{ t(\\'label-agency\\') }}                  {{ agency.agencyName }}                            {{ t(\\'update-button\\') }}        {{ t(\\'cancel\\') }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouteEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteManagementComponent.html":{"url":"components/RouteManagementComponent.html","title":"component - RouteManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RouteManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/route-management/route-management.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-route-management\n            \n\n            \n                styleUrls\n                ./route-management.component.css\n            \n\n\n\n            \n                templateUrl\n                ./route-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                    Public\n                                routes\n                            \n                            \n                                selection\n                            \n                            \n                                TransportType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                deleteRoutes\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleAllRows\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(routeService: RouteService, stopTimeService: StopTimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/route-management/route-management.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the routes in the system and add them to the \"routes\" attribute.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        routeService\n                                                  \n                                                        \n                                                                        RouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Routes.\n\n                                                        \n                                                \n                                                \n                                                        stopTimeService\n                                                  \n                                                        \n                                                                        StopTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about StopTimes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-management/route-management.component.ts:111\n                \n            \n\n\n            \n                \n                    Aplies a filter to the list of existing routes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parameter to filter the list for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRoutes\n                        \n                    \n                \n            \n            \n                \ndeleteRoutes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-management/route-management.component.ts:76\n                \n            \n\n\n            \n                \n                    Deletes all the checked routes.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-management/route-management.component.ts:90\n                \n            \n\n\n            \n                \n                     Checks if the number of selected elements matches the total number of rows.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-management/route-management.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAllRows\n                        \n                    \n                \n            \n            \n                \ntoggleAllRows()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/route-management/route-management.component.ts:99\n                \n            \n\n\n            \n                \n                     Selects all rows if they are not all selected; otherwise clear selection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:33\n                        \n                    \n\n            \n                \n                    The data source used in the route management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['select', 'number', 'name', 'type', 'agency', 'duration', 'details']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:29\n                        \n                    \n\n            \n                \n                    The columns to be displayed in the route management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:25\n                        \n                    \n\n            \n                \n                    The paginator used in the route management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:45\n                        \n                    \n\n            \n                \n                    All the existent routes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:37\n                        \n                    \n\n            \n                \n                    Holds the routes selected via checkbox.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TransportType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TransportType\n                    \n                \n                    \n                        \n                                Defined in src/app/components/route-management/route-management.component.ts:41\n                        \n                    \n\n            \n                \n                    The enum for reverse mapping in the html.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Route } from '../../models/route';\nimport { RouteService } from '../../services/route.service';\nimport { TransportType } from '../../enums/transport-type'\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Agency } from '../../models/agency';\nimport { StopTime } from '../../models/stop-time';\nimport { TripService } from '../../services/trip.service';\nimport { StopTimeService } from '../../services/stop-time.service';\n\n@Component({\n  selector: 'app-route-management',\n  templateUrl: './route-management.component.html',\n  styleUrls: ['./route-management.component.css']\n})\n/**\n * Class for the component of the page of Route Management\n */\nexport class RouteManagementComponent implements OnInit {\n  /**\n   * The paginator used in the route management table.\n   */\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  /**\n   * The columns to be displayed in the route management table.\n   */\n  displayedColumns: string[] = ['select', 'number', 'name', 'type', 'agency', 'duration', 'details'];\n  /**\n   * The data source used in the route management table.\n   */\n  dataSource!: MatTableDataSource\n  /**\n   * Holds the routes selected via checkbox.\n   */\n  selection = new SelectionModel(true, []);\n  /**\n   * The enum for reverse mapping in the html.\n   */\n  TransportType = TransportType;\n  /**\n   * All the existent routes.\n   */\n  public routes: Route[] = [];\n\n  /**\n   * Constructor for the component.\n   * Gets the routes in the system and add them to the \"routes\" attribute.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n   */\n  constructor(private routeService: RouteService, private stopTimeService: StopTimeService) { }\n\n  ngOnInit(): void {\n    this.routeService.getRoutes().subscribe((rts) => {\n      rts.forEach((route) => {\n        this.stopTimeService.getStopsOfRoute(route.routeId).subscribe((stops) => {\n          this.routes.push(new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, stops));\n          this.dataSource = new MatTableDataSource(this.routes);\n          this.dataSource.paginator = this.paginator;\n        }, (error) => {\n          this.routes.push(new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, []));\n          this.dataSource = new MatTableDataSource(this.routes);\n          this.dataSource.paginator = this.paginator;\n        });\n      });\n    });\n  }\n  \n  /**\n   * Deletes all the checked routes.\n   */\n  deleteRoutes() {\n    this.selection.selected.forEach((route) => {\n      var routeToDeleteId = route.routeId;\n      this.routeService.deleteRoute(routeToDeleteId).subscribe(result => {\n        const index = this.routes.findIndex((route) => route.routeId == routeToDeleteId);\n        this.routes.splice(index, 1);\n        this.dataSource.data = this.routes;\n      });\n    });\n  }\n\n  /**\n   *  Checks if the number of selected elements matches the total number of rows.\n   */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /**\n   *  Selects all rows if they are not all selected; otherwise clear selection.\n   */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /**\n   * Aplies a filter to the list of existing routes.\n   * @param {Event} event The parameter to filter the list for.\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n\n    \n\n    \n        \n  {{ t('title') }}\n\n  \n    \n      \n      {{ t('create') }}\n    \n    \n      \n      {{ t('delete') }}\n    \n  \n  \n    {{t('filter')}}\n    \n  \n\n  \n    \n    \n      \n        \n        \n      \n      \n        \n        \n      \n    \n\n    \n    \n       {{ t('route-number') }} \n       {{ route.routeShortName }} \n    \n\n    \n    \n       {{ t('route-name') }} \n       {{ route.routeLongName }} \n    \n\n    \n    \n       {{ t('route-transport') }} \n       {{ TransportType[route.routeTransportType] }} \n    \n\n    \n    \n       {{ t('route-company') }} \n       {{ route.agency.agencyName }} \n    \n    \n    \n       {{ t('route-duration') }} \n       {{ route.routeDuration }} min\n    \n\n    \n    \n      \n      {{ t('route-details') }}\n    \n\n    \n    \n\n    \n    \n      No data matching the filter \"{{input.value}}\"\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./route-management.component.css\n                \n                #management-buttons {\n    display:flex;\n    gap: 20px;\n}\n\n.button-image {\n    margin-right: 10px;\n}\n\n.button-image.round {\n    width: 25px;\n    height: 25px;\n}\n\n.button-image.tall {\n    width: 20px;\n    height: 25px;\n}\n\n/deep/ .mat-tooltip {\n    font-size: 14px;\n}\n\ntable {\n  width: 100%;\n}\n\n#filter {\n    width: 100%;\n    margin-top: 15px;\n}\n\n.link {\n  color: dodgerblue;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n  /*change color of label*/\n  color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /*change color of underline*/\n  background-color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /*change color of underline when focused*/\n  background-color: #003F91 !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title\\') }}                  {{ t(\\'create\\') }}                    {{ t(\\'delete\\') }}            {{t(\\'filter\\')}}                                                                                           {{ t(\\'route-number\\') }}        {{ route.routeShortName }}                    {{ t(\\'route-name\\') }}        {{ route.routeLongName }}                    {{ t(\\'route-transport\\') }}        {{ TransportType[route.routeTransportType] }}                    {{ t(\\'route-company\\') }}        {{ route.agency.agencyName }}                    {{ t(\\'route-duration\\') }}        {{ route.routeDuration }} min                        {{ t(\\'route-details\\') }}                          No data matching the filter \"{{input.value}}\"        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouteManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouteService.html":{"url":"injectables/RouteService.html","title":"injectable - RouteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/route.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRoute\n                            \n                            \n                                deleteRoute\n                            \n                            \n                                editRoute\n                            \n                            \n                                getRoute\n                            \n                            \n                                getRoutes\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/route.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRoute\n                        \n                    \n                \n            \n            \n                \naddRoute(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:47\n                \n            \n\n\n            \n                \n                    Adds a route to the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        route to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The created route.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRoute\n                        \n                    \n                \n            \n            \n                \ndeleteRoute(routeId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:58\n                \n            \n\n\n            \n                \n                    Deletes a specific route from the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    routeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the route to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The deleted route\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editRoute\n                        \n                    \n                \n            \n            \n                \neditRoute(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:69\n                \n            \n\n\n            \n                \n                    Sends a route to the database to update.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The route to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The edited route\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoute\n                        \n                    \n                \n            \n            \n                \ngetRoute(routeId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets a specific route from the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    routeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id to search the route for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A route obtained from the database with a specific id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoutes\n                        \n                    \n                \n            \n            \n                \ngetRoutes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:25\n                \n            \n\n\n            \n                \n                    Gets all routes in the database.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A list of routes obtained from the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/route.service.ts:80\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Route } from '../models/route';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n  /**\n   * Service that communicates with the server and has various operations about Routes.\n   */\nexport class RouteService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient,) { }\n\n  /**\n   * Gets all routes in the database.\n   * @returns A list of routes obtained from the database.\n   */\n  getRoutes(): Observable {\n    //return this.http.get('api/RoutesApi')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/RoutesApi')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Gets a specific route from the database.\n   * @param {string} routeId Id to search the route for.\n   * @returns A route obtained from the database with a specific id.\n   */\n  getRoute(routeId: string): Observable {\n    //return this.http.get(`api/RoutesApi/${routeId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/RoutesApi/${routeId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Adds a route to the database.\n   * @param {Route} route route to add.\n   * @returns The created route.\n   */\n  addRoute(route: Route): Observable {\n    //return this.http.post(`api/RoutesApi`, route)\n    return this.http.post(`https://traveller-server.azurewebsites.net/api/RoutesApi`, route)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Deletes a specific route from the database.\n   * @param {string} routeId Id of the route to delete.\n   * @returns The deleted route\n   */\n  deleteRoute(routeId: string): Observable {\n    //return this.http.delete(`api/RoutesApi/${routeId}`)\n    return this.http.delete(`https://traveller-server.azurewebsites.net/api/RoutesApi/${routeId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Sends a route to the database to update.\n   * @param {Route} route The route to update.\n   * @returns The edited route\n   */\n  editRoute(route: Route): Observable {\n    //return this.http.put(`api/RoutesApi/${route.routeId}`, route)\n    return this.http.put(`https://traveller-server.azurewebsites.net/api/RoutesApi/${route.routeId}`, route)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistics.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeUsersCount\n                            \n                            \n                                mostUsedTransport\n                            \n                            \n                                newUsers\n                            \n                            \n                                timeSpent\n                            \n                            \n                                totalUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(activeUsersCount: number, totalUsers: number, newUsers: number, mostUsedTransport: string, timeSpent: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistics.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeUsersCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalUsers\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newUsers\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mostUsedTransport\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeSpent\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeUsersCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostUsedTransport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeSpent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Statistics {\n\n  activeUsersCount: number;\n\n  totalUsers: number;\n\n  newUsers: number;\n\n  mostUsedTransport: string;\n\n  timeSpent: string;\n\n  constructor(activeUsersCount: number, totalUsers: number, newUsers: number, mostUsedTransport: string, timeSpent: string) {\n    this.activeUsersCount = activeUsersCount;\n    this.totalUsers = totalUsers;\n    this.newUsers = newUsers;\n    this.mostUsedTransport = mostUsedTransport;\n    this.timeSpent = timeSpent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/statistics/statistics.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-statistics\n            \n\n            \n                styleUrls\n                ./statistics.component.css\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                activeUsers\n                            \n                            \n                                change\n                            \n                            \n                                chart\n                            \n                            \n                                label\n                            \n                            \n                                labelSub\n                            \n                            \n                                mostActiveZones\n                            \n                            \n                                mostActiveZonesData\n                            \n                            \n                                mostActiveZonesKeys\n                            \n                            \n                                    Optional\n                                newUsers\n                            \n                            \n                                    Optional\n                                totalUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, statisticsService: StatisticsService, http: HttpClient, translation: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/statistics/statistics.component.ts:79\n                            \n                        \n\n                \n                    \n                            The constructor injects the HttpClient and TranslocoService modules to be used in the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        statisticsService\n                                                  \n                                                        \n                                                                        StatisticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                                \n                                                        translation\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/statistics/statistics.component.ts:105\n                \n            \n\n\n            \n                \n                    ngOnInit method is called when the component is initialized.\nIt retrieves the total and new users data from the API and creates the chart using Chart.js.\nIt also subscribes to the translated label and updates the chart accordingly.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        activeUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:34\n                        \n                    \n\n            \n                \n                    Variables to store the number of active users\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        change\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:79\n                        \n                    \n\n            \n                \n                    Variables responsible to change the number of mat-card elements to show\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:49\n                        \n                    \n\n            \n                \n                    The chart variable is used to store the chart object created using the Chart.js library\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:54\n                        \n                    \n\n            \n                \n                    The label variable is used to store the chart title label\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:59\n                        \n                    \n\n            \n                \n                    The labelSub variable is used to subscribe to the translated label and update the chart\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostActiveZones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:64\n                        \n                    \n\n            \n                \n                    Variables to store the most active zones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostActiveZonesData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:74\n                        \n                    \n\n            \n                \n                    Variables to store the most active zones data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mostActiveZonesKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:69\n                        \n                    \n\n            \n                \n                    Variables to store the orginal keys of the most active zones\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:44\n                        \n                    \n\n            \n                \n                    Variables to store the number of new users\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        totalUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/statistics/statistics.component.ts:39\n                        \n                    \n\n            \n                \n                    Variables to store the number of total users\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, AfterViewInit, Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Chart, registerables } from 'chart.js';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { Subscription } from 'rxjs';\nimport { StatisticsService } from '../../services/statistics.service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\n\n/**\n * The component is marked as injectable to allow it to be used as a service\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * StatisticsComponent class is the main component that implements the OnInit interface\n */\n\nexport class StatisticsComponent implements OnInit {\n  /**\n   * Variables to store the number of active users\n   */\n  activeUsers?: number;\n\n  /**\n   * Variables to store the number of total users\n   */\n  totalUsers?: number;\n\n  /**\n   * Variables to store the number of new users\n   */\n  newUsers?: number;\n\n  /**\n  * The chart variable is used to store the chart object created using the Chart.js library\n  */\n  chart: any = [];\n\n  /**\n  * The label variable is used to store the chart title label\n  */\n  label: any;\n\n  /**\n  * The labelSub variable is used to subscribe to the translated label and update the chart\n  */\n  labelSub!: Subscription;\n\n  /**\n  * Variables to store the most active zones\n  */  \n  mostActiveZones: string[] = [];\n\n  /**\n  * Variables to store the orginal keys of the most active zones\n  */  \n  mostActiveZonesKeys: string[] = []; \n\n  /**\n  * Variables to store the most active zones data\n  */\n  mostActiveZonesData: number[] = []; \n\n  /**\n  * Variables responsible to change the number of mat-card elements to show\n  */\n  change: number = 1;\n\n  /**\n * The constructor injects the HttpClient and TranslocoService modules to be used in the component\n * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n * @param {TranslocoService} service TranslocoService object in order to change chart label language at runtime.\n */\n  constructor(private breakpointObserver: BreakpointObserver,private statisticsService: StatisticsService, private http: HttpClient, private translation: TranslocoService) {\n    Chart.register(...registerables);\n    this.breakpointObserver.observe([\n      Breakpoints.Small,\n      Breakpoints.XSmall,\n    ]).subscribe(result => {\n      if (result.matches)\n        this.change = 3;\n      else {\n        this.change = 1;\n      }\n    });\n  }\n\n  /**\n * ngOnInit method is called when the component is initialized.\n * It retrieves the total and new users data from the API and creates the chart using Chart.js.\n * It also subscribes to the translated label and updates the chart accordingly.\n */\n  ngOnInit(): void {\n\n    this.statisticsService.getActiveUsers().subscribe(data => {\n      this.activeUsers = data.activeUsersCount;\n    });\n\n    this.statisticsService.getTotalNumberOfUsers().subscribe(data => {\n      this.totalUsers = data.totalUsers;\n    });\n\n    this.statisticsService.getNumberOfNewUsers().subscribe(data => {\n      this.newUsers = data.newUsers;\n    });\n\n    this.statisticsService.getMostActiveZones().subscribe(data => {\n      this.mostActiveZonesKeys = Object.keys(data);\n      this.mostActiveZones = Object.keys(data).map(zone => this.translation.translate('statistics.list.' + zone));\n      this.mostActiveZonesData = Object.values(data);\n      if (this.chart.data.datasets[0].data.length !== this.mostActiveZonesData.length) {\n        this.chart.data.datasets[0].data = this.mostActiveZonesData;\n        this.chart.data.labels = this.mostActiveZones;\n        this.chart.update();\n      }\n      this.chart.update();\n    });\n\n    this.label = this.translation.selectTranslate('statistics.list.chart-title');\n    this.labelSub = this.translation.selectTranslate('statistics.list.chart-title').subscribe(\n      label => {\n        this.label = label;\n        this.chart.data.datasets[0].label = this.label;\n        this.chart.update();\n      }\n    );\n\n    this.translation.langChanges$.subscribe(() => {\n      this.mostActiveZones = this.mostActiveZonesKeys.map(zone => this.translation.translate('statistics.list.' + zone));\n      this.chart.data.labels = this.mostActiveZones;\n      this.chart.update();\n    });\n\n    const canvas = document.getElementById('myChart');\n    const ctx = canvas.getContext('2d');\n\n    if (ctx) {\n      this.chart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: this.mostActiveZones,\n          datasets: [\n            {\n              label: this.label,\n              data: this.mostActiveZonesData, \n              backgroundColor: [\n                'rgba(59, 226, 171, 1)',\n              ]\n            },\n          ],\n\n        },\n\n        options: {\n          plugins: { \n            legend: {\n              labels: {\n                color: \"white\"\n              }\n            }\n          },\n        },\n      });\n    }\n\n  }\n}\n\n    \n\n    \n        \n\n\n  {{ t('title') }}\n\n\n\n  \n    \n      \n        \n          \n            {{ t('active-users') }}\n            \n              help\n            \n          \n          \n            {{ activeUsers }}\n          \n        \n      \n    \n    \n      \n        \n          \n            {{ t('total-users') }}\n            \n              help\n            \n          \n          {{ totalUsers }}\n        \n      \n    \n    \n      \n        \n          \n            {{ t('new-users') }}\n            \n              help\n            \n          \n          {{ newUsers }}\n        \n      \n    \n  \n  \n    \n      {{chart}}\n      \n        \n          help\n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./statistics.component.css\n                \n                .mat-card {\n  border: 1px solid black;\n  width: 100%;\n  height: 100%;\n  background: #003F91;\n}\n\n.mat-grid-tile {\n  border-radius: 10px;\n  background: #003F91;\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n}\n\n.stats-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 100%;\n}\n\n.title {\n  color: #FAFAF9;\n  font-size: 2em;\n  align-self: flex-start;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.number {\n  color: #FAFAF9;\n  font-size: 5em;\n  position: absolute;\n  top: 30%;\n}\n\n.info-icon {\n  height: 20px;\n  cursor: pointer;\n}\n\n.info-message {\n  display: none;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  padding: 10px;\n  border-radius: 5px;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\n}\n\n.stats-container:hover .info-message {\n  display: block;\n}\n\n\n::ng-deep .mat-tooltip {\n  font-size: 0.9em;\n  border: 1px solid black;\n}\n\n.mat-card-chart {\n  color: #FAFAF9;\n  display: flex;\n  justify-content: center;\n}\n\n#myChart {\n  width: 100%;\n  height: 100% ;\n}\n\n/* Media queries for responsive design */\n@media (max-width: 1160px) {\n  .title {\n    font-size: 1.5em;\n  }\n\n  .number {\n    font-size: 4.5em;\n  }\n}\n\n@media only screen and (max-width: 960px) {\n  .title {\n    font-size: 2.5em;\n  }\n\n  .number {\n    font-size: 5em;\n  }\n}\n\n@media only screen and (max-width: 768px) {\n  .title {\n    font-size: 1.5em;\n  }\n\n  .number {\n    font-size: 4.5em;\n  }\n}\n\n@media only screen and (min-width: 515px) and (max-width: 767px) {\n  .title {\n    font-size: 2em;\n  }\n\n  .number {\n    font-size: 4.5em;\n  }\n}\n\n@media only screen and (min-width: 481px) and (max-width: 514px) {\n  .title {\n    font-size: 1.5em;\n  }\n\n  .number {\n    font-size: 4.5em;\n  }\n}\n\n\n@media only screen and (max-width: 480px) {\n  .title {\n    font-size: 1em;\n  }\n\n  .number {\n    font-size: 4.5em;\n  }\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title\\') }}                                          {{ t(\\'active-users\\') }}                          help                                            {{ activeUsers }}                                                                    {{ t(\\'total-users\\') }}                          help                                {{ totalUsers }}                                                          {{ t(\\'new-users\\') }}                          help                                {{ newUsers }}                                {{chart}}                        help                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   "},"injectables/StatisticsService.html":{"url":"injectables/StatisticsService.html","title":"injectable - StatisticsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatisticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/statistics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActiveUsers\n                            \n                            \n                                getMostActiveZones\n                            \n                            \n                                getNumberOfNewUsers\n                            \n                            \n                                getTotalNumberOfUsers\n                            \n                            \n                                getUserMostUsedTransport\n                            \n                            \n                                getUserTimeSpent\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/statistics.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveUsers\n                        \n                    \n                \n            \n            \n                \ngetActiveUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:31\n                \n            \n\n\n            \n                \n                    getActiveUsers method is used to get the total number of active users from the API\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMostActiveZones\n                        \n                    \n                \n            \n            \n                \ngetMostActiveZones()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:62\n                \n            \n\n\n            \n                \n                    getMostActiveZones method is used to get the most active zones from the API\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfNewUsers\n                        \n                    \n                \n            \n            \n                \ngetNumberOfNewUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:52\n                \n            \n\n\n            \n                \n                    getNumberOfNewUsers method is used to get the number of new users from the API\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalNumberOfUsers\n                        \n                    \n                \n            \n            \n                \ngetTotalNumberOfUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:42\n                \n            \n\n\n            \n                \n                    getTotalNumberOfUsers method is used to get the total number of users from the API\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserMostUsedTransport\n                        \n                    \n                \n            \n            \n                \ngetUserMostUsedTransport(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:72\n                \n            \n\n\n            \n                \n                    getUserMostUsedTransport method is used to get the most used transport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserTimeSpent\n                        \n                    \n                \n            \n            \n                \ngetUserTimeSpent(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:82\n                \n            \n\n\n            \n                \n                    getUserTimeSpent method is used to get the user time spent in transports\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:94\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Statistics } from '../models/statistics';\n\ninterface MostUsedTransportResponse {\n  mostUsedTransport: { transportType: string, totalCount: number }[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n/**\n* Service that communicates with the server and has various operations about statistics.\n*/\nexport class StatisticsService {\n\n  /**\n   * Constructor for the class.\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n  * getActiveUsers method is used to get the total number of active users from the API\n  */\n\n  getActiveUsers() {\n    //return this.http.get('api/StatisticsApi/GetActiveUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetActiveUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n\n  /**\n   * getTotalNumberOfUsers method is used to get the total number of users from the API\n   */\n\n  getTotalNumberOfUsers() {\n    //return this.http.get('api/StatisticsApi/GetTotalNumberOfUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTotalNumberOfUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getNumberOfNewUsers method is used to get the number of new users from the API\n  */\n\n  getNumberOfNewUsers() {\n    //return this.http.get('api/StatisticsApi/GetTotalOfNewUsers')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTotalOfNewUsers')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getMostActiveZones method is used to get the most active zones from the API\n  */\n\n  getMostActiveZones() {\n    //return this.http.get('api/StatisticsApi/GetMostActiveZones')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StatisticsApi/GetMostActiveZones')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getUserMostUsedTransport method is used to get the most used transport\n  */\n\n  getUserMostUsedTransport(userId: string) {\n    //return this.http.get(`api/StatisticsApi/GetMostUsedTransport/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StatisticsApi/GetMostUsedTransport/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n  * getUserTimeSpent method is used to get the user time spent in transports\n  */\n\n  getUserTimeSpent(userId: string) {\n    //return this.http.get(`api/StatisticsApi/GetTimeSpent/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StatisticsApi/GetTimeSpent/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stop.html":{"url":"classes/Stop.html","title":"class - Stop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/stop.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a Stop.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stopCode\n                            \n                            \n                                stopId\n                            \n                            \n                                stopLat\n                            \n                            \n                                stopLon\n                            \n                            \n                                stopName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stopId: string, stopCode: string, stopName: string, stopLat: number, stopLon: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/stop.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stopId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopLat\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopLon\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        stopCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop.ts:13\n                        \n                    \n\n            \n                \n                    Short text or a number that identifies the stop for riders.\nThe stop_code may be the same as stop_id if it is public facing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop.ts:8\n                        \n                    \n\n            \n                \n                    Id of the stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopLat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop.ts:21\n                        \n                    \n\n            \n                \n                    Latitude of the stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopLon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop.ts:25\n                        \n                    \n\n            \n                \n                    Longitude of the stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop.ts:17\n                        \n                    \n\n            \n                \n                    Name of the stop.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Stop {\n  /**\n   * Id of the stop.\n   */\n  stopId: string;\n  /**\n   * Short text or a number that identifies the stop for riders.\n   * The stop_code may be the same as stop_id if it is public facing.\n   */\n  stopCode: string;\n  /**\n   * Name of the stop.\n   */\n  stopName: string;\n  /**\n   * Latitude of the stop.\n   */\n  stopLat: number;\n  /**\n   * Longitude of the stop.\n   */\n  stopLon: number;\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(stopId: string, stopCode: string, stopName: string, stopLat: number, stopLon: number) {\n    this.stopId = stopId;\n    this.stopCode = stopCode;\n    this.stopName = stopName;\n    this.stopLat = stopLat;\n    this.stopLon = stopLon;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopCreateComponent.html":{"url":"components/StopCreateComponent.html","title":"component - StopCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StopCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/stop-create/stop-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stop-create\n            \n\n            \n                styleUrls\n                ./stop-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stop-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                createStopForm\n                            \n                            \n                                markerOptions\n                            \n                            \n                                markerPos\n                            \n                            \n                                options\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStopMarkerInMap\n                            \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(stopService: StopService, formBuilder: FormBuilder, translocoService: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/stop-create/stop-create.component.ts:55\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Stops.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Builds form data.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that perform the translation of the text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStopMarkerInMap\n                        \n                    \n                \n            \n            \n                \naddStopMarkerInMap(event: google.maps.MapMouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stop-create/stop-create.component.ts:78\n                \n            \n\n\n            \n                \n                    Adds a map marker to the map and puts its coordinates in the creation form.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            google.maps.MapMouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event that contains the coordinates of where the user clicked.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stop-create/stop-create.component.ts:127\n                \n            \n\n\n            \n                \n                    Cancels the creation of a new stop. Redirects back to the previous page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stop-create/stop-create.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stop-create/stop-create.component.ts:90\n                \n            \n\n\n            \n                \n                    Creates a Location object, then sends it to the database using the locationService.\nAfter this using the locationId of this object, creates a Stop object and using the stopService sends it to the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:41\n                        \n                    \n\n            \n                \n                    Coordinates for the map to be centered on\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createStopForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    code: ['', Validators.required],\n    name: ['', Validators.required],\n    latitude: this.formBuilder.control(null, Validators.required),\n    longitude: this.formBuilder.control(null, Validators.required)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:50\n                        \n                    \n\n            \n                \n                    Form data to be viewed in the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MarkerOptions\n\n                    \n                \n                \n                    \n                        Default value : { draggable: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:32\n                        \n                    \n\n            \n                \n                    Options to be used by the Map-Marker field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.LatLngLiteral | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:45\n                        \n                    \n\n            \n                \n                    Coordinates of the stop marker\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MapOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:22\n                        \n                    \n\n            \n                \n                    Options to be used by the Google-Map field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 13\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stop-create/stop-create.component.ts:37\n                        \n                    \n\n            \n                \n                    Zoom level for the map to use at the start\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { TranslocoService } from '@ngneat/transloco';\nimport Snackbar from 'awesome-snackbar';\nimport { Guid } from 'guid-typescript';\nimport { Stop } from '../../models/stop';\nimport { StopService } from '../../services/stop.service';\n\n@Component({\n  selector: 'app-stop-create',\n  templateUrl: './stop-create.component.html',\n  styleUrls: ['./stop-create.component.css']\n})\n\n/**\n * Class for the component of the page for creating Stops\n */\nexport class StopCreateComponent implements OnInit {\n  /**\n   * Options to be used by the Google-Map field\n   */\n  options: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n\n  /**\n   * Zoom level for the map to use at the start\n   */\n  zoom = 13;\n  /**\n   * Coordinates for the map to be centered on\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * Coordinates of the stop marker\n   */\n  markerPos!: google.maps.LatLngLiteral | undefined;\n\n  /**\n   * Form data to be viewed in the page\n   */\n  createStopForm = this.formBuilder.group({\n    code: ['', Validators.required],\n    name: ['', Validators.required],\n    latitude: this.formBuilder.control(null, Validators.required),\n    longitude: this.formBuilder.control(null, Validators.required)\n  });\n\n  /**\n   * Constructor for the component.\n   * @param {StopService} stopService Service that communicates with the server and has various operations about Stops.\n   * @param {FormBuilder} formBuilder Builds form data.\n   * @param {TranslocoService} translocoService Service that perform the translation of the text.\n   */\n  constructor(private stopService: StopService, private formBuilder: FormBuilder, private translocoService: TranslocoService) { }\n\n  ngOnInit(): void {\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      };\n    });\n  }\n\n  /**\n   * Adds a map marker to the map and puts its coordinates in the creation form.\n   * @param {google.maps.MapMouseEvent} event Event that contains the coordinates of where the user clicked.\n   */\n  addStopMarkerInMap(event: google.maps.MapMouseEvent) {\n    this.markerPos = event.latLng?.toJSON();\n    if (event.latLng?.lat() && event.latLng?.lng()) {\n      this.createStopForm.controls.latitude.patchValue(event.latLng.lat());\n      this.createStopForm.controls.longitude.patchValue(event.latLng.lng());\n    }\n  }\n\n  /**\n   * Creates a Location object, then sends it to the database using the locationService.\n   * After this using the locationId of this object, creates a Stop object and using the stopService sends it to the database.\n   */\n  onSubmit(): void {\n    let stopCode = this.createStopForm.controls.code.value!;\n    let stopName = this.createStopForm.controls.name.value!;\n    let stopLat = this.createStopForm.controls.latitude.value!;\n    let stopLon = this.createStopForm.controls.longitude.value!;\n\n    if (stopCode && stopName && stopLat && stopLon) {\n\n      let stop: Stop = new Stop(Guid.create().toString(), stopCode, stopName, stopLat, stopLon);\n      this.stopService.addStop(stop).subscribe();\n      new Snackbar(this.translocoService.translate('route-management.add-stop.success-message'), {\n        position: 'bottom-center',\n        actionText: this.translocoService.translate('login.list.hide'),\n        style: {\n          container: [\n            ['background-color', '#003F91']\n          ]\n        }\n      });\n      window.history.back();\n    }\n    else {\n      new Snackbar(this.translocoService.translate('route-management.add-stop.error-message'), {\n        position: 'bottom-center',\n        actionText: this.translocoService.translate('login.list.hide'),\n        style: {\n          container: [\n            ['background-color', '#003F91']\n          ]\n        }\n      });\n    }\n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n\n    \n\n    \n        \n  {{ t('title') }}\n\n  \n    \n      \n        \n          {{ t('label-code') }}\n          \n          {{ t('error-code') }}\n        \n        \n          {{ t('label-name') }}\n          \n          {{ t('error-name') }}\n        \n        \n          {{ t('label-latitude') }}\n          \n          {{ t('error-latitude') }}\n        \n        \n          {{ t('label-longitude') }}\n          \n          {{ t('error-longitude') }}\n        \n        \n          {{ t('submit') }}\n          {{ t('cancel') }}\n        \n      \n      \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./stop-create.component.css\n                \n                form{\n    margin-top: 20px;\n}\n\ngoogle-map {\n  width: 730px;\n}\n\n#full-form{\n    display: flex;\n}\n\n#form-fields {\n    width: 40%;\n    display: flex;\n    flex-flow: column;\n    margin-right: 50px;\n}\n\nmat-form-field{\n    margin-bottom: 30px;\n}\n\n#form-buttons{\n    display: flex;\n    justify-content: space-evenly;\n}\n\n.button {\n  width: 120px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title\\') }}                              {{ t(\\'label-code\\') }}                    {{ t(\\'error-code\\') }}                          {{ t(\\'label-name\\') }}                    {{ t(\\'error-name\\') }}                          {{ t(\\'label-latitude\\') }}                    {{ t(\\'error-latitude\\') }}                          {{ t(\\'label-longitude\\') }}                    {{ t(\\'error-longitude\\') }}                          {{ t(\\'submit\\') }}          {{ t(\\'cancel\\') }}                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StopCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StopService.html":{"url":"injectables/StopService.html","title":"injectable - StopService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stop.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStop\n                            \n                            \n                                getStops\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stop.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStop\n                        \n                    \n                \n            \n            \n                \naddStop(stop: Stop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop.service.ts:36\n                \n            \n\n\n            \n                \n                    Adds a stop to the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stop\n                                    \n                                                Stop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Stop to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The created route.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStops\n                        \n                    \n                \n            \n            \n                \ngetStops()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop.service.ts:25\n                \n            \n\n\n            \n                \n                    Gets all the existent stops.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A list of all the stops in the system.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop.service.ts:47\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Stop } from '../models/stop';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n  /**\n   * Service that communicates with the server and has various operations about Stops.\n   */\nexport class StopService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient,) { }\n\n  /**\n   * Gets all the existent stops.\n   * @returns A list of all the stops in the system.\n   */\n  getStops(): Observable {\n    //return this.http.get('api/StopsApi')\n    return this.http.get('https://traveller-server.azurewebsites.net/api/StopsApi')\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Adds a stop to the database.\n   * @param {Stop} stop Stop to add.\n   * @returns The created route.\n   */\n  addStop(stop: Stop): Observable {\n    //return this.http.post(`api/StopsApi`, stop)\n    return this.http.post(`https://traveller-server.azurewebsites.net/api/StopsApi`, stop)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StopTime.html":{"url":"classes/StopTime.html","title":"class - StopTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StopTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/stop-time.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a StopTime.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrivalTime\n                            \n                            \n                                departureTime\n                            \n                            \n                                shapeDistTraveled\n                            \n                            \n                                stop\n                            \n                            \n                                stopId\n                            \n                            \n                                stopSequence\n                            \n                            \n                                trip\n                            \n                            \n                                tripId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHoursAndMinutesString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tripId: string, arrivalTime: Date, departureTime: Date, stopId: string, stopSequence: number, shapeDistTraveled: number, trip?: Trip, stop?: Stop)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/stop-time.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tripId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        arrivalTime\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        departureTime\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stopSequence\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shapeDistTraveled\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trip\n                                                  \n                                                        \n                                                                        Trip\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        stop\n                                                  \n                                                        \n                                                                        Stop\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        arrivalTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:19\n                        \n                    \n\n            \n                \n                    Arrival time at the stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departureTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:23\n                        \n                    \n\n            \n                \n                    Departure time from the stop\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shapeDistTraveled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:39\n                        \n                    \n\n            \n                \n                    Actual distance traveled along the associated shape, from the first stop to the stop specified in this record.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stop\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:31\n                        \n                    \n\n            \n                \n                    The stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:27\n                        \n                    \n\n            \n                \n                    Id of the stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopSequence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:35\n                        \n                    \n\n            \n                \n                    Order of the stop in the stopTime.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:15\n                        \n                    \n\n            \n                \n                    The trip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/stop-time.ts:11\n                        \n                    \n\n            \n                \n                    Id of the Trip.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHoursAndMinutesString\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHoursAndMinutesString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/stop-time.ts:61\n                \n            \n\n\n            \n                \n                    Function used to get the hours and minutes from the time variable and put it on a string.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Stop } from \"./stop\";\nimport { Trip } from \"./trip\";\n\n/**\n * Class that represents a StopTime.\n */\nexport class StopTime {\n  /**\n   * Id of the Trip.\n   */\n  tripId: string;\n  /**\n   * The trip.\n   */\n  trip!: Trip;\n  /**\n   * Arrival time at the stop.\n   */\n  arrivalTime: Date;\n  /**\n   * Departure time from the stop\n   */\n  departureTime: Date;\n  /**\n   * Id of the stop.\n   */\n  stopId: string;\n  /**\n   * The stop.\n   */\n  stop!: Stop;\n  /**\n   * Order of the stop in the stopTime.\n   */\n  stopSequence: number;\n  /**\n   * Actual distance traveled along the associated shape, from the first stop to the stop specified in this record.\n   */\n  shapeDistTraveled: number;\n\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(tripId: string, arrivalTime: Date, departureTime: Date,\n    stopId: string, stopSequence: number, shapeDistTraveled: number, trip?: Trip, stop?: Stop) {\n    this.tripId = tripId;\n    this.arrivalTime = new Date(arrivalTime);\n    this.departureTime = new Date(departureTime);\n    this.stopId = stopId;\n    this.stopSequence = stopSequence;\n    this.shapeDistTraveled = shapeDistTraveled;\n\n    if (trip) this.trip = trip;\n    if (stop) this.stop = stop;\n  }\n\n  /**\n   * Function used to get the hours and minutes from the time variable and put it on a string.\n   * */\n  public getHoursAndMinutesString() {\n    return String(this.departureTime.getHours()).padStart(2, '0') + \":\" + String(this.departureTime.getMinutes()).padStart(2, '0');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StopTimeService.html":{"url":"injectables/StopTimeService.html","title":"injectable - StopTimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StopTimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/stop-time.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStopTime\n                            \n                            \n                                deleteStopTime\n                            \n                            \n                                editStopTime\n                            \n                            \n                                getStopsOfRoute\n                            \n                            \n                                getStopsOfTrip\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/stop-time.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStopTime\n                        \n                    \n                \n            \n            \n                \naddStopTime(stopTime: StopTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:46\n                \n            \n\n\n            \n                \n                    Adds a StopTime to the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stopTime\n                                    \n                                                StopTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LinkedStop to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The created LinkedStop\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteStopTime\n                        \n                    \n                \n            \n            \n                \ndeleteStopTime(tripId: string, sequence: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:68\n                \n            \n\n\n            \n                \n                    Edits a StopTime in the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sequence\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The created LinkedStop\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editStopTime\n                        \n                    \n                \n            \n            \n                \neditStopTime(tripId: string, sequence: number, stopTime: StopTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:57\n                \n            \n\n\n            \n                \n                    Edits a StopTime in the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    sequence\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    stopTime\n                                    \n                                                StopTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        LinkedStop to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The created LinkedStop\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStopsOfRoute\n                        \n                    \n                \n            \n            \n                \ngetStopsOfRoute(routeId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:25\n                \n            \n\n\n            \n                \n                    Method to get the all the available stops of a route.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStopsOfTrip\n                        \n                    \n                \n            \n            \n                \ngetStopsOfTrip(tripId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:35\n                \n            \n\n\n            \n                \n                    Method to get the stops of a specific trip from a route.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/stop-time.service.ts:79\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { StopTime } from '../models/stop-time';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Service that communicates with the server and has various operations about StopTimes.\n */\nexport class StopTimeService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient,) { }\n\n  /**\n   * Method to get the all the available stops of a route.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  getStopsOfRoute(routeId: string): Observable {\n    //return this.http.get(`api/RoutesApi/StopTimes/${routeId}`).pipe(catchError(this.handleError));\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StopTimesApi/Route/${routeId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Method to get the stops of a specific trip from a route.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  getStopsOfTrip(tripId: string): Observable {\n    //return this.http.get(`api/RoutesApi/StopTimes/${routeId}`).pipe(catchError(this.handleError));\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/StopTimesApi/Trip/${tripId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Adds a StopTime to the database.\n   * @param {StopTime} stopTime LinkedStop to add.\n   * @returns The created LinkedStop\n   */\n  addStopTime(stopTime: StopTime): Observable {\n    //return this.http.post(`api/StopTimesApi`, stopTime)\n    return this.http.post(`https://traveller-server.azurewebsites.net/api/StopTimesApi`, stopTime)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Edits a StopTime in the database.\n   * @param {StopTime} stopTime LinkedStop to add.\n   * @returns The created LinkedStop\n   */\n  editStopTime(tripId: string, sequence: number, stopTime: StopTime): Observable {\n    //return this.http.put(`api/StopTimesApi/${stopTime.id}`, stopTime)\n    return this.http.put(`https://traveller-server.azurewebsites.net/api/StopTimesApi/${tripId}/${sequence}`, stopTime)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Edits a StopTime in the database.\n   * @param {StopTime} stopTime LinkedStop to add.\n   * @returns The created LinkedStop\n   */\n  deleteStopTime(tripId: string, sequence: number): Observable {\n    //return this.http.delete(`api/StopTimesApi/${stopTimeId}`)\n    return this.http.delete(`https://traveller-server.azurewebsites.net/api/StopTimesApi/${tripId}/${sequence}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Suspension.html":{"url":"classes/Suspension.html","title":"class - Suspension","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Suspension\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/suspension.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a Suspension.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                permanent\n                            \n                            \n                                reason\n                            \n                            \n                                startDate\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, userId: string, startDate: Date, endDate: Date, reason: string, permanent: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/suspension.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reason\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permanent\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:20\n                        \n                    \n\n            \n                \n                    Date of the end of the suspension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:8\n                        \n                    \n\n            \n                \n                    Id of the suspension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permanent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:28\n                        \n                    \n\n            \n                \n                    Whether the suspension is permanent.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:24\n                        \n                    \n\n            \n                \n                    Reason for the suspension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:16\n                        \n                    \n\n            \n                \n                    Date of the start of the suspension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/suspension.ts:12\n                        \n                    \n\n            \n                \n                    Id of the user of the suspension.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Suspension {\n  /**\n   * Id of the suspension.\n   */\n  id: string;\n  /**\n   * Id of the user of the suspension.\n   */\n  userId: string;\n  /**\n   * Date of the start of the suspension.\n   */\n  startDate: Date;\n  /**\n   * Date of the end of the suspension.\n   */\n  endDate: Date;\n  /**\n   * Reason for the suspension.\n   */\n  reason: string;\n  /**\n   * Whether the suspension is permanent.\n   */\n  permanent: boolean;\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(id: string, userId: string, startDate: Date, endDate: Date, reason: string, permanent: boolean) {\n    this.id = id;\n    this.userId = userId;\n    this.startDate = startDate;\n    this.endDate = endDate;\n    this.reason = reason;\n    this.permanent = permanent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuspensionService.html":{"url":"injectables/SuspensionService.html","title":"injectable - SuspensionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuspensionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/suspension.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSuspensionsOfUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                suspendUser\n                            \n                            \n                                unbanUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/suspension.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSuspensionsOfUser\n                        \n                    \n                \n            \n            \n                \ngetSuspensionsOfUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/suspension.service.ts:27\n                \n            \n\n\n            \n                \n                    Gets all the suspensions of a specific user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the user to search for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A list of suspensions of a user obtained from the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/suspension.service.ts:65\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suspendUser\n                        \n                    \n                \n            \n            \n                \nsuspendUser(userId: string, startDate: Date, endDate: Date, reason: string, permanent: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/suspension.service.ts:41\n                \n            \n\n\n            \n                \n                    Suspends a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the user to suspend.\n\n                                    \n                                \n                                \n                                    startDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date to start the suspension.\n\n                                    \n                                \n                                \n                                    endDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date to end the suspension.\n\n                                    \n                                \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Reason for the suspension.\n\n                                    \n                                \n                                \n                                    permanent\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether suspension is permanent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unbanUser\n                        \n                    \n                \n            \n            \n                \nunbanUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/suspension.service.ts:54\n                \n            \n\n\n            \n                \n                    Function used to unban.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the user to unban.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Suspension } from '../models/suspension';\nimport { Guid } from 'guid-typescript';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n  /**\n   * Service that communicates with the server and has various operations about Suspensions.\n   */\nexport class SuspensionService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Gets all the suspensions of a specific user.\n   * @param {string} userId Id of the user to search for.\n   * @returns A list of suspensions of a user obtained from the database.\n   */\n  getSuspensionsOfUser(userId: string): Observable {\n    //return this.http.get(`api/UserSuspensionsApi/user/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/UserSuspensionsApi/user/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Suspends a user.\n   * @param {string} userId Id of the user to suspend.\n   * @param {Date} startDate Date to start the suspension.\n   * @param {Date} endDate Date to end the suspension.\n   * @param {string} reason Reason for the suspension.\n   * @param {boolean} permanent Whether suspension is permanent.\n   */\n  suspendUser(userId: string, startDate: Date, endDate: Date, reason: string, permanent: boolean) {\n    if (reason == \"\") {\n      reason = \"No reason provided.\";\n    }\n    //return this.http.post(`api/UserSuspensionsApi`, new Suspension(Guid.create().toString(), userId, startDate, endDate, reason, permanent))\n    return this.http.post(`https://traveller-server.azurewebsites.net/api/UserSuspensionsApi`, new Suspension(Guid.create().toString(), userId, startDate, endDate, reason, permanent))\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Function used to unban.\n   * @param userId Id of the user to unban.\n   */\n  unbanUser(userId: string) {\n    //return this.http.get(`api/UserSuspensionsApi/unban/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/UserSuspensionsApi/unban/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslocoHttpLoader.html":{"url":"injectables/TranslocoHttpLoader.html","title":"injectable - TranslocoHttpLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TranslocoHttpLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/transloco-root.module.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/transloco-root.module.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/transloco-root.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, isDevMode, NgModule } from '@angular/core';\n\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get(`/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en', 'pt'],\n        defaultLang: 'en',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: !isDevMode(),\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslocoRootModule.html":{"url":"modules/TranslocoRootModule.html","title":"module - TranslocoRootModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslocoRootModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transloco-root.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, isDevMode, NgModule } from '@angular/core';\n\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get(`/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en', 'pt'],\n        defaultLang: 'en',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: !isDevMode(),\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Trip.html":{"url":"classes/Trip.html","title":"class - Trip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Trip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/trip.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a Trip.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                direction\n                            \n                            \n                                route\n                            \n                            \n                                routeId\n                            \n                            \n                                serviceId\n                            \n                            \n                                shapeId\n                            \n                            \n                                tripHeadsign\n                            \n                            \n                                tripId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tripId: string, tripHeadsign: string, routeId: string, serviceId: string, direction: TravelDirection, shapeId: string, route?: Route)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/trip.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tripId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tripHeadsign\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        direction\n                                                  \n                                                        \n                                                                        TravelDirection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shapeId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Route\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TravelDirection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:31\n                        \n                    \n\n            \n                \n                    The direction of the trip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:23\n                        \n                    \n\n            \n                \n                    The route.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:19\n                        \n                    \n\n            \n                \n                    Id of the route.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:27\n                        \n                    \n\n            \n                \n                    Id of the service.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shapeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:35\n                        \n                    \n\n            \n                \n                    Id of the shape.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripHeadsign\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:15\n                        \n                    \n\n            \n                \n                    The text normally displayed on a transport about the route, usually its name.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/trip.ts:11\n                        \n                    \n\n            \n                \n                    Id of the trip.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TravelDirection } from \"../enums/travel-direction\";\nimport { Route } from \"./route\";\n\n/**\n * Class that represents a Trip.\n */\nexport class Trip {\n  /**\n   * Id of the trip.\n   */\n  tripId: string;\n  /**\n   * The text normally displayed on a transport about the route, usually its name.\n   */\n  tripHeadsign: string;\n  /**\n   * Id of the route.\n   */\n  routeId: string;\n  /**\n   * The route.\n   */\n  route!: Route;\n  /**\n   * Id of the service.\n   */\n  serviceId: string;\n  /**\n   * The direction of the trip.\n   */\n  direction: TravelDirection;\n  /**\n   * Id of the shape.\n   */\n  shapeId: string;\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(tripId: string, tripHeadsign: string, routeId: string,\n    serviceId: string, direction: TravelDirection, shapeId: string);\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(tripId: string, tripHeadsign: string, routeId: string,\n    serviceId: string, direction: TravelDirection, shapeId: string, route?: Route) {\n    this.tripId = tripId;\n    this.tripHeadsign = tripHeadsign;\n    this.routeId = routeId;\n    this.serviceId = serviceId;\n    this.direction = direction;\n    this.shapeId = shapeId;\n\n    if (route) this.route = route;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripCreateComponent.html":{"url":"components/TripCreateComponent.html","title":"component - TripCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TripCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trip-create/trip-create.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trip-create\n            \n\n            \n                styleUrls\n                ./trip-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./trip-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AllStops\n                            \n                            \n                                AllTrips\n                            \n                            \n                                center\n                            \n                            \n                                createRouteForm\n                            \n                            \n                                directions\n                            \n                            \n                                directionsOptions\n                            \n                            \n                                directionsResults$\n                            \n                            \n                                mapOptions\n                            \n                            \n                                markerOptions\n                            \n                            \n                                markers\n                            \n                            \n                                route\n                            \n                            \n                                routeId\n                            \n                            \n                                toFormGroup\n                            \n                            \n                                TravelDirection\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addMarkers\n                            \n                            \n                                addStop\n                            \n                            \n                                cancel\n                            \n                            \n                                    Private\n                                linkMarkers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeStop\n                            \n                            \n                                updateMap\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stops\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(urlRoute: ActivatedRoute, routeService: RouteService, stopService: StopService, formBuilder: FormBuilder, mapDirectionsService: MapDirectionsService, tripService: TripService, router: Router, stopTimeService: StopTimeService, translocoService: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trip-create/trip-create.component.ts:100\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the route whose Id matches the one in the URL and passes its info to the form.\nAlso gets all the existent stops.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        urlRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        routeService\n                                                  \n                                                        \n                                                                        RouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Routes.\n\n                                                        \n                                                \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Stops.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Builds form data.\n\n                                                        \n                                                \n                                                \n                                                        mapDirectionsService\n                                                  \n                                                        \n                                                                    MapDirectionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Google service of the Directions API.\n\n                                                        \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Trips.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router.\n\n                                                        \n                                                \n                                                \n                                                        stopTimeService\n                                                  \n                                                        \n                                                                        StopTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about StopTimes.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that perform the translation of the text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:187\n                \n            \n\n\n            \n                \n                    Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addStop\n                        \n                    \n                \n            \n            \n                \naddStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:146\n                \n            \n\n\n            \n                \n                    Adds a form to the page that lets the user select the details for a stop in the route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:270\n                \n            \n\n\n            \n                \n                    Cancels the creation of a new stop. Redirects back to the previous page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        linkMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    linkMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:205\n                \n            \n\n\n            \n                \n                    Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:217\n                \n            \n\n\n            \n                \n                    Creates a trip object and sends it to the database using the tripService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeStop\n                        \n                    \n                \n            \n            \n                \nremoveStop(stopIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:159\n                \n            \n\n\n            \n                \n                    Removes the form of one of the route stops.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stopIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The form index to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMap\n                        \n                    \n                \n            \n            \n                \nupdateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-create/trip-create.component.ts:179\n                \n            \n\n\n            \n                \n                    Updates the map in the page by adding/removing markers and linking them together in one route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AllStops\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stop[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:82\n                        \n                    \n\n            \n                \n                    All the existent stops.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AllTrips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:87\n                        \n                    \n\n            \n                \n                    All the existent trips.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:57\n                        \n                    \n\n            \n                \n                    Coordinates for the map to be centered on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRouteForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:96\n                        \n                    \n\n            \n                \n                    Form data to be viewed in the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:91\n                        \n                    \n\n            \n                \n                    All the values of the TransportType enum.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.DirectionsRendererOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:42\n                        \n                    \n\n            \n                \n                    Options to be used by the Directions-Renderer field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:65\n                        \n                    \n\n            \n                \n                    Holds the result from the call of the Directions API made from the list of markers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MapOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:31\n                        \n                    \n\n            \n                \n                    Options to be used by the Google-Map field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MarkerOptions\n\n                    \n                \n                \n                    \n                        Default value : { draggable: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:49\n                        \n                    \n\n            \n                \n                    Options to be used by the Map-Marker field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:61\n                        \n                    \n\n            \n                \n                    List of markers that represents the stops of the route to edit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:74\n                        \n                    \n\n            \n                \n                    Route to edit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:70\n                        \n                    \n\n            \n                \n                    Id of the route.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:174\n                        \n                    \n\n            \n                \n                    Casts a AbstractControl form to a FormGroup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TravelDirection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TravelDirection\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:78\n                        \n                    \n\n            \n                \n                    TransportType for reverse mapping in the html.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 11\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-create/trip-create.component.ts:53\n                        \n                    \n\n            \n                \n                    Zoom level for the map to use at the start.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stops\n                    \n                \n\n                \n                    \n                        getstops()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/trip-create/trip-create.component.ts:167\n                                \n                            \n                    \n                        \n                                Gets all the stop forms in the page.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouteService } from '../../services/route.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route } from '../../models/route';\nimport { Stop } from '../../models/stop';\nimport { StopService } from '../../services/stop.service';\nimport { StopTime } from \"../../models/stop-time\";\nimport { Guid } from 'guid-typescript';\nimport { map, Observable } from 'rxjs';\nimport { MapDirectionsService } from '@angular/google-maps';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TravelDirection } from '../../enums/travel-direction';\nimport { Trip } from '../../models/trip';\nimport { TripService } from '../../services/trip.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport Snackbar from 'awesome-snackbar';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-trip-create',\n  templateUrl: './trip-create.component.html',\n  styleUrls: ['./trip-create.component.css']\n})\n/**\n * Class for the component of the page of Route Editing\n */\nexport class TripCreateComponent implements OnInit {\n  /**\n   * Options to be used by the Google-Map field.\n   */\n  mapOptions: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  };\n  /**\n   * Options to be used by the Directions-Renderer field.\n   */\n  directionsOptions: google.maps.DirectionsRendererOptions = {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field.\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n  /**\n   * Zoom level for the map to use at the start.\n   */\n  zoom = 11;\n  /**\n   * Coordinates for the map to be centered on.\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * List of markers that represents the stops of the route to edit.\n   */\n  markers: Array = new Array();\n  /**\n   * Holds the result from the call of the Directions API made from the list of markers.\n   */\n  directionsResults$!: Observable;\n\n  /**\n * Id of the route.\n */\n  routeId: string = '';\n  /**\n   * Route to edit.\n   */\n  route!: Route;\n  /**\n   * TransportType for reverse mapping in the html.\n   */\n  TravelDirection = TravelDirection;\n  /**\n   * All the existent stops.\n   */\n  AllStops: Stop[] = [];\n\n  /**\n * All the existent trips.\n */\n  AllTrips: Trip[] = [];\n  /**\n   * All the values of the TransportType enum.\n   */\n  directions: number[] = Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v));\n\n  /**\n   * Form data to be viewed in the page\n   */\n  createRouteForm = this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  });\n\n  /**\n   * Constructor for the component.\n   * Gets the route whose Id matches the one in the URL and passes its info to the form.\n   * Also gets all the existent stops.\n   * @param {ActivatedRoute} actRoute Gives information about the current route.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {StopService} stopService Service that communicates with the server and has various operations about Stops.\n   * @param {FormBuilder} formBuilder Builds form data.\n   * @param {MapDirectionsService} mapDirectionsService Google service of the Directions API.\n   * @param {TripService} tripService Service that communicates with the server and has various operations about Trips.\n   * @param {Router} router Router.\n   * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n   * @param {TranslocoService} translocoService Service that perform the translation of the text.\n   */\n  constructor(private urlRoute: ActivatedRoute, private routeService: RouteService, private stopService: StopService,\n    private formBuilder: FormBuilder, private mapDirectionsService: MapDirectionsService, private tripService: TripService,\n    private router: Router, private stopTimeService: StopTimeService, private translocoService: TranslocoService) { }\n\n  ngOnInit(): void {\n    this.routeId = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.routeService.getRoute(this.routeId)\n      .subscribe((route) => {\n        this.stopTimeService.getStopsOfRoute(route.routeId).subscribe((stops) => {\n          this.route = new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, stops);\n        });\n      });\n\n    this.tripService.getTripsOfRoute(this.routeId).subscribe((trips) => {\n      trips.forEach((trip) => {\n        this.AllTrips!.push(new Trip(trip.tripId, trip.tripHeadsign, trip.routeId, trip.serviceId, trip.direction, trip.shapeId));\n      });\n      \n    });\n\n\n    this.stopService.getStops().subscribe(result => {\n      this.AllStops = result;\n    }, error => console.error(error));\n  }\n\n  /**\n   * Adds a form to the page that lets the user select the details for a stop in the route.\n   */\n  addStop() {\n    const stopForm = this.formBuilder.group({\n      stopId: '',\n      stopTime: ''\n    });\n\n    this.stops.push(stopForm);\n  }\n\n  /**\n   * Removes the form of one of the route stops.\n   * @param {number} stopIndex The form index to delete.\n   */\n  removeStop(stopIndex: number) {\n    this.stops.removeAt(stopIndex);\n    this.updateMap();\n  }\n\n  /**\n   * Gets all the stop forms in the page.\n   */\n  get stops() {\n    return this.createRouteForm.controls[\"stops\"] as FormArray;\n  }\n\n  /**\n   * Casts a AbstractControl form to a FormGroup.\n   */\n  toFormGroup = (form: AbstractControl) => form as FormGroup;\n\n  /**\n   * Updates the map in the page by adding/removing markers and linking them together in one route.\n   */\n  updateMap() {\n    this.addMarkers();\n    this.linkMarkers();\n  }\n\n  /**\n   * Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n   */\n  private addMarkers() {\n    this.markers.splice(0);\n\n    this.createRouteForm.value.stops?.forEach(s => {\n      var stop = (s as formStop);\n      this.AllStops.forEach(compStop => {\n        if (compStop.stopId == stop.stopId) this.markers.push(new google.maps.LatLng(compStop.stopLat, compStop.stopLon));\n      });\n    });\n    this.center = {\n      lat: this.markers[Math.floor(this.markers.length / 2)].lat(),\n      lng: this.markers[Math.floor(this.markers.length / 2)].lng()\n    }\n  }\n\n  /**\n   * Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n   */\n  private linkMarkers() {\n    const request: google.maps.DirectionsRequest = {\n      origin: this.markers[0],\n      destination: this.markers[this.markers.length - 1],\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  /**\n   * Creates a trip object and sends it to the database using the tripService\n   */\n  onSubmit(): void {\n    if (this.createRouteForm.value.stops != null) {\n      if (this.createRouteForm.value.stops.length > 2) {\n        const stops = this.createRouteForm.value.stops as formStop[];\n        if (stops.every(s => s.stopId.length != 0 && s.stopTime.length != 0)) {\n          const tripId = Guid.create().toString();\n          let trip: Trip = new Trip(tripId, this.createRouteForm.controls.tripName.value!, this.routeId,\n            \"1\", Number(this.createRouteForm.controls.tripTransportDirection.value!), \"4560_0_1_a\")\n\n          this.tripService.addTrip(trip).subscribe(() => { }, () => { }, () => {\n            let idx = 1;\n            this.createRouteForm.value.stops!.forEach(s => {\n              var stop = (s as formStop);\n              var date = new Date();\n              date.setUTCHours(Number(stop.stopTime.substring(0, 2)));\n              date.setUTCMinutes(Number(stop.stopTime.substring(3, 5)));\n              let stopTime: StopTime = new StopTime(tripId, date, date, stop.stopId, idx, 0.0);\n              this.stopTimeService.addStopTime(stopTime).subscribe();\n              idx++;\n            });\n            this.router.navigate(['/', 'route-management']);\n          });\n        }\n        else {\n          new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message-empty-stops'), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      } else {\n        new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('login.list.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n      }\n    }\n\n    \n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n/**\n * Interface for the stop form\n */\ninterface formStop {\n  stopId: string,\n  stopTime: string\n}\n\n\n    \n\n    \n        \n  {{ t('title-create') }}\n\n  \n    \n      \n        \n          {{ t('label-name') }}\n          \n        \n        \n          {{ t('label-direction') }}\n          \n            {{ TravelDirection[direction] }}\n          \n        \n      \n      \n        \n        \n        \n      \n    \n    \n    \n      \n        {{ t('schedules' ) }}\n        {{ t('create-stop') }}\n      \n      \n        \n          \n            \n              {{ t('stop') }}\n              \n                {{ stop.stopName }}\n              \n            \n            \n              {{ t('departure') }}\n              \n            \n            \n              delete_forever\n            \n          \n        \n      \n\n      \n        \n          add\n        \n      \n    \n    \n      {{ t('create-button') }}\n      {{ t('cancel') }}\n    \n  \n\n\n    \n\n    \n                \n                    ./trip-create.component.css\n                \n                #route-data {\n  display: flex;\n}\n\n#route-forms {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  margin-right: 50px;\n  justify-content: flex-start;\n}\n\ngoogle-map {\n  width: 730px;\n}\n\n.last-form {\n  padding: 0px;\n}\n\n#schedule-label {\n  display: flex;\n  justify-content: space-between;\n}\n\nmat-divider {\n  margin: 20px 0;\n}\n\n#scheduleTitle {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1%;\n}\n\n.stop-form-row {\n  display: flex;\n  width: 100%;\n}\n\n#add-stop-button {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n}\n\n.stop-name {\n  flex-grow: 1;\n}\n\n.remove-stop-button {\n  align-self: center;\n  margin-bottom: 21.5px;\n}\n\n.button {\n  width: 140px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n#create-stop-button {\n  width: 200px;\n}\n\n#form-buttons {\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title-create\\') }}                              {{ t(\\'label-name\\') }}                                    {{ t(\\'label-direction\\') }}                      {{ TravelDirection[direction] }}                                                                                      {{ t(\\'schedules\\' ) }}        {{ t(\\'create-stop\\') }}                                                        {{ t(\\'stop\\') }}                              {{ stop.stopName }}                                                    {{ t(\\'departure\\') }}                                                    delete_forever                                                            add                            {{ t(\\'create-button\\') }}      {{ t(\\'cancel\\') }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TripCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripEditComponent.html":{"url":"components/TripEditComponent.html","title":"component - TripEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TripEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trip-edit/trip-edit.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trip-edit\n            \n\n            \n                styleUrls\n                ./trip-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./trip-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AllStops\n                            \n                            \n                                center\n                            \n                            \n                                directions\n                            \n                            \n                                directionsOptions\n                            \n                            \n                                directionsResults$\n                            \n                            \n                                editRouteForm\n                            \n                            \n                                mapOptions\n                            \n                            \n                                markerOptions\n                            \n                            \n                                markers\n                            \n                            \n                                    Public\n                                selectedTrip\n                            \n                            \n                                toFormGroup\n                            \n                            \n                                TravelDirection\n                            \n                            \n                                    Public\n                                tripsStopsMap\n                            \n                            \n                                    Public\n                                tripStops\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addMarkers\n                            \n                            \n                                addStop\n                            \n                            \n                                cancel\n                            \n                            \n                                    Private\n                                createWaypoints\n                            \n                            \n                                    Private\n                                linkMarkers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                removeStop\n                            \n                            \n                                updateMap\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stops\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(urlRoute: ActivatedRoute, tripService: TripService, stopTimeService: StopTimeService, formBuilder: FormBuilder, router: Router, mapDirectionsService: MapDirectionsService, stopService: StopService, translocoService: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:100\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the route whose Id matches the one in the URL and passes its info to the form.\nAlso gets all the existent stops.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        urlRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Trips.\n\n                                                        \n                                                \n                                                \n                                                        stopTimeService\n                                                  \n                                                        \n                                                                        StopTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about StopTimes.\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Builds form data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router.\n\n                                                        \n                                                \n                                                \n                                                        mapDirectionsService\n                                                  \n                                                        \n                                                                    MapDirectionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Google service of the Directions API.\n\n                                                        \n                                                \n                                                \n                                                        stopService\n                                                  \n                                                        \n                                                                        StopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Stops.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that perform the translation of the text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:196\n                \n            \n\n\n            \n                \n                    Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addStop\n                        \n                    \n                \n            \n            \n                \naddStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:162\n                \n            \n\n\n            \n                \n                    Adds a form to the page that lets the user select the details for a stop in the route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:300\n                \n            \n\n\n            \n                \n                    Cancels the creation of a new stop. Redirects back to the previous page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createWaypoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWaypoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     google.maps.DirectionsWaypoint[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        linkMarkers\n                        \n                    \n                \n            \n            \n                \n                    \n                    linkMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:214\n                \n            \n\n\n            \n                \n                    Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:244\n                \n            \n\n\n            \n                \n                    Creates a trip object and sends it to the database using the tripService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeStop\n                        \n                    \n                \n            \n            \n                \nremoveStop(stopIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:175\n                \n            \n\n\n            \n                \n                    Removes the form of one of the route stops.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stopIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The form index to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMap\n                        \n                    \n                \n            \n            \n                \nupdateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trip-edit/trip-edit.component.ts:188\n                \n            \n\n\n            \n                \n                    Updates the map in the page by adding/removing markers and linking them together in one route.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AllStops\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stop[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:74\n                        \n                    \n\n            \n                \n                    All the existent stops.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:57\n                        \n                    \n\n            \n                \n                    Coordinates for the map to be centered on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:78\n                        \n                    \n\n            \n                \n                    All the values of the TransportType enum.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.DirectionsRendererOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:42\n                        \n                    \n\n            \n                \n                    Options to be used by the Directions-Renderer field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionsResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:65\n                        \n                    \n\n            \n                \n                    Holds the result from the call of the Directions API made from the list of markers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editRouteForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:83\n                        \n                    \n\n            \n                \n                    Form data to be viewed in the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MapOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:31\n                        \n                    \n\n            \n                \n                    Options to be used by the Google-Map field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     google.maps.MarkerOptions\n\n                    \n                \n                \n                    \n                        Default value : { draggable: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:49\n                        \n                    \n\n            \n                \n                    Options to be used by the Map-Marker field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : new Array()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:61\n                        \n                    \n\n            \n                \n                    List of markers that represents the stops of the route to edit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedTrip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:92\n                        \n                    \n\n            \n                \n                    The trip the user has currently selected.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:183\n                        \n                    \n\n            \n                \n                    Casts a AbstractControl form to a FormGroup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TravelDirection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TravelDirection\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:70\n                        \n                    \n\n            \n                \n                    TransportType for reverse mapping in the html.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tripsStopsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:100\n                        \n                    \n\n            \n                \n                    A map with the all the trips of the route, with a list of their stop times.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tripStops\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StopTime[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:96\n                        \n                    \n\n            \n                \n                    The stops belonging to the current selected trip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 11\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trip-edit/trip-edit.component.ts:53\n                        \n                    \n\n            \n                \n                    Zoom level for the map to use at the start.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stops\n                    \n                \n\n                \n                    \n                        getstops()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/trip-edit/trip-edit.component.ts:155\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Route } from '../../models/route';\nimport { StopTime } from '../../models/stop-time';\nimport { Trip } from '../../models/trip';\nimport { RouteService } from '../../services/route.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport { TripService } from '../../services/trip.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TravelDirection } from '../../enums/travel-direction';\nimport { map, Observable } from 'rxjs';\nimport { Stop } from '../../models/stop';\nimport { MapDirectionsService } from '@angular/google-maps';\nimport { Console } from 'console';\nimport { StopService } from '../../services/stop.service';\nimport Snackbar from 'awesome-snackbar';\nimport { TranslocoService } from '@ngneat/transloco';\n\n\n@Component({\n  selector: 'app-trip-edit',\n  templateUrl: './trip-edit.component.html',\n  styleUrls: ['./trip-edit.component.css']\n})\nexport class TripEditComponent implements OnInit {\n\n  /**\n   * Options to be used by the Google-Map field.\n   */\n  mapOptions: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  };\n  /**\n   * Options to be used by the Directions-Renderer field.\n   */\n  directionsOptions: google.maps.DirectionsRendererOptions = {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field.\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n  /**\n   * Zoom level for the map to use at the start.\n   */\n  zoom = 11;\n  /**\n   * Coordinates for the map to be centered on.\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * List of markers that represents the stops of the route to edit.\n   */\n  markers: Array = new Array();\n  /**\n   * Holds the result from the call of the Directions API made from the list of markers.\n   */\n  directionsResults$!: Observable;\n\n  /**\n   * TransportType for reverse mapping in the html.\n   */\n  TravelDirection = TravelDirection;\n  /**\n   * All the existent stops.\n   */\n  AllStops: Stop[] = [];\n  /**\n   * All the values of the TransportType enum.\n   */\n  directions: number[] = Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v));\n\n  /**\n   * Form data to be viewed in the page\n   */\n  editRouteForm = this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  });\n\n  /**\n   * The trip the user has currently selected.\n   */\n  public selectedTrip!: Trip;\n  /**\n   * The stops belonging to the current selected trip.\n   */\n  public tripStops: StopTime[] = [];\n  /**\n   * A map with the all the trips of the route, with a list of their stop times.\n   */\n  public tripsStopsMap: Map = new Map();\n\n  /**\n * Constructor for the component.\n * Gets the route whose Id matches the one in the URL and passes its info to the form.\n * Also gets all the existent stops.\n * @param {ActivatedRoute} actRoute Gives information about the current route.\n * @param {TripService} tripService Service that communicates with the server and has various operations about Trips.\n * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n * @param {FormBuilder} formBuilder Builds form data. \n * @param {Router} router Router.\n * @param {MapDirectionsService} mapDirectionsService Google service of the Directions API.\n * @param {StopService} stopService Service that communicates with the server and has various operations about Stops.\n * @param {TranslocoService} translocoService Service that perform the translation of the text.\n */\n  constructor(private urlRoute: ActivatedRoute, private tripService: TripService, private stopTimeService: StopTimeService,\n    private formBuilder: FormBuilder, private router: Router, private mapDirectionsService: MapDirectionsService,\n    private stopService: StopService, private translocoService: TranslocoService) { }\n\n  ngOnInit(): void {\n    const id = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.tripService.getTrip(id)\n      .subscribe((trip) => {\n        this.stopTimeService.getStopsOfTrip(trip.tripId).subscribe((stops) => {\n          stops.forEach(stop => {\n            this.tripStops!.push(new StopTime(stop.tripId, stop.arrivalTime, stop.departureTime, stop.stopId, stop.stopSequence, stop.shapeDistTraveled, stop.trip, stop.stop));\n          })\n\n          this.selectedTrip = new Trip(trip.tripId, trip.tripHeadsign, trip.routeId, trip.serviceId, trip.direction, trip.shapeId);\n          this.editRouteForm.controls.tripName.patchValue(this.selectedTrip.tripHeadsign);\n          this.editRouteForm.controls.tripTransportDirection.patchValue(this.selectedTrip.direction);\n          this.editRouteForm.controls.stops.patchValue(this.tripStops!);\n\n\n          this.tripStops!.forEach(stopTime => {\n            const stopForm = this.formBuilder.group({\n              stopId: [stopTime.stopId, Validators.required],\n              departureTime: [stopTime.getHoursAndMinutesString(), Validators.required]\n              });\n            this.stops.push(stopForm);\n          });\n\n          console.log(this.tripStops!);\n          \n        }, (error) => { console.log(error) }, () => {\n          this.stopService.getStops().subscribe(result => {\n            this.AllStops = result;\n            this.updateMap();\n        });\n        });\n\n        \n      });\n  }\n\n  get stops() {\n    return this.editRouteForm.controls[\"stops\"] as FormArray;\n  }\n\n  /**\n * Adds a form to the page that lets the user select the details for a stop in the route.\n */\n  addStop() {\n    const stopForm = this.formBuilder.group({\n      stopId: '',\n      departureTime: ''\n    });\n\n    this.stops.push(stopForm);\n  }\n\n  /**\n   * Removes the form of one of the route stops.\n   * @param {number} stopIndex The form index to delete.\n   */\n  removeStop(stopIndex: number) {\n    this.stops.removeAt(stopIndex);\n    this.updateMap();\n  }\n\n  /**\n   * Casts a AbstractControl form to a FormGroup.\n   */\n  toFormGroup = (form: AbstractControl) => form as FormGroup;\n\n  /**\n   * Updates the map in the page by adding/removing markers and linking them together in one route.\n   */\n  updateMap() {\n    this.addMarkers();\n    this.linkMarkers();\n  }\n\n  /**\n   * Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n   */\n  private addMarkers() {\n    this.markers.splice(0);\n\n    this.editRouteForm.value.stops?.forEach(s => {\n      var stop = (s as formStop);\n      this.AllStops.forEach(compStop => {\n        if (compStop.stopId == stop.stopId) this.markers.push(new google.maps.LatLng(compStop.stopLat, compStop.stopLon));\n      });\n    });\n    this.center = {\n      lat: this.markers[Math.floor(this.markers.length / 2)].lat(),\n      lng: this.markers[Math.floor(this.markers.length / 2)].lng()\n    }\n  }\n\n  /**\n   * Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n   */\n  private linkMarkers() {\n    const request: google.maps.DirectionsRequest = {\n      origin: this.markers[0],\n      waypoints: this.createWaypoints(),\n      destination: this.markers[this.markers.length - 1],\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  private createWaypoints(): google.maps.DirectionsWaypoint[] {\n    var waypoints: google.maps.DirectionsWaypoint[] = [];\n    const MAX_WAYPOINTS: number = 25\n    var addWaypoint: boolean = true;\n    this.tripStops?.slice(1, this.tripStops.length - 1).forEach((stopTime) => {\n      if (waypoints.length  2) {\n        const stops = this.editRouteForm.value.stops as formStop[];\n        if (stops.every(s => s.stopId.length != 0 && s.departureTime.length != 0)) {\n          let trip: Trip = new Trip(this.selectedTrip.tripId, this.editRouteForm.controls.tripName.value!, this.selectedTrip.routeId,\n            this.selectedTrip.serviceId, Number(this.editRouteForm.controls.tripTransportDirection.value!), this.selectedTrip.shapeId)\n\n          this.tripService.editTrip(trip).subscribe();\n\n          let idx = 1;\n          this.editRouteForm.value.stops.forEach(s => {\n            var stop = (s as formStop);\n            var date = new Date();\n            date.setUTCHours(Number(stop.departureTime.substring(0, 2)));\n            date.setUTCMinutes(Number(stop.departureTime.substring(3, 5)));\n            let stopTime: StopTime = new StopTime(trip.tripId, date, date, stop.stopId, idx, 0.0);\n            this.stopTimeService.editStopTime(stopTime.tripId, idx, stopTime).subscribe(() => { }, () => {\n              this.stopTimeService.addStopTime(stopTime).subscribe();\n            });\n            idx++;\n          });\n\n          this.router.navigate(['/', 'route-management']);\n        } else {\n          new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message-empty-stops'), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      } else {\n        new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('login.list.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n      }\n    }\n     \n\n\n\n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n/**\n * Interface for the stop form\n */\ninterface formStop {\n  stopId: string,\n  departureTime: string\n}\n\n\n\n    \n\n    \n        \n  {{ t('title-edit') }}\n\n  \n    \n      \n        \n          {{ t('label-name') }}\n          \n        \n        \n          {{ t('label-direction') }}\n          \n            {{ TravelDirection[direction] }}\n          \n        \n      \n      \n        \n        \n        \n      \n    \n    \n    \n      \n        {{ t('schedules' ) }}\n        {{ t('create-stop') }}\n      \n      \n        \n          \n            \n              {{ t('stop') }}\n              \n                {{ stop.stopName }}\n              \n            \n            \n              {{ t('departure') }}\n              \n            \n            \n              delete_forever\n            \n          \n        \n\n      \n\n      \n        \n          add\n        \n      \n    \n    \n      {{ t('update-button') }}\n      {{ t('cancel') }}\n    \n  \n\n\n    \n\n    \n                \n                    ./trip-edit.component.css\n                \n                #route-data {\n  display: flex;\n}\n\n#route-forms {\n  display: flex;\n  flex-flow: column;\n  width: 40%;\n  margin-right: 50px;\n  justify-content: flex-start;\n}\n\ngoogle-map {\n  width: 730px;\n}\n\n.last-form {\n  padding: 0px;\n}\n\n#scheduleTitle {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1%;\n}\n\nmat-divider {\n  margin: 20px 0;\n}\n\n#scheduleTitle {\n  display: flex;\n  justify-content: space-between;\n}\n\n.stop-form-row {\n  display: flex;\n  width: 100%;\n}\n\n#add-stop-button {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n}\n\n.stop-name {\n  flex-grow: 1;\n}\n\n.remove-stop-button {\n  align-self: center;\n  margin-bottom: 21.5px;\n}\n\n.button {\n  width: 140px;\n  display: flex;\n  height: 40px;\n  border-radius: 50px;\n  background: #3BE2AB;\n  box-shadow: 0.2em 0.2em 0.2em #cfcccc;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n}\n\n#create-stop-button {\n  width: 200px;\n}\n\n#form-buttons {\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title-edit\\') }}                              {{ t(\\'label-name\\') }}                                    {{ t(\\'label-direction\\') }}                      {{ TravelDirection[direction] }}                                                                                      {{ t(\\'schedules\\' ) }}        {{ t(\\'create-stop\\') }}                                                        {{ t(\\'stop\\') }}                              {{ stop.stopName }}                                                    {{ t(\\'departure\\') }}                                                    delete_forever                                                            add                            {{ t(\\'update-button\\') }}      {{ t(\\'cancel\\') }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TripEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TripService.html":{"url":"injectables/TripService.html","title":"injectable - TripService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TripService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/trip.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTrip\n                            \n                            \n                                editTrip\n                            \n                            \n                                getTrip\n                            \n                            \n                                getTripsOfRoute\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/trip.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTrip\n                        \n                    \n                \n            \n            \n                \naddTrip(trip: Trip)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/trip.service.ts:46\n                \n            \n\n\n            \n                \n                    Adds a trip to the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    trip\n                                    \n                                                Trip\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        trip to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The created trip.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTrip\n                        \n                    \n                \n            \n            \n                \neditTrip(trip: Trip)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/trip.service.ts:57\n                \n            \n\n\n            \n                \n                    Sends a trip to the database to update.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    trip\n                                    \n                                                Trip\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The trip to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The edited trip\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTrip\n                        \n                    \n                \n            \n            \n                \ngetTrip(tripId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/trip.service.ts:35\n                \n            \n\n\n            \n                \n                    Gets a specific trip from the database.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tripId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id to search the trip for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A trip obtained from the database with a specific id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTripsOfRoute\n                        \n                    \n                \n            \n            \n                \ngetTripsOfRoute(routeId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/trip.service.ts:24\n                \n            \n\n\n            \n                \n                    Method to get all the trips a route makes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/trip.service.ts:68\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Trip } from '../models/trip';\n\n@Injectable({\n  providedIn: 'root'\n})\n  /**\n   * Service that communicates with the server and has various operations about Trips.\n   */\nexport class TripService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient,) { }\n\n  /**\n   * Method to get all the trips a route makes.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  getTripsOfRoute(routeId: string): Observable {\n    //return this.http.get(`api/RoutesApi/StopTimes/${routeId}`).pipe(catchError(this.handleError));\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/TripsApi/Route/${routeId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n * Gets a specific trip from the database.\n * @param {string} tripId Id to search the trip for.\n * @returns A trip obtained from the database with a specific id.\n */\n  getTrip(tripId: string): Observable {\n    //return this.http.get(`api/RoutesApi/StopTimes/${routeId}`).pipe(catchError(this.handleError));\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/TripsApi/${tripId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n * Adds a trip to the database.\n * @param {Trip} trip trip to add.\n * @returns The created trip.\n */\n  addTrip(trip: Trip): Observable {\n    //return this.http.post(`api/RoutesApi`, route)\n    return this.http.post(`https://traveller-server.azurewebsites.net/api/TripsApi`, trip)\n      .pipe(catchError(this.handleError));\n  }\n\n /**\n * Sends a trip to the database to update.\n * @param {Trip} trip The trip to update.\n * @returns The edited trip\n */\n  editTrip(trip: Trip): Observable {\n    //return this.http.put(`api/RoutesApi/${route.routeId}`, route)\n    return this.http.put(`https://traveller-server.azurewebsites.net/api/TripsApi/${trip.tripId}`, trip)\n      .pipe(catchError(this.handleError));\n  }\n  \n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that represents a User.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creationDate\n                            \n                            \n                                email\n                            \n                            \n                                formatedDate\n                            \n                            \n                                id\n                            \n                            \n                                profileImage\n                            \n                            \n                                rating\n                            \n                            \n                                userName\n                            \n                            \n                                userRank\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, userRank: string, userName: string, rating: number, creationDate: Date, email: string, profileImage: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRank\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rating\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileImage\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:26\n                        \n                    \n\n            \n                \n                    Date of creation of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:30\n                        \n                    \n\n            \n                \n                    Email of creation of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:34\n                        \n                    \n\n            \n                \n                    Formated date of the creationDate of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:10\n                        \n                    \n\n            \n                \n                    Id of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:38\n                        \n                    \n\n            \n                \n                    URL in which the Profile Image is stored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:22\n                        \n                    \n\n            \n                \n                    Rating of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:18\n                        \n                    \n\n            \n                \n                    Name of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRank\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:14\n                        \n                    \n\n            \n                \n                    Rank(privilege) of the user.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRank } from \"../enums/user-rank\";\n\n/**\n * Class that represents a User.\n */\nexport class User {\n  /**\n   * Id of the user.\n   */\n  id: string;\n  /**\n   * Rank(privilege) of the user.\n   */\n  userRank: string;\n  /**\n   * Name of the user.\n   */\n  userName: string;\n  /**\n   * Rating of the user.\n   */\n  rating: number;\n  /**\n   * Date of creation of the user.\n   */\n  creationDate: Date;\n  /**\n   * Email of creation of the user.\n   */\n  email: string;\n  /**\n   * Formated date of the creationDate of the user\n   */\n  formatedDate: string;\n  /**\n   * URL in which the Profile Image is stored.\n   */\n  profileImage: string;\n\n  /**\n   * Constructor for the class.\n   */\n  constructor(id: string, userRank: string, userName: string, rating: number, creationDate: Date, email: string, profileImage: string) {\n    this.id = id;\n    this.userRank = UserRank[Number(userRank)];\n    this.userName = userName;\n    this.rating = rating;\n    this.creationDate = new Date(creationDate);\n    this.email = email;\n    this.formatedDate = this.creationDate.toLocaleDateString('pt-PT');\n    this.profileImage = profileImage;\n  } \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDetailsComponent.html":{"url":"components/UserDetailsComponent.html","title":"component - UserDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-details/user-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-details\n            \n\n            \n                styleUrls\n                ./user-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                banned\n                            \n                            \n                                    Public\n                                banReason\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                mostUsedTransportType\n                            \n                            \n                                    Public\n                                suspendDate\n                            \n                            \n                                    Public\n                                suspendReason\n                            \n                            \n                                    Public\n                                suspensions\n                            \n                            \n                                    Public\n                                    Optional\n                                timeSpentInTransport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateAfterTodayValidator\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                getSuspensions\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserMostUsedTransport\n                            \n                            \n                                getUserTimeSpent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetForms\n                            \n                            \n                                suspendUser\n                            \n                            \n                                unbanUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UserService, suspensionService: SuspensionService, translocoService: TranslocoService, statisticsService: StatisticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user-details/user-details.component.ts:53\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gives information about the current route.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Users.\n\n                                                        \n                                                \n                                                \n                                                        suspensionService\n                                                  \n                                                        \n                                                                        SuspensionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Suspensions.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        statisticsService\n                                                  \n                                                        \n                                                                        StatisticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dateAfterTodayValidator\n                        \n                    \n                \n            \n            \n                \ndateAfterTodayValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:199\n                \n            \n\n\n            \n                \n                    Custom validator created for the input suspension date.\nChecking if the date inserted by the user is before today or not.\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:152\n                \n            \n\n\n            \n                \n                    Returns the possible error messages related to the user input while trying to suspend a user, specifically the date input.\nChecking if either there isn't a valid inserted or if the inserted date is before today\n\n\n                    \n                        Returns :     \"no-date\" | \"before-date\" | \"\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSuspensions\n                        \n                    \n                \n            \n            \n                \ngetSuspensions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:76\n                \n            \n\n\n            \n                \n                    Gets the suspensions of the user whose Id is in the url.\nSorts the suspensions in descending order and checks if any suspension is permanent.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:66\n                \n            \n\n\n            \n                \n                    Gets the user through the id in the url.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserMostUsedTransport\n                        \n                    \n                \n            \n            \n                \ngetUserMostUsedTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:164\n                \n            \n\n\n            \n                \n                    Gets the user most used transport type.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserTimeSpent\n                        \n                    \n                \n            \n            \n                \ngetUserTimeSpent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:174\n                \n            \n\n\n            \n                \n                    Gets the user total time spent in transportation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForms\n                        \n                    \n                \n            \n            \n                \nresetForms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:183\n                \n            \n\n\n            \n                \n                    Resets the form data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suspendUser\n                        \n                    \n                \n            \n            \n                \nsuspendUser(permanent: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:97\n                \n            \n\n\n            \n                \n                    Suspends a user for a interval of time obtained through the form.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    permanent\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether or not the suspension is permanent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unbanUser\n                        \n                    \n                \n            \n            \n                \nunbanUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-details/user-details.component.ts:132\n                \n            \n\n\n            \n                \n                    Function to unban an user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        banned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:33\n                        \n                    \n\n            \n                \n                    Whether the user is banned.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        banReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:37\n                        \n                    \n\n            \n                \n                    Reason for the user ban.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:25\n                        \n                    \n\n            \n                \n                    Current user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mostUsedTransportType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:49\n                        \n                    \n\n            \n                \n                    Most used transport type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        suspendDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, this.dateAfterTodayValidator()])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:41\n                        \n                    \n\n            \n                \n                    Date until the suspension of the user is over.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        suspendReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:45\n                        \n                    \n\n            \n                \n                    Reason for the suspension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        suspensions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Suspension[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:29\n                        \n                    \n\n            \n                \n                    All the suspensions of the current user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        timeSpentInTransport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-details/user-details.component.ts:53\n                        \n                    \n\n            \n                \n                    Time spent in transport.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { AbstractControl, FormControl, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslocoService } from '@ngneat/transloco';\nimport Snackbar from 'awesome-snackbar';\nimport { Suspension } from '../../models/suspension';\nimport { SuspensionService } from '../../services/suspension.service';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { StatisticsService } from '../../services/statistics.service'\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\n\n/**\n * Class for the component of the page of viewing User details.\n */\nexport class UserDetailsComponent implements OnInit {\n  /**\n   * Current user.\n   */\n  public currentUser!: User;\n  /**\n   * All the suspensions of the current user.\n   */\n  public suspensions!: Suspension[];\n  /**\n   * Whether the user is banned.\n   */\n  public banned!: boolean;\n  /**\n   * Reason for the user ban.\n   */\n  public banReason!: string;\n  /**\n   * Date until the suspension of the user is over.\n   */\n  public suspendDate = new FormControl('', [Validators.required, this.dateAfterTodayValidator()]);\n  /**\n   * Reason for the suspension.\n   */\n  public suspendReason = \"\";\n  /**\n   * Most used transport type.\n   */\n  public mostUsedTransportType!: string;\n  /**\n   * Time spent in transport.\n   */\n  public timeSpentInTransport?: string;\n  /**\n   * Constructor for the component.\n   * @param {ActivatedRoute} route Gives information about the current route.\n   * @param {UserService} userService Service that communicates with the server and has various operations about Users.\n   * @param {SuspensionService} suspensionService Service that communicates with the server and has various operations about Suspensions.\n   */\n  constructor(private route: ActivatedRoute, private userService: UserService, private suspensionService: SuspensionService, private translocoService: TranslocoService, private statisticsService: StatisticsService) {\n  }\n\n  /**\n   * Gets the user through the id in the url.\n   */\n  getUser() {\n    this.userService.getUser(this.route.snapshot.params.id).subscribe(result => {\n      this.currentUser = result;\n    }, error => console.error(error))\n  }\n\n  /**\n   * Gets the suspensions of the user whose Id is in the url.\n   * Sorts the suspensions in descending order and checks if any suspension is permanent.\n   */\n  getSuspensions() {\n    this.suspensionService.getSuspensionsOfUser(this.route.snapshot.params.id).subscribe(result => {\n      this.suspensions = result;\n      this.suspensions.sort((a: Suspension, b: Suspension) => {\n        if (a.startDate > b.startDate) {\n          return 1;\n        } else return 0;\n      })\n      this.suspensions.forEach((suspension) => {\n        if (suspension.permanent == true) {\n          this.banned = true;\n          this.banReason = suspension.reason;\n        }\n      })\n    }, error => console.error(error))\n  }\n\n  /**\n   * Suspends a user for a interval of time obtained through the form.\n   * @param {boolean} permanent Whether or not the suspension is permanent.\n   */\n  suspendUser(permanent: boolean) {\n    if (!permanent) {\n      this.suspensionService.suspendUser(this.currentUser.id, new Date(), new Date(this.suspendDate.value as string), this.suspendReason, permanent).subscribe(res => {\n        new Snackbar(this.translocoService.translate('user-details.user-suspended'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('user-details.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n            }\n          });\n        this.resetForms();\n        this.ngOnInit();\n      })\n    } else {\n      this.suspensionService.suspendUser(this.currentUser.id, new Date(), new Date(\"2099-01-01\"), this.suspendReason, permanent).subscribe(res => {\n        new Snackbar(this.translocoService.translate('user-details.user-banned'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('user-details.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n        this.resetForms();\n        this.ngOnInit();\n      })\n    }\n  }\n\n  /**\n   * Function to unban an user.\n   */\n  unbanUser() {\n    this.suspensionService.unbanUser(this.currentUser.id).subscribe(res => {\n      this.resetForms();\n      this.ngOnInit();\n      new Snackbar(this.translocoService.translate('user-details.user-unbanned'), {\n        position: 'bottom-center',\n        actionText: this.translocoService.translate('user-details.hide'),\n        style: {\n          container: [\n            ['background-color', '#003F91']\n          ]\n        }\n      });\n    })\n  }\n\n  /**\n   * Returns the possible error messages related to the user input while trying to suspend a user, specifically the date input.\n   * Checking if either there isn't a valid inserted or if the inserted date is before today\n   * */\n  getErrorMessage() {\n    if (this.suspendDate.value as string == \"\") {\n      return 'no-date';\n    } else if (new Date(this.suspendDate.value as string)  {\n      this.mostUsedTransportType = data.mostUsedTransport;\n    });\n  }\n\n\n  /**\n   * Gets the user total time spent in transportation.\n   */\n  getUserTimeSpent() {\n    this.statisticsService.getUserTimeSpent(this.route.snapshot.params.id).subscribe(data => {\n      this.timeSpentInTransport = data.timeSpent;\n    });\n  }\n\n  /**\n   * Resets the form data.\n   */\n  resetForms() {\n    this.suspendReason = \"\";\n    this.suspendDate.reset();\n  }\n\n  ngOnInit(): void {\n    this.getUser();\n    this.getSuspensions();\n    this.getUserMostUsedTransport();\n    this.getUserTimeSpent();\n  }\n\n  /**\n   * Custom validator created for the input suspension date.\n   * Checking if the date inserted by the user is before today or not.\n   * */\n  dateAfterTodayValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const value = new Date(control.value as string);\n      if (!value) {\n        return null;\n      }\n      const beforeToday = value \n    \n\n    \n        \n  \n\n\n  \n    {{ currentUser.userName }}\n\n    \n      \n        \n        {{ currentUser.userName }}\n         {{t('username')}} \n      \n      \n        \n          \n            \n           \n          \n            \n          \n          \n        \n          \n            \n              {{t('email')}} - {{currentUser.email}}\n              \n                info\n              \n            \n            \n              {{t('rating')}} - {{ currentUser.rating }}\n              \n                info\n              \n            \n            \n              {{t('account-creation-date')}} - {{currentUser.creationDate  | date: 'dd/MM/yyyy'}}\n              \n                info\n              \n            \n            \n              {{t('mostUsedTransport')}} - {{mostUsedTransportType}}\n              \n                info\n              \n            \n            \n              {{t('timeSpend')}} - {{timeSpentInTransport}}\n              \n                info\n              \n            \n            \n              \n                {{t('user-perma-banned')}} - {{banReason}}\n              \n              \n                \n                  {{t('user-no-suspensions')}}\n                \n                 0\">\n                  {{t('list-suspensions')}}\n                  \n                    \n                      {{t('since')}} {{suspension.startDate | date: 'dd/MM/yyyy, HH:mm'}}  {{t('until')}} {{suspension.endDate | date: 'dd/MM/yyyy, HH:mm'}} - {{suspension.reason}}\n                    \n                  \n                \n              \n              \n                info\n              \n            \n          \n        \n      \n        \n          \n            \n              info\n            \n             {{t('ban-button')}}\n          \n          \n            \n              \n                info\n              \n              {{t('suspend-button')}}\n            \n            \n              {{t('suspension-end')}}\n              \n              \n                close\n              \n              {{t(getErrorMessage())}}\n              {{t('hint-date')}}\n            \n            \n              {{t('reason')}}\n              \n              \n                close\n              \n              {{t('hint-reason')}}\n            \n          \n        \n        \n          \n            \n              info\n            \n             {{t('unban-button')}}\n          \n        \n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./user-details.component.css\n                \n                mat-spinner {\n  width: 100px;\n  height: 100px;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n}\n\n.mat-form-field-label {\n  white-space: normal;\n}\n\ntextarea.mat-input-element {\n  padding: 0px 0;\n  margin: 5px 0;\n}\n\n.mat-input-placeholder {\n  white-space: normal;\n}\n\nmat-card-actions {\n    margin-left: 4%;\n}\n\nmat-card-content {\n  display: flex;\n}\n\n.left-card-section {\n  min-width: 50%;\n  float: left;\n  border-right: 3px solid;\n}\n\n\n.profileImage {\n  margin-left: 10%;\n  max-width: 35%;\n  height: auto;\n}\n\n.right-card-section {\n  display: flex;\n  margin-left: 4%;\n  min-width: 75%;\n  justify-content: space-around;\n  flex-direction: column;\n}\n\n.ban-button {\n    background-color: lightcoral;\n}\n\n.unban-button {\n    background-color: lightgreen;\n}\n\nmat-form-field {\n    margin-right: 3%;\n    margin-left: 2%;\n}\n\n.message-container {\n    display: flex;\n    align-items: center;\n    margin: 5px;\n}\n\n.icon-right-side {\n    margin-left: 2%;\n}\n\n.time-input {\n    width: 18%;\n}\n\n.reason-input {\n  width: 20%;\n}\n\n.suspend-button {\n    margin-bottom: 3%;\n}\n\n.suspend-button .mat-button {\n    background-color: lightsalmon;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n  /*change color of label*/\n  color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /*change color of underline*/\n  background-color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /*change color of underline when focused*/\n  background-color: #003F91 !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ currentUser.userName }}                          {{ currentUser.userName }}         {{t(\\'username\\')}}                                                                                                                                            {{t(\\'email\\')}} - {{currentUser.email}}                              info                                                    {{t(\\'rating\\')}} - {{ currentUser.rating }}                              info                                                    {{t(\\'account-creation-date\\')}} - {{currentUser.creationDate  | date: \\'dd/MM/yyyy\\'}}                              info                                                    {{t(\\'mostUsedTransport\\')}} - {{mostUsedTransportType}}                              info                                                    {{t(\\'timeSpend\\')}} - {{timeSpentInTransport}}                              info                                                                    {{t(\\'user-perma-banned\\')}} - {{banReason}}                                                              {{t(\\'user-no-suspensions\\')}}                                 0\">                  {{t(\\'list-suspensions\\')}}                                                            {{t(\\'since\\')}} {{suspension.startDate | date: \\'dd/MM/yyyy, HH:mm\\'}}  {{t(\\'until\\')}} {{suspension.endDate | date: \\'dd/MM/yyyy, HH:mm\\'}} - {{suspension.reason}}                                                                                                  info                                                                                              info                         {{t(\\'ban-button\\')}}                                                              info                            {{t(\\'suspend-button\\')}}                                      {{t(\\'suspension-end\\')}}                                            close                            {{t(getErrorMessage())}}              {{t(\\'hint-date\\')}}                                      {{t(\\'reason\\')}}                                            close                            {{t(\\'hint-reason\\')}}                                                                          info                         {{t(\\'unban-button\\')}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForAuthentication.html":{"url":"interfaces/UserForAuthentication.html","title":"interface - UserForAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserForAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/login/login.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TranslocoService } from '@ngneat/transloco';\nimport Snackbar from 'awesome-snackbar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n/**\n* Class for the component of the page of viewing Login Page.\n*/\nexport class LoginComponent implements OnInit {\n  /**\n   * Url to navigate to the statistics page.\n   */\n  private returnUrl!: string;\n  /*\n   * Form to have the values of the inputs.\n   */\n  loginForm!: FormGroup;\n  /*\n   * Variable used to give feedback to the user if the page is loading or not.\n   */\n  isLoading!: boolean;\n  /**\n   * All the available languages of the application.\n   */\n  private availableLangs: string[] | { id: string, label: string }[];\n  /**\n   * Current active language.\n   */\n  private activeLang: string;\n\n  /**\n   * Constructor for the component.\n   * \n   * @param authService Authentication service that comunicates with the server to validate the inputs of the user.\n   * @param router Redirect the current link after the login succeed.\n   * @param route Gives information about the current route.\n   * @param translocoService Service that perform the translation of the text.\n   */\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute, private translocoService: TranslocoService)\n  {\n    this.availableLangs = this.translocoService.getAvailableLangs();\n    this.activeLang = this.translocoService.getActiveLang();\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl(null, [Validators.required]),\n    })\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  /**\n   * Function that will be executed when the login button\n   * is pressed which serves to send the data to the authentication\n   * service if they are correct login was done correctly.\n   * \n   * @param loginForm FormGroup to obtain the values of the inputs\n   */\n  loginCredentials(loginForm: FormGroup) {\n    const login = loginForm.value;\n\n    const userForAuth: UserForAuthentication = {\n      email: login.email,\n      password: login.password\n    }\n\n    this.authService.loginUser(userForAuth)\n      .subscribe({\n        next: (res: AuthResponse) => {\n          localStorage.setItem(\"token\", res.token);\n          localStorage.setItem(\"userEmail\", login.email);\n          this.authService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n          this.isLoading = true;\n          this.router.navigate(['/statistics']);\n        },\n        error: (err: HttpErrorResponse) => {\n          this.isLoading = false;\n          new Snackbar(this.translocoService.translate('login.list.' + err.message), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      })\n  }\n\n  /**\n * Changes the active language.\n * @param {string} lang id of language to change to.\n */\n  changeLang(lang: string) {\n    this.translocoService.setActiveLang(lang);\n    this.activeLang = lang;\n  }\n}\n\nexport interface UserForAuthentication {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  isAuthSuccessful: boolean;\n  errorMessage: string;\n  token: string;\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUserFromEmail\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient that can send Http requests, used to communicate with the server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n                    Gets a specific user from the database through their Id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id to search for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        A specific user from the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFromEmail\n                        \n                    \n                \n            \n            \n                \ngetUserFromEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:43\n                \n            \n\n\n            \n                \n                    Gets all users from the database.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        All users from the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:54\n                \n            \n\n\n            \n                \n                    Handles the error if the HttpRequest fails.\nPrints the error to the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to handle.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { User } from '../models/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n  /**\n   * Service that communicates with the server and has various operations about Users.\n   */\nexport class UserService {\n\n  /**\n   * Constructor for the class.\n   * @param {HttpClient} http HttpClient that can send Http requests, used to communicate with the server.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Gets a specific user from the database through their Id.\n   * @param {string} userId The id to search for.\n   * @returns A specific user from the database.\n   */\n  getUser(userId: string): Observable {\n    //return this.http.get(`api/UserApi/${userId}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/UserApi/${userId}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  getUserFromEmail(email: string): Observable {\n    //return this.http.get(`api/UserApi/email/${email}`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/UserApi/email/${email}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n * Gets all users from the database.\n * @returns All users from the database.\n */\n  getUsers(): Observable {\n    //return this.http.get(`api/UserApi`)\n    return this.http.get(`https://traveller-server.azurewebsites.net/api/UserApi`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Handles the error if the HttpRequest fails.\n   * Prints the error to the console.\n   * @param {HttpErrorResponse} error Error to handle.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersManagementComponent.html":{"url":"components/UsersManagementComponent.html","title":"component - UsersManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/users-management/users-management.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-management\n            \n\n            \n                styleUrls\n                ./users-management.component.css\n            \n\n\n\n            \n                templateUrl\n                ./users-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                banned\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                selection\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                banUsers\n                            \n                            \n                                getUsersInfo\n                            \n                            \n                                getUsersSuspensionPermanent\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleAllRows\n                            \n                            \n                                unbanUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, suspensionService: SuspensionService, translocoService: TranslocoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/users-management/users-management.component.ts:43\n                            \n                        \n\n                \n                    \n                            Constructor for the component.\nGets the users in the system and add them to the \"users\" through the function getUsersInfo().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and get all users and informations.\n\n                                                        \n                                                \n                                                \n                                                        suspensionService\n                                                  \n                                                        \n                                                                        SuspensionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that communicates with the server and has various operations about Suspensions.\n\n                                                        \n                                                \n                                                \n                                                        translocoService\n                                                  \n                                                        \n                                                                    TranslocoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to perform the translation on the snackbar text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:161\n                \n            \n\n\n            \n                \n                    Aplies a filter to the list of existing routes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parameter to filter the list for.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        banUsers\n                        \n                    \n                \n            \n            \n                \nbanUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:119\n                \n            \n\n\n            \n                \n                    Ban all the checked users.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersInfo\n                        \n                    \n                \n            \n            \n                \ngetUsersInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:104\n                \n            \n\n\n            \n                \n                    Function used to get the users in the system and add them to the \"users\" attribute.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersSuspensionPermanent\n                        \n                    \n                \n            \n            \n                \ngetUsersSuspensionPermanent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:85\n                \n            \n\n\n            \n                \n                    Function used to verify if an user is banned permant\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:65\n                \n            \n\n\n            \n                \n                     Whether the number of selected elements matches the total number of rows.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:58\n                \n            \n\n\n            \n                \n                    Component inicializer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAllRows\n                        \n                    \n                \n            \n            \n                \ntoggleAllRows()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:74\n                \n            \n\n\n            \n                \n                     Selects all rows if they are not all selected; otherwise clear selection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unbanUser\n                        \n                    \n                \n            \n            \n                \nunbanUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-management/users-management.component.ts:141\n                \n            \n\n\n            \n                \n                    Unban an user account with a button.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the user account who is banned.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        banned\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:31\n                        \n                    \n\n            \n                \n                    Mapping the banned users in the system.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:39\n                        \n                    \n\n            \n                \n                    The data source used in the users management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['select', 'creation-date', 'user-name', 'user-rating', 'user-rank', 'user-details']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:35\n                        \n                    \n\n            \n                \n                    The columns to be displayed in the users management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:23\n                        \n                    \n\n            \n                \n                    The paginator used in the users management table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:43\n                        \n                    \n\n            \n                \n                    Holds the routes selected via checkbox.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-management/users-management.component.ts:27\n                        \n                    \n\n            \n                \n                    All the existent users.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { SuspensionService } from '../../services/suspension.service';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport Snackbar from 'awesome-snackbar';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-users-management',\n  templateUrl: './users-management.component.html',\n  styleUrls: ['./users-management.component.css']\n})\n/**\n* Class for the component of the page of Users Management\n*/\nexport class UsersManagementComponent implements OnInit {\n  /**\n   * The paginator used in the users management table.\n   */\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  /**\n   * All the existent users.\n   */\n  public users: User[] = [];\n  /**\n   * Mapping the banned users in the system.\n   */\n  public banned: Map = new Map();\n  /**\n   * The columns to be displayed in the users management table.\n   */\n  displayedColumns: string[] = ['select', 'creation-date', 'user-name', 'user-rating', 'user-rank', 'user-details'];\n  /**\n   * The data source used in the users management table.\n   */\n  dataSource!: MatTableDataSource\n  /**\n   * Holds the routes selected via checkbox.\n   */\n  selection = new SelectionModel(true, []);\n\n\n/**\n * Constructor for the component.\n * Gets the users in the system and add them to the \"users\" through the function getUsersInfo().\n * @param userService Service that communicates with the server and get all users and informations.\n * @param suspensionService Service that communicates with the server and has various operations about Suspensions.\n * @param translocoService Service to perform the translation on the snackbar text.\n */\n  constructor(private userService: UserService, private suspensionService: SuspensionService, private translocoService: TranslocoService) { }\n\n  /**\n   * Component inicializer.\n   */\n  ngOnInit(): void {\n    this.getUsersInfo();\n  }\n\n  /**\n   *  Whether the number of selected elements matches the total number of rows.\n   */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /**\n   *  Selects all rows if they are not all selected; otherwise clear selection.\n   */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /**\n   * Function used to verify if an user is banned permant\n   */\n  getUsersSuspensionPermanent() {\n    this.users.forEach((user) => {\n      this.suspensionService.getSuspensionsOfUser(user.id).subscribe(res => {\n        this.banned.set(user.id, false);\n        res.forEach((suspension) => {\n          if (suspension.permanent) {\n            this.banned.set(user.id, true);\n          }\n        });\n        if (user.userRank.toLowerCase() == 'admin') {\n          this.banned.set(user.id, true);\n        };\n      })\n    })\n  }\n\n  /**\n   * Function used to get the users in the system and add them to the \"users\" attribute.\n   */\n  getUsersInfo() {\n    this.users = [];\n    this.userService.getUsers().subscribe((usr) => {\n      usr.forEach((user) => {\n        this.users.push(new User(user.id, user.userRank, user.userName, user.rating, user.creationDate, user.email, \"null\"));\n      });\n      this.getUsersSuspensionPermanent();\n      this.dataSource = new MatTableDataSource(this.users);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  /**\n  * Ban all the checked users.\n  */\n  banUsers() {\n    this.selection.selected.forEach((user) => {\n      var userToBanId = user.id;\n      this.suspensionService.suspendUser(userToBanId, new Date(), new Date(\"2099-01-01\"), \"\", true).subscribe(res => {\n        new Snackbar(this.translocoService.translate('user-details.user-banned'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('user-details.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n        this.getUsersSuspensionPermanent();\n      })\n    });\n  }\n\n  /**\n   * Unban an user account with a button.\n   * @param userId Id of the user account who is banned.\n   */\n  unbanUser(userId: string) {\n    console.log(userId);\n    this.suspensionService.unbanUser(userId).subscribe(res => {\n      new Snackbar(this.translocoService.translate('user-details.user-unbanned'), {\n        position: 'bottom-center',\n        actionText: this.translocoService.translate('user-details.hide'),\n        style: {\n          container: [\n            ['background-color', '#003F91']\n          ]\n        }\n      });\n      this.getUsersSuspensionPermanent();\n    })\n  }\n\n  /**\n   * Aplies a filter to the list of existing routes.\n   * @param {Event} event The parameter to filter the list for.\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n\n    \n\n    \n        \n  {{ t('title') }}\n\n  \n    \n      {{ t('ban') }}\n    \n  \n  \n    {{ t('filter') }}\n    \n  \n\n  \n    \n    \n      \n        \n        \n      \n      \n        \n          \n          \n        \n        \n           {{t('unban-button')}} \n        \n        \n        \n      \n    \n\n    \n    \n      {{ t('user-creationDate') }}\n       {{ user.formatedDate}} \n    \n\n    \n    \n      {{ t('user-userName') }}\n      {{ user.userName }} \n    \n\n    \n    \n      {{ t('user-rating') }}\n       {{ user.rating }} \n    \n\n    \n    \n      {{ t('user-userRank') }}\n       {{ user.userRank }} \n    \n\n    \n    \n      {{ t('user-details') }}\n       {{ t('user-details') }} \n    \n\n    \n    \n\n    \n    \n      No data matching the filter \"{{input.value}}\"\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./users-management.component.css\n                \n                .unban-button {\n  background-color: lightgreen;\n}\n\n.ban-button {\n  background-color: lightcoral;\n  width: 100px;\n  height: 45px;\n}\n\n#management-buttons {\n  display: flex;\n  gap: 20px;\n}\n\n/deep/ .mat-tooltip {\n  font-size: 14px;\n}\n\ntable {\n  width: 100%;\n}\n\n#filter {\n  width: 100%;\n  margin-top: 15px;\n}\n\n.link {\n  color: dodgerblue;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n  /*change color of label*/\n  color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /*change color of underline*/\n  background-color: #003F91 !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /*change color of underline when focused*/\n  background-color: #003F91 !important;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ t(\\'title\\') }}            {{ t(\\'ban\\') }}            {{ t(\\'filter\\') }}                                                                                                         {{t(\\'unban-button\\')}}                                                 {{ t(\\'user-creationDate\\') }}       {{ user.formatedDate}}                   {{ t(\\'user-userName\\') }}      {{ user.userName }}                   {{ t(\\'user-rating\\') }}       {{ user.rating }}                   {{ t(\\'user-userRank\\') }}       {{ user.userRank }}                   {{ t(\\'user-details\\') }}       {{ t(\\'user-details\\') }}                           No data matching the filter \"{{input.value}}\"        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'RouteCreateComponent', 'selector': 'app-route-create'},{'name': 'RouteDetailsComponent', 'selector': 'app-route-details'},{'name': 'RouteEditComponent', 'selector': 'app-route-edit'},{'name': 'RouteManagementComponent', 'selector': 'app-route-management'},{'name': 'StatisticsComponent', 'selector': 'app-statistics'},{'name': 'StopCreateComponent', 'selector': 'app-stop-create'},{'name': 'TripCreateComponent', 'selector': 'app-trip-create'},{'name': 'TripEditComponent', 'selector': 'app-trip-edit'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'},{'name': 'UsersManagementComponent', 'selector': 'app-users-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            interface\n            UserForAuthentication\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/nav-menu/nav-menu.component.ts\n            \n            component\n            NavMenuComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/components/route-create/route-create.component.ts\n            \n            component\n            RouteCreateComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/components/route-details/route-details.component.ts\n            \n            component\n            RouteDetailsComponent\n            \n                75 %\n                (15/20)\n            \n        \n        \n            \n                \n                src/app/components/route-edit/route-edit.component.ts\n            \n            component\n            RouteEditComponent\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/components/route-management/route-management.component.ts\n            \n            component\n            RouteManagementComponent\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/components/statistics/statistics.component.ts\n            \n            component\n            StatisticsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/components/statistics/statistics.component.ts\n            \n            injectable\n            StatisticsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/components/stop-create/stop-create.component.ts\n            \n            component\n            StopCreateComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/components/trip-create/trip-create.component.ts\n            \n            component\n            TripCreateComponent\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                src/app/components/trip-create/trip-create.component.ts\n            \n            interface\n            formStop\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/trip-edit/trip-edit.component.ts\n            \n            component\n            TripEditComponent\n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                src/app/components/trip-edit/trip-edit.component.ts\n            \n            interface\n            formStop\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/user-details/user-details.component.ts\n            \n            component\n            UserDetailsComponent\n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                src/app/components/users-management/users-management.component.ts\n            \n            component\n            UsersManagementComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/models/agency.ts\n            \n            class\n            Agency\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/route.ts\n            \n            class\n            Route\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/models/statistics.ts\n            \n            class\n            Statistics\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/stop-time.ts\n            \n            class\n            StopTime\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/models/stop.ts\n            \n            class\n            Stop\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/suspension.ts\n            \n            class\n            Suspension\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/trip.ts\n            \n            class\n            Trip\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/agency.service.ts\n            \n            injectable\n            AgencyService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/services/route.service.ts\n            \n            injectable\n            RouteService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/statistics.service.ts\n            \n            injectable\n            StatisticsService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/services/statistics.service.ts\n            \n            interface\n            MostUsedTransportResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/stop-time.service.ts\n            \n            injectable\n            StopTimeService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/stop.service.ts\n            \n            injectable\n            StopService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/suspension.service.ts\n            \n            injectable\n            SuspensionService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/services/trip.service.ts\n            \n            injectable\n            TripService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/transloco-root.module.ts\n            \n            injectable\n            TranslocoHttpLoader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            getBaseUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.3\n        \n            @angular/common : ^14.0.3\n        \n            @angular/compiler : ^14.0.3\n        \n            @angular/core : ^14.0.3\n        \n            @angular/forms : ^14.0.3\n        \n            @angular/google-maps : ^13.3.9\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^14.0.3\n        \n            @angular/platform-browser-dynamic : ^14.0.3\n        \n            @angular/platform-server : ^14.0.3\n        \n            @angular/router : ^14.0.3\n        \n            @ngneat/transloco : ^4.2.2\n        \n            awesome-snackbar : ^2.0.7\n        \n            bootstrap : ^5.1.3\n        \n            chart.js : ^4.2.0\n        \n            guid-typescript : ^1.0.9\n        \n            jquery : ^3.6.0\n        \n            oidc-client : ^1.11.5\n        \n            popper.js : ^1.16.0\n        \n            run-script-os : ^1.1.6\n        \n            rxjs : ~7.5.5\n        \n            tslib : ^2.4.0\n        \n            zone.js : ~0.11.6\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TransportType   (src/.../transport-type.ts)\n                        \n                        \n                            TravelDirection   (src/.../travel-direction.ts)\n                        \n                        \n                            UserRank   (src/.../user-rank.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/transport-type.ts\n    \n        \n            \n                \n                    \n                        \n                        TransportType\n                    \n                \n                    \n                        \n                            Enum for the type of transport of a route.\n\n                        \n                    \n                        \n                            \n                                 Tram\n                            \n                        \n                        \n                            \n                                 Metro\n                            \n                        \n                        \n                            \n                                 Train\n                            \n                        \n                        \n                            \n                                 Bus\n                            \n                        \n                        \n                            \n                                 Ferry\n                            \n                        \n            \n        \n\n    src/app/enums/travel-direction.ts\n    \n        \n            \n                \n                    \n                        \n                        TravelDirection\n                    \n                \n                    \n                        \n                            Enum for travel direction of a route.\n\n                        \n                    \n                        \n                            \n                                 Outbound\n                            \n                        \n                        \n                            \n                                 Inbound\n                            \n                        \n            \n        \n\n    src/app/enums/user-rank.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRank\n                    \n                \n                    \n                        \n                            Enum for the type of the rank of a user.\n\n                        \n                    \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                 Regular\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/formStop.html":{"url":"interfaces/formStop.html","title":"interface - formStop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  formStop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/trip-create/trip-create.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the stop form\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            stopId\n                                        \n                                \n                                \n                                        \n                                            stopTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        stopId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouteService } from '../../services/route.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route } from '../../models/route';\nimport { Stop } from '../../models/stop';\nimport { StopService } from '../../services/stop.service';\nimport { StopTime } from \"../../models/stop-time\";\nimport { Guid } from 'guid-typescript';\nimport { map, Observable } from 'rxjs';\nimport { MapDirectionsService } from '@angular/google-maps';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TravelDirection } from '../../enums/travel-direction';\nimport { Trip } from '../../models/trip';\nimport { TripService } from '../../services/trip.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport Snackbar from 'awesome-snackbar';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-trip-create',\n  templateUrl: './trip-create.component.html',\n  styleUrls: ['./trip-create.component.css']\n})\n/**\n * Class for the component of the page of Route Editing\n */\nexport class TripCreateComponent implements OnInit {\n  /**\n   * Options to be used by the Google-Map field.\n   */\n  mapOptions: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  };\n  /**\n   * Options to be used by the Directions-Renderer field.\n   */\n  directionsOptions: google.maps.DirectionsRendererOptions = {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field.\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n  /**\n   * Zoom level for the map to use at the start.\n   */\n  zoom = 11;\n  /**\n   * Coordinates for the map to be centered on.\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * List of markers that represents the stops of the route to edit.\n   */\n  markers: Array = new Array();\n  /**\n   * Holds the result from the call of the Directions API made from the list of markers.\n   */\n  directionsResults$!: Observable;\n\n  /**\n * Id of the route.\n */\n  routeId: string = '';\n  /**\n   * Route to edit.\n   */\n  route!: Route;\n  /**\n   * TransportType for reverse mapping in the html.\n   */\n  TravelDirection = TravelDirection;\n  /**\n   * All the existent stops.\n   */\n  AllStops: Stop[] = [];\n\n  /**\n * All the existent trips.\n */\n  AllTrips: Trip[] = [];\n  /**\n   * All the values of the TransportType enum.\n   */\n  directions: number[] = Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v));\n\n  /**\n   * Form data to be viewed in the page\n   */\n  createRouteForm = this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  });\n\n  /**\n   * Constructor for the component.\n   * Gets the route whose Id matches the one in the URL and passes its info to the form.\n   * Also gets all the existent stops.\n   * @param {ActivatedRoute} actRoute Gives information about the current route.\n   * @param {RouteService} routeService Service that communicates with the server and has various operations about Routes.\n   * @param {StopService} stopService Service that communicates with the server and has various operations about Stops.\n   * @param {FormBuilder} formBuilder Builds form data.\n   * @param {MapDirectionsService} mapDirectionsService Google service of the Directions API.\n   * @param {TripService} tripService Service that communicates with the server and has various operations about Trips.\n   * @param {Router} router Router.\n   * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n   * @param {TranslocoService} translocoService Service that perform the translation of the text.\n   */\n  constructor(private urlRoute: ActivatedRoute, private routeService: RouteService, private stopService: StopService,\n    private formBuilder: FormBuilder, private mapDirectionsService: MapDirectionsService, private tripService: TripService,\n    private router: Router, private stopTimeService: StopTimeService, private translocoService: TranslocoService) { }\n\n  ngOnInit(): void {\n    this.routeId = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.routeService.getRoute(this.routeId)\n      .subscribe((route) => {\n        this.stopTimeService.getStopsOfRoute(route.routeId).subscribe((stops) => {\n          this.route = new Route(route.routeId, route.agencyId, route.routeShortName, route.routeLongName,\n            route.routeTransportType, route.agency, stops);\n        });\n      });\n\n    this.tripService.getTripsOfRoute(this.routeId).subscribe((trips) => {\n      trips.forEach((trip) => {\n        this.AllTrips!.push(new Trip(trip.tripId, trip.tripHeadsign, trip.routeId, trip.serviceId, trip.direction, trip.shapeId));\n      });\n      \n    });\n\n\n    this.stopService.getStops().subscribe(result => {\n      this.AllStops = result;\n    }, error => console.error(error));\n  }\n\n  /**\n   * Adds a form to the page that lets the user select the details for a stop in the route.\n   */\n  addStop() {\n    const stopForm = this.formBuilder.group({\n      stopId: '',\n      stopTime: ''\n    });\n\n    this.stops.push(stopForm);\n  }\n\n  /**\n   * Removes the form of one of the route stops.\n   * @param {number} stopIndex The form index to delete.\n   */\n  removeStop(stopIndex: number) {\n    this.stops.removeAt(stopIndex);\n    this.updateMap();\n  }\n\n  /**\n   * Gets all the stop forms in the page.\n   */\n  get stops() {\n    return this.createRouteForm.controls[\"stops\"] as FormArray;\n  }\n\n  /**\n   * Casts a AbstractControl form to a FormGroup.\n   */\n  toFormGroup = (form: AbstractControl) => form as FormGroup;\n\n  /**\n   * Updates the map in the page by adding/removing markers and linking them together in one route.\n   */\n  updateMap() {\n    this.addMarkers();\n    this.linkMarkers();\n  }\n\n  /**\n   * Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n   */\n  private addMarkers() {\n    this.markers.splice(0);\n\n    this.createRouteForm.value.stops?.forEach(s => {\n      var stop = (s as formStop);\n      this.AllStops.forEach(compStop => {\n        if (compStop.stopId == stop.stopId) this.markers.push(new google.maps.LatLng(compStop.stopLat, compStop.stopLon));\n      });\n    });\n    this.center = {\n      lat: this.markers[Math.floor(this.markers.length / 2)].lat(),\n      lng: this.markers[Math.floor(this.markers.length / 2)].lng()\n    }\n  }\n\n  /**\n   * Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n   */\n  private linkMarkers() {\n    const request: google.maps.DirectionsRequest = {\n      origin: this.markers[0],\n      destination: this.markers[this.markers.length - 1],\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  /**\n   * Creates a trip object and sends it to the database using the tripService\n   */\n  onSubmit(): void {\n    if (this.createRouteForm.value.stops != null) {\n      if (this.createRouteForm.value.stops.length > 2) {\n        const stops = this.createRouteForm.value.stops as formStop[];\n        if (stops.every(s => s.stopId.length != 0 && s.stopTime.length != 0)) {\n          const tripId = Guid.create().toString();\n          let trip: Trip = new Trip(tripId, this.createRouteForm.controls.tripName.value!, this.routeId,\n            \"1\", Number(this.createRouteForm.controls.tripTransportDirection.value!), \"4560_0_1_a\")\n\n          this.tripService.addTrip(trip).subscribe(() => { }, () => { }, () => {\n            let idx = 1;\n            this.createRouteForm.value.stops!.forEach(s => {\n              var stop = (s as formStop);\n              var date = new Date();\n              date.setUTCHours(Number(stop.stopTime.substring(0, 2)));\n              date.setUTCMinutes(Number(stop.stopTime.substring(3, 5)));\n              let stopTime: StopTime = new StopTime(tripId, date, date, stop.stopId, idx, 0.0);\n              this.stopTimeService.addStopTime(stopTime).subscribe();\n              idx++;\n            });\n            this.router.navigate(['/', 'route-management']);\n          });\n        }\n        else {\n          new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message-empty-stops'), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      } else {\n        new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('login.list.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n      }\n    }\n\n    \n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n/**\n * Interface for the stop form\n */\ninterface formStop {\n  stopId: string,\n  stopTime: string\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/formStop-1.html":{"url":"interfaces/formStop-1.html","title":"interface - formStop-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  formStop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/trip-edit/trip-edit.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the stop form\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            departureTime\n                                        \n                                \n                                \n                                        \n                                            stopId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        departureTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Route } from '../../models/route';\nimport { StopTime } from '../../models/stop-time';\nimport { Trip } from '../../models/trip';\nimport { RouteService } from '../../services/route.service';\nimport { StopTimeService } from '../../services/stop-time.service';\nimport { TripService } from '../../services/trip.service';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TravelDirection } from '../../enums/travel-direction';\nimport { map, Observable } from 'rxjs';\nimport { Stop } from '../../models/stop';\nimport { MapDirectionsService } from '@angular/google-maps';\nimport { Console } from 'console';\nimport { StopService } from '../../services/stop.service';\nimport Snackbar from 'awesome-snackbar';\nimport { TranslocoService } from '@ngneat/transloco';\n\n\n@Component({\n  selector: 'app-trip-edit',\n  templateUrl: './trip-edit.component.html',\n  styleUrls: ['./trip-edit.component.css']\n})\nexport class TripEditComponent implements OnInit {\n\n  /**\n   * Options to be used by the Google-Map field.\n   */\n  mapOptions: google.maps.MapOptions = {\n    mapTypeId: 'roadmap',\n    disableDefaultUI: true,\n    zoomControl: true,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    draggable: false,\n  };\n  /**\n   * Options to be used by the Directions-Renderer field.\n   */\n  directionsOptions: google.maps.DirectionsRendererOptions = {\n    suppressMarkers: true,\n    suppressInfoWindows: true,\n  };\n  /**\n   * Options to be used by the Map-Marker field.\n   */\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n  /**\n   * Zoom level for the map to use at the start.\n   */\n  zoom = 11;\n  /**\n   * Coordinates for the map to be centered on.\n   */\n  center!: google.maps.LatLngLiteral;\n  /**\n   * List of markers that represents the stops of the route to edit.\n   */\n  markers: Array = new Array();\n  /**\n   * Holds the result from the call of the Directions API made from the list of markers.\n   */\n  directionsResults$!: Observable;\n\n  /**\n   * TransportType for reverse mapping in the html.\n   */\n  TravelDirection = TravelDirection;\n  /**\n   * All the existent stops.\n   */\n  AllStops: Stop[] = [];\n  /**\n   * All the values of the TransportType enum.\n   */\n  directions: number[] = Object.keys(TravelDirection).map(v => Number(v)).filter(v => Number.isFinite(v));\n\n  /**\n   * Form data to be viewed in the page\n   */\n  editRouteForm = this.formBuilder.group({\n    tripName: ['', Validators.required],\n    tripTransportDirection: this.formBuilder.control(null, Validators.required),\n    stops: this.formBuilder.array([]),\n  });\n\n  /**\n   * The trip the user has currently selected.\n   */\n  public selectedTrip!: Trip;\n  /**\n   * The stops belonging to the current selected trip.\n   */\n  public tripStops: StopTime[] = [];\n  /**\n   * A map with the all the trips of the route, with a list of their stop times.\n   */\n  public tripsStopsMap: Map = new Map();\n\n  /**\n * Constructor for the component.\n * Gets the route whose Id matches the one in the URL and passes its info to the form.\n * Also gets all the existent stops.\n * @param {ActivatedRoute} actRoute Gives information about the current route.\n * @param {TripService} tripService Service that communicates with the server and has various operations about Trips.\n * @param {StopTimeService} stopTimeService Service that communicates with the server and has various operations about StopTimes.\n * @param {FormBuilder} formBuilder Builds form data. \n * @param {Router} router Router.\n * @param {MapDirectionsService} mapDirectionsService Google service of the Directions API.\n * @param {StopService} stopService Service that communicates with the server and has various operations about Stops.\n * @param {TranslocoService} translocoService Service that perform the translation of the text.\n */\n  constructor(private urlRoute: ActivatedRoute, private tripService: TripService, private stopTimeService: StopTimeService,\n    private formBuilder: FormBuilder, private router: Router, private mapDirectionsService: MapDirectionsService,\n    private stopService: StopService, private translocoService: TranslocoService) { }\n\n  ngOnInit(): void {\n    const id = String(this.urlRoute.snapshot.paramMap.get(\"id\"));\n    this.tripService.getTrip(id)\n      .subscribe((trip) => {\n        this.stopTimeService.getStopsOfTrip(trip.tripId).subscribe((stops) => {\n          stops.forEach(stop => {\n            this.tripStops!.push(new StopTime(stop.tripId, stop.arrivalTime, stop.departureTime, stop.stopId, stop.stopSequence, stop.shapeDistTraveled, stop.trip, stop.stop));\n          })\n\n          this.selectedTrip = new Trip(trip.tripId, trip.tripHeadsign, trip.routeId, trip.serviceId, trip.direction, trip.shapeId);\n          this.editRouteForm.controls.tripName.patchValue(this.selectedTrip.tripHeadsign);\n          this.editRouteForm.controls.tripTransportDirection.patchValue(this.selectedTrip.direction);\n          this.editRouteForm.controls.stops.patchValue(this.tripStops!);\n\n\n          this.tripStops!.forEach(stopTime => {\n            const stopForm = this.formBuilder.group({\n              stopId: [stopTime.stopId, Validators.required],\n              departureTime: [stopTime.getHoursAndMinutesString(), Validators.required]\n              });\n            this.stops.push(stopForm);\n          });\n\n          console.log(this.tripStops!);\n          \n        }, (error) => { console.log(error) }, () => {\n          this.stopService.getStops().subscribe(result => {\n            this.AllStops = result;\n            this.updateMap();\n        });\n        });\n\n        \n      });\n  }\n\n  get stops() {\n    return this.editRouteForm.controls[\"stops\"] as FormArray;\n  }\n\n  /**\n * Adds a form to the page that lets the user select the details for a stop in the route.\n */\n  addStop() {\n    const stopForm = this.formBuilder.group({\n      stopId: '',\n      departureTime: ''\n    });\n\n    this.stops.push(stopForm);\n  }\n\n  /**\n   * Removes the form of one of the route stops.\n   * @param {number} stopIndex The form index to delete.\n   */\n  removeStop(stopIndex: number) {\n    this.stops.removeAt(stopIndex);\n    this.updateMap();\n  }\n\n  /**\n   * Casts a AbstractControl form to a FormGroup.\n   */\n  toFormGroup = (form: AbstractControl) => form as FormGroup;\n\n  /**\n   * Updates the map in the page by adding/removing markers and linking them together in one route.\n   */\n  updateMap() {\n    this.addMarkers();\n    this.linkMarkers();\n  }\n\n  /**\n   * Iterates through the list of stop forms and creates a new marker from the corresponding stop and its coordinates.\n   */\n  private addMarkers() {\n    this.markers.splice(0);\n\n    this.editRouteForm.value.stops?.forEach(s => {\n      var stop = (s as formStop);\n      this.AllStops.forEach(compStop => {\n        if (compStop.stopId == stop.stopId) this.markers.push(new google.maps.LatLng(compStop.stopLat, compStop.stopLon));\n      });\n    });\n    this.center = {\n      lat: this.markers[Math.floor(this.markers.length / 2)].lat(),\n      lng: this.markers[Math.floor(this.markers.length / 2)].lng()\n    }\n  }\n\n  /**\n   * Using the Google Directions API, shows the path the route takes using the first and last marker in the route.\n   */\n  private linkMarkers() {\n    const request: google.maps.DirectionsRequest = {\n      origin: this.markers[0],\n      waypoints: this.createWaypoints(),\n      destination: this.markers[this.markers.length - 1],\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n    this.directionsResults$ = this.mapDirectionsService.route(request).pipe(map(response => response.result));\n  }\n\n  private createWaypoints(): google.maps.DirectionsWaypoint[] {\n    var waypoints: google.maps.DirectionsWaypoint[] = [];\n    const MAX_WAYPOINTS: number = 25\n    var addWaypoint: boolean = true;\n    this.tripStops?.slice(1, this.tripStops.length - 1).forEach((stopTime) => {\n      if (waypoints.length  2) {\n        const stops = this.editRouteForm.value.stops as formStop[];\n        if (stops.every(s => s.stopId.length != 0 && s.departureTime.length != 0)) {\n          let trip: Trip = new Trip(this.selectedTrip.tripId, this.editRouteForm.controls.tripName.value!, this.selectedTrip.routeId,\n            this.selectedTrip.serviceId, Number(this.editRouteForm.controls.tripTransportDirection.value!), this.selectedTrip.shapeId)\n\n          this.tripService.editTrip(trip).subscribe();\n\n          let idx = 1;\n          this.editRouteForm.value.stops.forEach(s => {\n            var stop = (s as formStop);\n            var date = new Date();\n            date.setUTCHours(Number(stop.departureTime.substring(0, 2)));\n            date.setUTCMinutes(Number(stop.departureTime.substring(3, 5)));\n            let stopTime: StopTime = new StopTime(trip.tripId, date, date, stop.stopId, idx, 0.0);\n            this.stopTimeService.editStopTime(stopTime.tripId, idx, stopTime).subscribe(() => { }, () => {\n              this.stopTimeService.addStopTime(stopTime).subscribe();\n            });\n            idx++;\n          });\n\n          this.router.navigate(['/', 'route-management']);\n        } else {\n          new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message-empty-stops'), {\n            position: 'bottom-center',\n            actionText: this.translocoService.translate('login.list.hide'),\n            style: {\n              container: [\n                ['background-color', '#003F91']\n              ]\n            }\n          });\n        }\n      } else {\n        new Snackbar(this.translocoService.translate('route-management.create-edit-trip.error-message'), {\n          position: 'bottom-center',\n          actionText: this.translocoService.translate('login.list.hide'),\n          style: {\n            container: [\n              ['background-color', '#003F91']\n            ]\n          }\n        });\n      }\n    }\n     \n\n\n\n  }\n\n  /**\n   * Cancels the creation of a new stop. Redirects back to the previous page.\n   */\n  cancel(): void {\n    window.history.back();\n  }\n}\n\n/**\n * Interface for the stop form\n */\ninterface formStop {\n  stopId: string,\n  departureTime: string\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getBaseUrl   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getBaseUrl\n                        \n                    \n                \n            \n            \n                \ngetBaseUrl()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTraveller_Dashboard\nThis project was generated with Angular CLI version 12.0.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslocoRootModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavMenuComponent\n\nNavMenuComponent\n\nAppModule -->\n\nNavMenuComponent->AppModule\n\n\n\n\n\nRouteCreateComponent\n\nRouteCreateComponent\n\nAppModule -->\n\nRouteCreateComponent->AppModule\n\n\n\n\n\nRouteDetailsComponent\n\nRouteDetailsComponent\n\nAppModule -->\n\nRouteDetailsComponent->AppModule\n\n\n\n\n\nRouteEditComponent\n\nRouteEditComponent\n\nAppModule -->\n\nRouteEditComponent->AppModule\n\n\n\n\n\nRouteManagementComponent\n\nRouteManagementComponent\n\nAppModule -->\n\nRouteManagementComponent->AppModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nAppModule -->\n\nStatisticsComponent->AppModule\n\n\n\n\n\nStopCreateComponent\n\nStopCreateComponent\n\nAppModule -->\n\nStopCreateComponent->AppModule\n\n\n\n\n\nTripCreateComponent\n\nTripCreateComponent\n\nAppModule -->\n\nTripCreateComponent->AppModule\n\n\n\n\n\nTripEditComponent\n\nTripEditComponent\n\nAppModule -->\n\nTripEditComponent->AppModule\n\n\n\n\n\nUserDetailsComponent\n\nUserDetailsComponent\n\nAppModule -->\n\nUserDetailsComponent->AppModule\n\n\n\n\n\nUsersManagementComponent\n\nUsersManagementComponent\n\nAppModule -->\n\nUsersManagementComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nTranslocoRootModule\n\nTranslocoRootModule\n\nAppModule -->\n\nTranslocoRootModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            providers   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
